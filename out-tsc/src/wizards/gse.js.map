{"version":3,"file":"gse.js","sourceRoot":"","sources":["../../../src/wizards/gse.ts"],"names":[],"mappings":"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","sourcesContent":["import { html } from 'lit-element';\nimport { get } from 'lit-translate';\n\nimport {\n  ComplexAction,\n  createElement,\n  EditorAction,\n  getValue,\n  identity,\n  SimpleAction,\n  Wizard,\n  WizardActor,\n  WizardInput,\n} from '../foundation.js';\n\nimport { renderGseSmvAddress, updateAddress } from './address.js';\n\nimport { Checkbox } from '@material/mwc-checkbox';\n\nexport function getMTimeAction(\n  type: 'MinTime' | 'MaxTime',\n  oldTime: Element | null,\n  Time: string | null,\n  gse: Element\n): SimpleAction {\n  if (oldTime === null) {\n    const element = createElement(gse.ownerDocument, type, {\n      unit: 's',\n      multiplier: 'm',\n    });\n    element.textContent = Time;\n    return {\n      new: {\n        parent: gse,\n        element,\n        reference: gse.firstElementChild,\n      },\n    };\n  }\n\n  if (Time === null)\n    return {\n      old: {\n        parent: gse,\n        element: oldTime,\n        reference: oldTime.nextSibling,\n      },\n    };\n\n  const newTime = <Element>oldTime.cloneNode(false);\n  newTime.textContent = Time;\n  return {\n    old: { element: oldTime },\n    new: { element: newTime },\n  };\n}\n\nexport function updateGSEAction(element: Element): WizardActor {\n  return (inputs: WizardInput[], wizard: Element): EditorAction[] => {\n    const complexAction: ComplexAction = {\n      actions: [],\n      title: get('gse.action.addaddress', {\n        identity: identity(element),\n      }),\n    };\n\n    const instType: boolean =\n      (<Checkbox>wizard.shadowRoot?.querySelector('#instType'))?.checked ??\n      false;\n    const addressActions = updateAddress(element, inputs, instType);\n\n    addressActions.forEach(action => {\n      complexAction.actions.push(action);\n    });\n\n    const MinTime = getValue(inputs.find(i => i.label === 'MinTime')!);\n    const MaxTime = getValue(inputs.find(i => i.label === 'MaxTime')!);\n    if (\n      MinTime !==\n      (element.querySelector('MinTime')?.textContent?.trim() ?? null)\n    ) {\n      complexAction.actions.push(\n        getMTimeAction(\n          'MinTime',\n          element.querySelector('MinTime'),\n          MinTime,\n          element\n        )\n      );\n    }\n    if (\n      MaxTime !==\n      (element.querySelector('MaxTime')?.textContent?.trim() ?? null)\n    ) {\n      complexAction.actions.push(\n        getMTimeAction(\n          'MaxTime',\n          element.querySelector('MaxTime'),\n          MaxTime,\n          element\n        )\n      );\n    }\n\n    return [complexAction];\n  };\n}\n\nexport function editGseWizard(element: Element): Wizard {\n  const minTime = element.querySelector('MinTime')?.innerHTML.trim();\n  const maxTime = element.querySelector('MaxTime')?.innerHTML.trim();\n\n  return [\n    {\n      title: get('wizard.title.edit', { tagName: element.tagName }),\n      element,\n      primary: {\n        label: get('save'),\n        icon: 'edit',\n        action: updateGSEAction(element),\n      },\n      content: [\n        ...renderGseSmvAddress(element),\n        html`<wizard-textfield\n          label=\"MinTime\"\n          .maybeValue=${minTime}\n          nullable\n          suffix=\"ms\"\n          type=\"number\"\n        ></wizard-textfield>`,\n        html`<wizard-textfield\n          label=\"MaxTime\"\n          .maybeValue=${maxTime}\n          nullable\n          suffix=\"ms\"\n          type=\"number\"\n        ></wizard-textfield>`,\n      ],\n    },\n  ];\n}\n"]}