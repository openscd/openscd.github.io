{"version":3,"file":"dataset.js","sourceRoot":"","sources":["../../../src/wizards/dataset.ts"],"names":[],"mappings":"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","sourcesContent":["import { html } from 'lit-element';\nimport { get, translate } from 'lit-translate';\nimport {\n  cloneElement,\n  getValue,\n  identity,\n  Wizard,\n  WizardAction,\n  WizardActor,\n  WizardInput,\n} from '../foundation.js';\n\nexport function updateDataSetAction(element: Element): WizardActor {\n  return (inputs: WizardInput[]): WizardAction[] => {\n    const name = inputs.find(i => i.label === 'name')!.value!;\n    const desc = getValue(inputs.find(i => i.label === 'desc')!);\n\n    const oldName = element.getAttribute('name');\n    if (name === oldName && desc === element.getAttribute('desc')) return [];\n\n    const newElement = cloneElement(element, { name, desc });\n\n    const dataSetUpdateAction = [\n      { old: { element }, new: { element: newElement } },\n    ];\n\n    const cbUpdateAction =\n      name !== oldName\n        ? Array.from(\n            element.parentElement?.querySelectorAll(\n              `ReportControlBock[datSet=${oldName}], GSEControl[datSet=${oldName}],SampledValueControl[datSet=${oldName}] `\n            ) ?? []\n          ).map(cb => {\n            const newCb = cloneElement(element, { datSet: name });\n            return { old: { element: cb }, new: { element: newCb } };\n          })\n        : [];\n\n    return dataSetUpdateAction.concat(cbUpdateAction);\n  };\n}\n\nexport function editDataSetWizard(element: Element): Wizard {\n  const name = element.getAttribute('name');\n  const desc = element.getAttribute('desc');\n\n  return [\n    {\n      title: get('wizard.title.edit', { tagName: element.tagName }),\n      element,\n      primary: {\n        label: get('edit'),\n        icon: 'save',\n        action: updateDataSetAction(element),\n      },\n      content: [\n        html`<wizard-textfield\n          label=\"name\"\n          .maybeValue=${name}\n          helper=\"${translate('scl.name')}\"\n          required\n        >\n        </wizard-textfield>`,\n        html`<wizard-textfield\n          label=\"desc\"\n          .maybeValue=${desc}\n          helper=\"${translate('scl.desc')}\"\n          nullable\n          required\n        >\n        </wizard-textfield>`,\n        html`<filtered-list multi\n          >${Array.from(element.querySelectorAll('FCDA')).map(\n            fcda =>\n              html`<mwc-check-list-item value=\"${identity(fcda)}\"\n                >${(<string>identity(fcda)).split('>')[4]}</mwc-check-list-item\n              >`\n          )}</filtered-list\n        >`,\n      ],\n    },\n  ];\n}\n"]}