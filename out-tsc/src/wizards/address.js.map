{"version":3,"file":"address.js","sourceRoot":"","sources":["../../../src/wizards/address.ts"],"names":[],"mappings":"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","sourcesContent":["import { html, TemplateResult } from 'lit-html';\nimport { ifDefined } from 'lit-html/directives/if-defined';\nimport { translate } from 'lit-translate';\n\nimport {\n  Create,\n  createElement,\n  Delete,\n  getReference,\n  getValue,\n  WizardInput,\n} from '../foundation.js';\nimport {\n  pTypesGSESMV,\n  typeNullable,\n  typePattern,\n} from './foundation/p-types.js';\n\nexport function renderGseSmvAddress(parent: Element): TemplateResult[] {\n  const hasInstType = Array.from(parent.querySelectorAll('Address > P')).some(\n    pType => pType.getAttribute('xsi:type')\n  );\n\n  return [\n    html`<mwc-formfield\n      label=\"${translate('connectedap.wizard.addschemainsttype')}\"\n    >\n      <mwc-checkbox id=\"instType\" ?checked=\"${hasInstType}\"></mwc-checkbox>\n    </mwc-formfield>`,\n    html`${pTypesGSESMV.map(\n      ptype =>\n        html`<wizard-textfield\n          label=\"${ptype}\"\n          .maybeValue=${parent\n            .querySelector(`Address > P[type=\"${ptype}\"]`)\n            ?.innerHTML.trim() ?? null}\n          ?nullable=${typeNullable[ptype]}\n          pattern=\"${ifDefined(typePattern[ptype])}\"\n        ></wizard-textfield>`\n    )}`,\n  ];\n}\n\nfunction isEqualAddress(oldAddr: Element, newAdddr: Element): boolean {\n  return (\n    Array.from(oldAddr.querySelectorAll('P')).filter(\n      pType =>\n        !newAdddr\n          .querySelector(`Address > P[type=\"${pType.getAttribute('type')}\"]`)\n          ?.isEqualNode(pType)\n    ).length === 0\n  );\n}\n\nfunction createAddressElement(\n  inputs: WizardInput[],\n  parent: Element,\n  instType: boolean\n): Element {\n  const element = createElement(parent.ownerDocument, 'Address', {});\n\n  inputs\n    .filter(input => getValue(input) !== null)\n    .forEach(validInput => {\n      const type = validInput.label;\n      const child = createElement(parent.ownerDocument, 'P', { type });\n      if (instType)\n        child.setAttributeNS(\n          'http://www.w3.org/2001/XMLSchema-instance',\n          'xsi:type',\n          'tP_' + type\n        );\n      child.textContent = getValue(validInput);\n      element.appendChild(child);\n    });\n\n  return element;\n}\n\nexport function updateAddress(\n  parent: Element,\n  inputs: WizardInput[],\n  instType: boolean\n): (Create | Delete)[] {\n  const actions: (Create | Delete)[] = [];\n\n  const newAddress = createAddressElement(inputs, parent, instType);\n  const oldAddress = parent.querySelector('Address');\n\n  if (oldAddress !== null && !isEqualAddress(oldAddress, newAddress)) {\n    // We cannot use updateAction on address as both address child elements P are changed\n    actions.push({\n      old: {\n        parent: parent,\n        element: oldAddress,\n        reference: oldAddress.nextSibling,\n      },\n    });\n    actions.push({\n      new: {\n        parent: parent,\n        element: newAddress,\n        reference: oldAddress.nextSibling,\n      },\n    });\n  } else if (oldAddress === null)\n    actions.push({\n      new: {\n        parent: parent,\n        element: newAddress,\n        reference: getReference(parent, 'Address'),\n      },\n    });\n\n  return actions;\n}\n"]}