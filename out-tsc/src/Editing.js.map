{"version":3,"file":"Editing.js","sourceRoot":"","sources":["../../src/Editing.ts"],"names":[],"mappings":"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","sourcesContent":["import { LitElement, property } from 'lit-element';\nimport { get } from 'lit-translate';\n\nimport {\n  Create,\n  Delete,\n  EditorAction,\n  EditorActionEvent,\n  isCreate,\n  isDelete,\n  isMove,\n  isSimple,\n  isUpdate,\n  LitElementConstructor,\n  Mixin,\n  Move,\n  newLogEvent,\n  newValidateEvent,\n  OpenDocEvent,\n  SimpleAction,\n  Update,\n} from './foundation.js';\n\n/** Mixin that edits an `XML` `doc`, listening to [[`EditorActionEvent`]]s */\nexport type EditingElement = Mixin<typeof Editing>;\n\n/** @typeParam TBase - a type extending `LitElement`\n * @returns `Base` with an `XMLDocument` property \"`doc`\" and an event listener\n * applying [[`EditorActionEvent`]]s and dispatching [[`LogEvent`]]s. */\nexport function Editing<TBase extends LitElementConstructor>(Base: TBase) {\n  class EditingElement extends Base {\n    /** The `XMLDocument` to be edited */\n    @property({ attribute: false })\n    doc: XMLDocument | null = null;\n    /** The name of the current [[`doc`]] */\n    @property({ type: String }) docName = '';\n    /** The UUID of the current [[`doc`]] */\n    @property({ type: String }) docId = '';\n\n    private checkCreateValidity(create: Create): boolean {\n      if (create.checkValidity !== undefined) return create.checkValidity();\n\n      const invalid =\n        create.new.element.hasAttribute('name') &&\n        Array.from(create.new.parent.children).some(\n          elm =>\n            elm.tagName === create.new.element.tagName &&\n            elm.getAttribute('name') === create.new.element.getAttribute('name')\n        );\n\n      if (invalid)\n        this.dispatchEvent(\n          newLogEvent({\n            kind: 'error',\n            title: get('editing.error.create', {\n              name: create.new.element.tagName,\n            }),\n            message: get('editing.error.nameClash', {\n              parent:\n                create.new.parent instanceof HTMLElement\n                  ? create.new.parent.tagName\n                  : 'Document',\n              child: create.new.element.tagName,\n              name: create.new.element.getAttribute('name')!,\n            }),\n          })\n        );\n\n      return !invalid;\n    }\n\n    private onCreate(action: Create) {\n      if (!this.checkCreateValidity(action)) return false;\n\n      action.new.parent.insertBefore(action.new.element, action.new.reference);\n      return true;\n    }\n\n    private logCreate(action: Create) {\n      this.dispatchEvent(\n        newLogEvent({\n          kind: 'action',\n          title: get('editing.created', {\n            name: action.new.element.tagName,\n          }),\n          action: action,\n        })\n      );\n    }\n\n    private onDelete(action: Delete) {\n      action.old.element.remove();\n      return true;\n    }\n\n    private logDelete(action: Delete) {\n      this.dispatchEvent(\n        newLogEvent({\n          kind: 'action',\n          title: get('editing.deleted', {\n            name: action.old.element.tagName,\n          }),\n          action: action,\n        })\n      );\n    }\n\n    private checkMoveValidity(move: Move): boolean {\n      if (move.checkValidity !== undefined) return move.checkValidity();\n\n      const invalid =\n        move.old.element.hasAttribute('name') &&\n        move.new.parent !== move.old.parent &&\n        Array.from(move.new.parent.children).some(\n          elm =>\n            elm.tagName === move.old.element.tagName &&\n            elm.getAttribute('name') === move.old.element.getAttribute('name')\n        );\n\n      if (invalid)\n        this.dispatchEvent(\n          newLogEvent({\n            kind: 'error',\n            title: get('editing.error.move', {\n              name: move.old.element.tagName,\n            }),\n            message: get('editing.error.nameClash', {\n              parent: move.new.parent.tagName,\n              child: move.old.element.tagName,\n              name: move.old.element.getAttribute('name')!,\n            }),\n          })\n        );\n\n      return !invalid;\n    }\n\n    private onMove(action: Move) {\n      if (!this.checkMoveValidity(action)) return false;\n\n      action.new.parent.insertBefore(action.old.element, action.new.reference);\n      return true;\n    }\n\n    private logMove(action: Move) {\n      this.dispatchEvent(\n        newLogEvent({\n          kind: 'action',\n          title: get('editing.moved', {\n            name: action.old.element.tagName,\n          }),\n          action: action,\n        })\n      );\n    }\n\n    private checkUpdateValidity(update: Update): boolean {\n      if (update.checkValidity !== undefined) return update.checkValidity();\n\n      const invalid =\n        update.new.element.hasAttribute('name') &&\n        update.new.element.getAttribute('name') !==\n          update.old.element.getAttribute('name') &&\n        Array.from(update.old.element.parentElement?.children ?? []).some(\n          elm =>\n            elm.tagName === update.new.element.tagName &&\n            elm.getAttribute('name') === update.new.element.getAttribute('name')\n        );\n\n      if (invalid)\n        this.dispatchEvent(\n          newLogEvent({\n            kind: 'error',\n            title: get('editing.error.update', {\n              name: update.new.element.tagName,\n            }),\n            message: get('editing.error.nameClash', {\n              parent: update.old.element.parentElement!.tagName,\n              child: update.new.element.tagName,\n              name: update.new.element.getAttribute('name')!,\n            }),\n          })\n        );\n\n      return !invalid;\n    }\n\n    private onUpdate(action: Update) {\n      if (!this.checkUpdateValidity(action)) return false;\n\n      action.new.element.append(...Array.from(action.old.element.children));\n      action.old.element.replaceWith(action.new.element);\n      return true;\n    }\n\n    private logUpdate(action: Update) {\n      this.dispatchEvent(\n        newLogEvent({\n          kind: 'action',\n          title: get('editing.updated', {\n            name: action.new.element.tagName,\n          }),\n          action: action,\n        })\n      );\n    }\n\n    private onSimpleAction(action: SimpleAction) {\n      if (isMove(action)) return this.onMove(action as Move);\n      else if (isCreate(action)) return this.onCreate(action as Create);\n      else if (isDelete(action)) return this.onDelete(action as Delete);\n      else if (isUpdate(action)) return this.onUpdate(action as Update);\n    }\n\n    private logSimpleAction(action: SimpleAction) {\n      if (isMove(action)) this.logMove(action as Move);\n      else if (isCreate(action)) this.logCreate(action as Create);\n      else if (isDelete(action)) this.logDelete(action as Delete);\n      else if (isUpdate(action)) this.logUpdate(action as Update);\n    }\n\n    private onAction(event: EditorActionEvent<EditorAction>) {\n      if (isSimple(event.detail.action)) {\n        if (this.onSimpleAction(event.detail.action))\n          this.logSimpleAction(event.detail.action);\n      } else if (event.detail.action.actions.length > 0) {\n        event.detail.action.actions.forEach(element =>\n          this.onSimpleAction(element)\n        );\n        this.dispatchEvent(\n          newLogEvent({\n            kind: 'action',\n            title: event.detail.action.title,\n            action: event.detail.action,\n          })\n        );\n      }\n\n      this.dispatchEvent(newValidateEvent());\n\n      for (const element of event.composedPath())\n        if (element instanceof LitElement) element.requestUpdate();\n    }\n\n    private async onOpenDoc(event: OpenDocEvent) {\n      this.doc = event.detail.doc;\n      this.docName = event.detail.docName;\n      this.docId = event.detail.docId ?? '';\n\n      await this.updateComplete;\n\n      this.dispatchEvent(newValidateEvent());\n\n      this.dispatchEvent(\n        newLogEvent({\n          kind: 'info',\n          title: get('openSCD.loaded', { name: this.docName }),\n        })\n      );\n    }\n\n    constructor(...args: any[]) {\n      super(...args);\n\n      this.addEventListener('editor-action', this.onAction);\n      this.addEventListener('open-doc', this.onOpenDoc);\n    }\n  }\n\n  return EditingElement;\n}\n"]}