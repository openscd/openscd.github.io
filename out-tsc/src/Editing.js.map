{"version":3,"file":"Editing.js","sourceRoot":"","sources":["../../src/Editing.ts"],"names":[],"mappings":"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","sourcesContent":["import {\n  Create,\n  Delete,\n  EditorAction,\n  EditorActionEvent,\n  LitElementConstructor,\n  Mixin,\n  Move,\n  Update,\n  isCreate,\n  isDelete,\n  isMove,\n  isUpdate,\n  newLogEvent,\n} from './foundation.js';\n\nimport { LitElement, property } from 'lit-element';\nimport { get } from 'lit-translate';\nexport function newEmptySCD(): XMLDocument {\n  return document.implementation.createDocument(\n    'http://www.iec.ch/61850/2003/SCL',\n    'SCL',\n    null\n  );\n}\n\nexport type EditingElement = Mixin<typeof Editing>;\n\nexport function Editing<TBase extends LitElementConstructor>(Base: TBase) {\n  class EditingElement extends Base {\n    /** The `XMLDocument` being edited. */\n    @property()\n    doc: XMLDocument = newEmptySCD();\n\n    private onCreate(event: EditorActionEvent<Create>) {\n      event.detail.action.new.parent.insertBefore(\n        event.detail.action.new.element,\n        event.detail.action.new.reference\n      );\n      this.dispatchEvent(\n        newLogEvent({\n          kind: 'action',\n          title: get('editing.created', {\n            name: event.detail.action.new.element.tagName,\n          }),\n          action: event.detail.action,\n        })\n      );\n    }\n\n    private onDelete(event: EditorActionEvent<Delete>) {\n      event.detail.action.old.element.remove();\n      this.dispatchEvent(\n        newLogEvent({\n          kind: 'action',\n          title: get('editing.deleted', {\n            name: event.detail.action.old.element.tagName,\n          }),\n          action: event.detail.action,\n        })\n      );\n    }\n\n    private onMove(event: EditorActionEvent<Move>) {\n      event.detail.action.new.parent.insertBefore(\n        event.detail.action.old.element,\n        event.detail.action.new.reference\n      );\n      this.dispatchEvent(\n        newLogEvent({\n          kind: 'action',\n          title: get('editing.moved', {\n            name: event.detail.action.old.element.tagName,\n          }),\n          action: event.detail.action,\n        })\n      );\n    }\n\n    private onUpdate(event: EditorActionEvent<Update>) {\n      event.detail.action.new.element.append(\n        ...Array.from(event.detail.action.old.element.children)\n      );\n      event.detail.action.old.element.replaceWith(\n        event.detail.action.new.element\n      );\n      this.dispatchEvent(\n        newLogEvent({\n          kind: 'action',\n          title: get('editing.updated', {\n            name: event.detail.action.new.element.tagName,\n          }),\n          action: event.detail.action,\n        })\n      );\n    }\n\n    private onAction(event: EditorActionEvent<EditorAction>) {\n      if (isMove(event.detail.action))\n        this.onMove(event as EditorActionEvent<Move>);\n      else if (isCreate(event.detail.action))\n        this.onCreate(event as EditorActionEvent<Create>);\n      else if (isDelete(event.detail.action))\n        this.onDelete(event as EditorActionEvent<Delete>);\n      else if (isUpdate(event.detail.action))\n        this.onUpdate(event as EditorActionEvent<Update>);\n\n      for (const element of event.composedPath())\n        if (element instanceof LitElement) element.requestUpdate();\n    }\n\n    constructor(...args: any[]) {\n      super(...args);\n\n      this.addEventListener('editor-action', this.onAction);\n    }\n  }\n\n  return EditingElement;\n}\n"]}