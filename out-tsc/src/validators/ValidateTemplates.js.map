{"version":3,"file":"ValidateTemplates.js","sourceRoot":"","sources":["../../../src/validators/ValidateTemplates.ts"],"names":[],"mappings":";AAAA,OAAO,EAAE,UAAU,EAAE,QAAQ,EAAE,MAAM,aAAa,CAAC;AACnD,OAAO,EAAE,GAAG,EAAE,MAAM,eAAe,CAAC;AACpC,OAAO,EAGL,aAAa,EACb,WAAW,GACZ,MAAM,kBAAkB,CAAC;AAC1B,OAAO,EAAE,gBAAgB,EAAE,MAAM,2BAA2B,CAAC;AAI7D,MAAM,UAAU,QAAQ,CAAC,MAAwB,EAAE,WAAmB;IACpE,MAAM,IAAI,GAAe,MAAO,CAAC,IAAI,CAAC;IACtC,MAAM,KAAK,GAAmB,MAAO,CAAC,KAAK,CAAC;IAC5C,MAAM,OAAO,GAAmB,MAAO,CAAC,OAAO,CAAC;IAEhD,IAAI,IAAI;QACN,QAAQ;aACL,aAAa,CAAC,UAAU,CAAC;YAC1B,EAAE,aAAa,CAAC,WAAW,CAAY,MAAM,CAAC,CAAC,CAAC;;QAElD,QAAQ,CAAC,aAAa,CAAC,UAAU,CAAC,EAAE,aAAa,CAC/C,aAAa,CAAC;YACZ,WAAW;YACX,KAAK;YACL,OAAO;SACR,CAAC,CACH,CAAC;AACN,CAAC;AAED,MAAM,CAAC,OAAO,OAAO,iBAAkB,SAAQ,UAAU;IASvD,KAAK,CAAC,QAAQ;QACZ,MAAM,QAAQ,GAAoB,EAAE,CAAC;QAErC,MAAM,CAAC,OAAO,EAAE,QAAQ,EAAE,OAAO,CAAC,GAAG;YACnC,IAAI,CAAC,GAAG,CAAC,eAAe,CAAC,YAAY,CAAC,SAAS,CAAC,IAAI,EAAE;YACtD,IAAI,CAAC,GAAG,CAAC,eAAe,CAAC,YAAY,CAAC,UAAU,CAAC,IAAI,EAAE;YACvD,IAAI,CAAC,GAAG,CAAC,eAAe,CAAC,YAAY,CAAC,SAAS,CAAC,IAAI,EAAE;SACvD,CAAC;QAEF,IAAI,CAAC,CAAC,OAAO,KAAK,MAAM,IAAI,QAAQ,KAAK,GAAG,IAAI,MAAM,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,EAAE;YACpE,QAAQ,CAAC,aAAa,CAAC,UAAU,CAAC,EAAE,aAAa,CAC/C,aAAa,CAAC;gBACZ,WAAW,EAAE,IAAI,CAAC,QAAQ;gBAC1B,KAAK,EAAE,GAAG,CAAC,iBAAiB,CAAC;gBAC7B,OAAO,EAAE,EAAE;aACZ,CAAC,CACH,CAAC;YACF,OAAO;SACR;QAED,MAAM,IAAI,GAAG,IAAI,CAAC,GAAG,CAAC,aAAa,CAAC,mBAAmB,CAAC,CAAC;QACzD,IAAI,CAAC,IAAI;YAAE,OAAO;QAElB,MAAM,cAAc,GAAG,MAAM,gBAAgB,CAAC,IAAI,CAAC,CAAC;QACpD,IAAI,cAAc,CAAC,MAAM,KAAK,CAAC;YAC7B,cAAc,CAAC,IAAI,CAAC;gBAClB,KAAK,EAAE,GAAG,CAAC,iBAAiB,CAAC;aAC9B,CAAC,CAAC;QAEL,cAAc,CAAC,OAAO,CAAC,KAAK,CAAC,EAAE,CAAC,QAAQ,CAAC,KAAK,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC;IAClE,CAAC;CACF;AAtCC;IADC,QAAQ,CAAC,EAAE,SAAS,EAAE,KAAK,EAAE,CAAC;8CACb;AAElB;IADC,QAAQ,EAAE;kDACM;AAGjB;IADC,QAAQ,EAAE;mDACO","sourcesContent":["import { LitElement, property } from 'lit-element';\nimport { get } from 'lit-translate';\nimport {\n  LogDetail,\n  LogDetailBase,\n  newIssueEvent,\n  newLogEvent,\n} from '../foundation.js';\nimport { validateChildren } from './templates/foundation.js';\n\ntype ValidationResult = LogDetailBase | LogDetail;\n\nexport function dispatch(detail: ValidationResult, validatorId: string): void {\n  const kind = (<LogDetail>detail).kind;\n  const title = (<LogDetailBase>detail).title;\n  const message = (<LogDetailBase>detail).message;\n\n  if (kind)\n    document\n      .querySelector('open-scd')\n      ?.dispatchEvent(newLogEvent(<LogDetail>detail));\n  else\n    document.querySelector('open-scd')?.dispatchEvent(\n      newIssueEvent({\n        validatorId,\n        title,\n        message,\n      })\n    );\n}\n\nexport default class ValidateTemplates extends LitElement {\n  @property({ attribute: false })\n  doc!: XMLDocument;\n  @property()\n  docName!: string;\n\n  @property()\n  pluginId!: string;\n\n  async validate(): Promise<void> {\n    const promises: Promise<void>[] = [];\n\n    const [version, revision, release] = [\n      this.doc.documentElement.getAttribute('version') ?? '',\n      this.doc.documentElement.getAttribute('revision') ?? '',\n      this.doc.documentElement.getAttribute('release') ?? '',\n    ];\n\n    if (!(version === '2007' && revision === 'B' && Number(release) > 3)) {\n      document.querySelector('open-scd')?.dispatchEvent(\n        newIssueEvent({\n          validatorId: this.pluginId,\n          title: get('diag.missingnsd'),\n          message: '',\n        })\n      );\n      return;\n    }\n\n    const data = this.doc.querySelector('DataTypeTemplates');\n    if (!data) return;\n\n    const issuesTemaplte = await validateChildren(data);\n    if (issuesTemaplte.length === 0)\n      issuesTemaplte.push({\n        title: get('diag.zeroissues'),\n      });\n\n    issuesTemaplte.forEach(error => dispatch(error, this.pluginId));\n  }\n}\n"]}