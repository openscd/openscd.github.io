{"version":3,"file":"Wizarding.js","sourceRoot":"","sources":["../../src/Wizarding.ts"],"names":[],"mappings":";AAAA,OAAO,EAAE,IAAI,EAAE,gBAAgB,EAA4B,MAAM,aAAa,CAAC;AAC/E,OAAO,EACL,aAAa,GAKd,MAAM,iBAAiB,CAAC;AAEzB,OAAO,oBAAoB,CAAC;AAI5B,MAAM,UAAU,SAAS,CAAsC,IAAW;IACxE,MAAM,gBAAiB,SAAQ,IAAI;QAUjC,YAAY,GAAG,IAAW;YACxB,KAAK,CAAC,GAAG,IAAI,CAAC,CAAC;YATjB,aAAQ,GAAa,EAAE,CAAC;YAWtB,IAAI,CAAC,gBAAgB,CAAC,QAAQ,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC;QACjD,CAAC;QAVD,QAAQ,CAAC,EAAe;YACtB,IAAI,EAAE,CAAC,MAAM,CAAC,MAAM,KAAK,IAAI;gBAAE,IAAI,CAAC,QAAQ,CAAC,KAAK,EAAE,CAAC;;gBAChD,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,EAAE,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;YAC1C,IAAI,CAAC,aAAa,CAAC,UAAU,CAAC,CAAC;QACjC,CAAC;QAQD,MAAM;YACJ,OAAO,IAAI,CAAA,GAAG,aAAa,CAAC,KAAK,CAAC,MAAM,EAAE,CAAC;QACzC,IAAI,CAAC,QAAQ,CAAC,MAAM;gBACpB,CAAC,CAAC,IAAI,CAAA,0BAA0B,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,mBAAmB;gBACnE,CAAC,CAAC,EAAE,EAAE,CAAC;QACX,CAAC;KACF;IApBC;QADC,gBAAgB,EAAE;sDACK;IAsB1B,OAAO,gBAAgB,CAAC;AAC1B,CAAC","sourcesContent":["import { html, internalProperty, property, TemplateResult } from 'lit-element';\nimport {\n  ifImplemented,\n  LitElementConstructor,\n  Mixin,\n  Wizard,\n  WizardEvent,\n} from './foundation.js';\n\nimport './wizard-dialog.js';\n\nexport type WizardingElement = Mixin<typeof Wizarding>;\n\nexport function Wizarding<TBase extends LitElementConstructor>(Base: TBase) {\n  class WizardingElement extends Base {\n    @internalProperty()\n    workflow: Wizard[] = [];\n\n    onWizard(we: WizardEvent) {\n      if (we.detail.wizard === null) this.workflow.shift();\n      else this.workflow.push(we.detail.wizard);\n      this.requestUpdate('workflow');\n    }\n\n    constructor(...args: any[]) {\n      super(...args);\n\n      this.addEventListener('wizard', this.onWizard);\n    }\n\n    render(): TemplateResult {\n      return html`${ifImplemented(super.render())}\n      ${this.workflow.length\n        ? html`<wizard-dialog .wizard=${this.workflow[0]}></wizard-dialog>`\n        : ''}`;\n    }\n  }\n\n  return WizardingElement;\n}\n"]}