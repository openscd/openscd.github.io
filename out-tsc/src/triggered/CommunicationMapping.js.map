{"version":3,"file":"CommunicationMapping.js","sourceRoot":"","sources":["../../../src/triggered/CommunicationMapping.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,IAAI,EAAE,UAAU,EAAE,MAAM,aAAa,CAAC;AAC/C,OAAO,EAAE,GAAG,EAAE,MAAM,eAAe,CAAC;AAMpC,OAAO,EACL,aAAa,EAEb,iBAAiB,EACjB,YAAY,EACZ,QAAQ,EACR,cAAc,EACd,SAAS,EACT,QAAQ,GAKT,MAAM,kBAAkB,CAAC;AAE1B,OAAO,EAAE,UAAU,EAAE,iBAAiB,EAAE,SAAS,EAAE,MAAM,aAAa,CAAC;AAEvE,SAAS,OAAO,CAAC,QAAyB;IACxC,IAAI,OAAO,QAAQ,KAAK,QAAQ;QAAE,OAAO,EAAE,CAAC;IAE5C,OAAO,SAAS,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC;AACtC,CAAC;AAED,SAAS,UAAU,CAAC,QAAyB;IAC3C,IAAI,OAAO,QAAQ,KAAK,QAAQ;QAAE,OAAO,EAAE,CAAC;IAE5C,OAAO,SAAS,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC;AACtC,CAAC;AAED,SAAS,cAAc,CAAC,GAAgB,EAAE,QAAgB;IACxD,IAAI,QAAQ,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,MAAM,KAAK,CAAC,EAAE;QACpC,OAAO,GAAG,CAAC,aAAa,CAAC,QAAQ,CAAC,IAAI,EAAE,QAAQ,CAAC,CAAC,CAAC;KACpD;IAED,IAAI,QAAQ,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,MAAM,KAAK,CAAC,EAAE;QACpC,IAAI,UAAU,CAAC,QAAQ,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,MAAM,GAAG,CAAC,EAAE;YAC9C,OAAO,GAAG,CAAC,aAAa,CAAC,QAAQ,CAAC,IAAI,EAAE,QAAQ,CAAC,CAAC,CAAC;SACpD;QAED,IAAI,UAAU,CAAC,QAAQ,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,MAAM,KAAK,CAAC,EAAE;YAChD,OAAO,GAAG,CAAC,aAAa,CAAC,QAAQ,CAAC,KAAK,EAAE,QAAQ,CAAC,CAAC,CAAC;SACrD;KACF;IAED,OAAO,IAAI,CAAC;AACd,CAAC;AAED,SAAS,WAAW,CAAC,EAAW,EAAE,QAAgB;IAChD,KAAK,MAAM,QAAQ,IAAI,KAAK,CAAC,IAAI,CAAC,EAAE,CAAC,oBAAoB,CAAC,UAAU,CAAC,CAAC,EAAE;QACtE,MAAM,CAAC,OAAO,EAAE,KAAK,EAAE,MAAM,EAAE,MAAM,EAAE,OAAO,EAAE,MAAM,CAAC,GAAG;YACxD,SAAS;YACT,OAAO;YACP,QAAQ;YACR,QAAQ;YACR,SAAS;YACT,QAAQ;SACT,CAAC,GAAG,CAAC,SAAS,CAAC,EAAE,CAAC,QAAQ,CAAC,YAAY,CAAC,SAAS,CAAC,CAAC,CAAC;QAErD,MAAM,EAAE,GAAG,cAAc,CAAC,EAAE,CAAC,aAAa,EAAE,QAAQ,CAAC,CAAC;QACtD,IAAI,CAAC,EAAE;YAAE,MAAM;QACf,MAAM,GAAG,GAAG,EAAE,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;QAC9B,MAAM,EAAE,GAAG,EAAE,CAAC,OAAO,CAAC,aAAa,CAAC,CAAC;QACrC,MAAM,EAAE,GAAG,EAAE,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC;QAEjC,IAAI,QAAQ,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,MAAM,KAAK,CAAC,EAAE;YACpC,IACE,OAAO,KAAK,GAAG,EAAE,YAAY,CAAC,MAAM,CAAC;gBACrC,KAAK,KAAK,EAAE,EAAE,YAAY,CAAC,MAAM,CAAC;gBAClC,MAAM,KAAK,EAAE,EAAE,YAAY,CAAC,MAAM,CAAC;gBACnC,CAAC,MAAM,IAAI,EAAE,CAAC,KAAK,CAAC,EAAE,CAAC,YAAY,CAAC,QAAQ,CAAC,IAAI,EAAE,CAAC;gBACpD,OAAO,KAAK,EAAE,CAAC,YAAY,CAAC,SAAS,CAAC;gBACtC,CAAC,MAAM,IAAI,EAAE,CAAC,KAAK,CAAC,EAAE,CAAC,YAAY,CAAC,MAAM,CAAC,IAAI,EAAE,CAAC;gBAElD,OAAO,IAAI,CAAC;SACf;QAED,IAAI,QAAQ,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,MAAM,KAAK,CAAC,EAAE;YACpC,IAAI,UAAU,CAAC,QAAQ,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,MAAM,GAAG,CAAC,EAAE;gBAC9C,mEAAmE;gBACnE,qEAAqE;gBACrE,2BAA2B;gBAC3B,MAAM,OAAO,GAAG,GAAG,EAAE,gBAAgB,CAAC,aAAa,CAAC,CAAC,MAAM,CAAC;gBAC5D,IACE,OAAO,KAAK,GAAG,EAAE,YAAY,CAAC,MAAM,CAAC;oBACrC,OAAO;oBACP,CAAC,OAAO,IAAI,CAAC,IAAI,KAAK,KAAK,EAAE,EAAE,YAAY,CAAC,MAAM,CAAC,CAAC;oBACpD,CAAC,MAAM,IAAI,EAAE,CAAC,KAAK,CAAC,EAAE,CAAC,YAAY,CAAC,QAAQ,CAAC,IAAI,EAAE,CAAC;oBACpD,OAAO,KAAK,EAAE,CAAC,YAAY,CAAC,SAAS,CAAC;oBACtC,CAAC,MAAM,IAAI,EAAE,CAAC,KAAK,CAAC,EAAE,CAAC,YAAY,CAAC,MAAM,CAAC,IAAI,EAAE,CAAC;oBAElD,OAAO,IAAI,CAAC;aACf;YAED,IAAI,UAAU,CAAC,QAAQ,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,MAAM,KAAK,CAAC,EAAE;gBAChD,IACE,OAAO,KAAK,GAAG,EAAE,YAAY,CAAC,MAAM,CAAC;oBACrC,KAAK,KAAK,EAAE,EAAE,YAAY,CAAC,MAAM,CAAC;oBAClC,MAAM,KAAK,EAAE,EAAE,YAAY,CAAC,MAAM,CAAC;oBACnC,OAAO,KAAK,EAAE,CAAC,YAAY,CAAC,SAAS,CAAC;oBAEtC,OAAO,IAAI,CAAC;aACf;SACF;KACF;IAED,OAAO,KAAK,CAAC;AACf,CAAC;AAED,SAAS,iBAAiB,CAAC,GAAgB;IACzC,OAAO,CAAC,MAAqB,EAAE,MAAe,EAAkB,EAAE;QAChE,MAAM,UAAU,GAAmB,CAC1B,MAAM,CAAC,UAAW,CAAC,aAAa,CAAC,aAAa,CAAE,CAAC,QAAQ,CACjE,CAAC;QAEF,MAAM,WAAW,GAAmB,CAC3B,MAAM,CAAC,UAAW,CAAC,aAAa,CAAC,WAAW,CAAE,CAAC,QAAQ,CAC/D,CAAC;QAEF,MAAM,OAAO,GAAmB,EAAE,CAAC;QAEnC,WAAW,CAAC,OAAO,CAAC,UAAU,CAAC,EAAE;YAC/B,MAAM,UAAU,GAAG,UAAU,CAAC,KAAK,CAAC;YAEpC,MAAM,SAAS,GAAc,UAAU;iBACpC,GAAG,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,KAAK,CAAC;iBACnB,GAAG,CAAC,OAAO,CAAC,EAAE,CAAC,GAAG,CAAC,aAAa,CAAC,QAAQ,CAAC,eAAe,EAAE,OAAO,CAAC,CAAC,CAAC;iBACrE,MAAM,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,KAAK,IAAI,CAAC,CAAC;YAE7B,SAAS,CAAC,OAAO,CAAC,EAAE,CAAC,EAAE;gBACrB,4DAA4D;gBAC5D,IAAI,EAAE,CAAC,aAAa,CAAC,YAAY,CAAC,KAAK,IAAI,EAAE;oBAC3C,MAAM,UAAU,GAAY,aAAa,CAAC,GAAG,EAAE,YAAY,EAAE;wBAC3D,GAAG,EAAE,GAAG;qBACT,CAAC,CAAC;oBACH,EAAE,CAAC,WAAW,CAAC,UAAU,CAAC,CAAC;iBAC5B;gBAED,MAAM,EAAE,GAAG,cAAc,CAAC,GAAG,EAAE,UAAU,CAAC,CAAC;gBAC3C,IACE,EAAE,CAAC,aAAa,CAAC,YAAY,CAAC,KAAK,IAAI;oBACvC,CAAC,WAAW,CAAC,EAAE,EAAE,UAAU,CAAC;oBAC5B,EAAE,EACF;oBACA,MAAM,OAAO,GAAY,aAAa,CAAC,GAAG,EAAE,UAAU,EAAE;wBACtD,OAAO,EAAE,EAAE,EAAE,OAAO,CAAC,KAAK,CAAC,EAAE,YAAY,CAAC,MAAM,CAAC,IAAI,IAAI;wBACzD,KAAK,EAAE,EAAE,EAAE,OAAO,CAAC,aAAa,CAAC,EAAE,YAAY,CAAC,MAAM,CAAC,IAAI,IAAI;wBAC/D,MAAM,EAAE,EAAE,EAAE,OAAO,CAAC,SAAS,CAAC,EAAE,YAAY,CAAC,MAAM,CAAC,IAAI,KAAK;wBAC7D,MAAM,EAAE,EAAE,EAAE,YAAY,CAAC,QAAQ,CAAC,IAAI,EAAE;wBACxC,OAAO,EAAE,EAAE,EAAE,YAAY,CAAC,SAAS,CAAC,IAAI,EAAE;wBAC1C,MAAM,EAAE,EAAE,EAAE,YAAY,CAAC,MAAM,CAAC,IAAI,EAAE,EAAE,gCAAgC;qBACzE,CAAC,CAAC;oBACH,OAAO,CAAC,IAAI,CAAC;wBACX,GAAG,EAAE;4BACH,MAAM,EAAE,EAAE,CAAC,aAAa,CAAC,YAAY,CAAE;4BACvC,OAAO;4BACP,SAAS,EAAE,YAAY,CACrB,EAAE,CAAC,aAAa,CAAC,YAAY,CAAE,EAC/B,UAAU,CACX;yBACF;qBACF,CAAC,CAAC;iBACJ;YACH,CAAC,CAAC,CAAC;QACL,CAAC,CAAC,CAAC;QAEH,OAAO,CAAC,IAAI,CAAC,GAAG,EAAE,CAAC,0BAA0B,CAAC,GAAG,CAAC,CAAC,CAAC;QAEpD,OAAO,OAAO,CAAC;IACjB,CAAC,CAAC;AACJ,CAAC;AAED,MAAM,UAAU,cAAc,CAC5B,UAAqB,EACrB,OAAgB;IAEhB,OAAO;QACL;YACE,KAAK,EAAE,GAAG,CAAC,iCAAiC,EAAE;gBAC5C,OAAO,EAAE,OAAO,CAAC,YAAY,CAAC,MAAM,CAAC,IAAI,EAAE;aAC5C,CAAC;YACF,OAAO,EAAE;gBACP,KAAK,EAAE,GAAG,CAAC,SAAS,CAAC;gBACrB,IAAI,EAAE,EAAE;gBACR,MAAM,EAAE,iBAAiB,CAAC,OAAO,CAAC,aAAa,CAAC;aACjD;YACD,SAAS,EAAE;gBACT,KAAK,EAAE,GAAG,CAAC,QAAQ,CAAC;gBACpB,IAAI,EAAE,EAAE;gBACR,MAAM,EAAE,oBAAoB,CAAC,OAAO,CAAC,aAAa,CAAC;aACpD;YACD,OAAO,EAAE;gBACP,IAAI,CAAA;;;;;;;gCAOoB,GAAG,CAAC,YAAY,CAAC;eAClC,UAAU;qBACV,MAAM,CACL,SAAS,CAAC,EAAE,CACV,SAAS,CAAC,YAAY,CAAC,MAAM,CAAC;oBAC9B,OAAO,CAAC,YAAY,CAAC,MAAM,CAAC,CAC/B;qBACA,OAAO,CAAC,SAAS,CAAC,EAAE;oBACnB,OAAO,KAAK,CAAC,IAAI,CACf,SAAS,CAAC,oBAAoB,CAAC,eAAe,CAAC,CAChD,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE;wBACT,OAAO;4BACL,QAAQ,EAAE,QAAQ,CAAC,EAAE,CAAC;4BACtB,eAAe,EAAE,KAAK,CAAC,IAAI,CACzB,EAAE,CAAC,oBAAoB,CAAC,UAAU,CAAC,CACpC,CAAC,MAAM,CACN,QAAQ,CAAC,EAAE,CACT,QAAQ,CAAC,YAAY,CAAC,SAAS,CAAC;gCAChC,OAAO,CAAC,YAAY,CAAC,MAAM,CAAC,CAC/B,CAAC,MAAM;yBACT,CAAC;oBACJ,CAAC,CAAC,CAAC;gBACL,CAAC,CAAC;qBACD,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,eAAe,GAAG,CAAC,CAAC,eAAe,CAAC;qBACrD,GAAG,CACF,IAAI,CAAC,EAAE,CACL,IAAI,CAAA;;;;6BAIO,IAAI,CAAC,QAAQ;6BACb,UAAU,CAAC,IAAI,CAAC,QAAQ,CAAC;8CACR,OAAO,CAAC,IAAI,CAAC,QAAQ,CAAC;;yBAE3C,IAAI,CAAC,eAAe;;oBAEzB,CACL;;;;;gCAKiB,GAAG,CAAC,QAAQ,CAAC;eAC9B,KAAK,CAAC,IAAI,CACX,OAAO,CAAC,gBAAgB,CAAC,gCAAgC,CAAC,CAC3D,CAAC,GAAG,CACH,EAAE,CAAC,EAAE,CACH,IAAI,CAAA,uCAAuC,QAAQ,CAAC,EAAE,CAAC;0BAC7C,UAAU,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC;2CACP,OAAO,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC;uCACzB,CAC1B;;cAEC,KAAK,CAAC,IAAI,CACV,OAAO,CAAC,gBAAgB,CACtB,mDAAmD,CACpD,CACF,CAAC,GAAG,CACH,EAAE,CAAC,EAAE,CACH,IAAI,CAAA,uCAAuC,QAAQ,CAAC,EAAE,CAAC;0BAC7C,UAAU,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC;2CACP,OAAO,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC;uCACzB,CAC1B;cACC,KAAK,CAAC,IAAI,CACV,OAAO,CAAC,gBAAgB,CACtB,oDAAoD,CACrD,CACF,CAAC,GAAG,CACH,GAAG,CAAC,EAAE,CACJ,IAAI,CAAA,uCAAuC,QAAQ,CAAC,GAAG,CAAC;;2CAE7B,QAAQ,CAAC,GAAG,CAAC;uCACjB,CAC1B;;eAEE;aACR;SACF;KACF,CAAC;AACJ,CAAC;AAED,SAAS,iBAAiB,CAAC,GAAwB,EAAE,GAAa;IAChE,MAAM,YAAY,GAAwB,GAAG,CAAC,MAAO,EAAE,QAAQ,IAAI,EAAE,CAAC;IAEtE,OAAgB,GAAG,CAAC,aAAa,CAAC,QAAQ,CAAC,KAAK,EAAE,YAAY,CAAC,KAAK,CAAC,CAAC,CAAC;AACzE,CAAC;AAED,SAAS,4BAA4B,CACnC,GAAwB,EACxB,GAAa;IAEb,MAAM,aAAa,GACD,CACd,CACe,GAAG,CAAC,MAAO,CAAC,aAAa,EAAE,aAAa,CAAC,aAAa,CAAC;QACpE,EAAE,CACH,CAAC,QAAQ,CACX,IAAI,EAAE,CAAC;IAEV,OAAkB,CAChB,aAAa;SACV,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,GAAG,CAAC,aAAa,CAAC,QAAQ,CAAC,KAAK,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC;SAC3D,MAAM,CAAC,IAAI,CAAC,EAAE,CAAC,IAAI,KAAK,IAAI,CAAC,CACjC,CAAC;AACJ,CAAC;AAED,MAAM,UAAU,sBAAsB,CAAC,GAAa;IAClD,OAAO;QACL;YACE,KAAK,EAAE,GAAG,CAAC,8BAA8B,EAAE,EAAE,MAAM,EAAE,GAAG,CAAC,QAAQ,CAAC,EAAE,CAAC;YACrE,SAAS,EAAE;gBACT,IAAI,EAAE,EAAE;gBACR,KAAK,EAAE,GAAG,CAAC,QAAQ,CAAC;gBACpB,MAAM,EAAE,8BAA8B,CAAC,GAAG,CAAC;aAC5C;YACD,OAAO,EACL,GAAG,CAAC,gBAAgB,CAAC,aAAa,CAAC,CAAC,MAAM,GAAG,CAAC;gBAC5C,CAAC,CAAC;oBACE,IAAI,CAAA;;;;;;;sCAOoB,GAAG,CAAC,8BAA8B,CAAC;;oBAErD,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC,gBAAgB,CAAC,aAAa,CAAC,IAAI,EAAE,CAAC,CAAC,GAAG,CACzD,GAAG,CAAC,EAAE,CACJ,IAAI,CAAA,oCAAoC,QAAQ,CAAC,GAAG,CAAC;2BAChD,GAAG,CAAC,YAAY,CAAC,MAAM,CAAC;wBAC3B,CACL;;;;sCAImB,GAAG,CAAC,4BAA4B,CAAC;+BACxC,CAAC,GAAwB,EAAE,EAAE;wBACxC,GAAG,CAAC,MAAO,CAAC,aAAa,CACvB,cAAc,CACZ,cAAc,CACZ,4BAA4B,CAAC,GAAG,EAAE,GAAG,CAAC,EACtC,iBAAiB,CAAC,GAAG,EAAE,GAAG,CAAC,CAC5B,CACF,CACF,CAAC;wBACF,GAAG,CAAC,MAAO,CAAC,aAAa,CAAC,cAAc,EAAE,CAAC,CAAC;oBAC9C,CAAC;;oBAEC,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC,gBAAgB,CAAC,aAAa,CAAC,IAAI,EAAE,CAAC,CAAC,GAAG,CACzD,GAAG,CAAC,EAAE,CACJ,IAAI,CAAA;;iCAEO,QAAQ,CAAC,GAAG,CAAC;2BACnB,GAAG,CAAC,YAAY,CAAC,MAAM,CAAC;wBAC3B,CACL;;qBAEE;iBACR;gBACH,CAAC,CAAC;oBACE,IAAI,CAAA;;;;;eAKH;iBACF;SACR;KACF,CAAC;AACJ,CAAC;AAED,SAAS,WAAW,CAAC,IAAa;IAChC,MAAM,EAAE,GACN,CAAC,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,IAAI,EAAE,CAAC;QACnC,IAAI,CAAC,YAAY,CAAC,SAAS,CAAC;QAC5B,CAAC,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,IAAI,EAAE,CAAC,CAAC;IAEtC,OAAO,IAAI,CAAC,OAAO,KAAK,UAAU;QAChC,CAAC,CAAC,EAAE;QACJ,CAAC,CAAC,EAAE;YACA,GAAG;YACH,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC;YAC3B,GAAG;YACH,CAAC,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,IAAI,EAAE,CAAC,CAAC;AAC5C,CAAC;AAED,SAAS,aAAa,CAAC,IAAa;IAClC,OAAO,IAAI,CAAC,OAAO,KAAK,UAAU,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,IAAI,EAAE,CAAC;AAC9E,CAAC;AAED,SAAS,iBAAiB,CAAC,OAAkB;IAC3C,MAAM,OAAO,GAAmB,EAAE,CAAC;IACnC,OAAO,CAAC,OAAO,CAAC,MAAM,CAAC,EAAE;QACvB,MAAM,CAAC,OAAO,EAAE,IAAI,EAAE,WAAW,EAAE,MAAM,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,GAAG;YAC1D,SAAS;YACT,MAAM;YACN,aAAa;YACb,QAAQ;YACR,KAAK;YACL,KAAK;YACL,KAAK;SACN,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,MAAM,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC,CAAC;QAEzC,IAAI,OAAO,EAAE;YACX,kDAAkD;YAClD,MAAM,SAAS,GAAG,aAAa,CAAC,MAAM,CAAC,aAAa,EAAE,QAAQ,EAAE;gBAC9D,OAAO;gBACP,IAAI;gBACJ,WAAW;gBACX,MAAM;gBACN,GAAG;gBACH,GAAG;gBACH,GAAG;aACJ,CAAC,CAAC;YAEH,OAAO,CAAC,IAAI,CAAC;gBACX,GAAG,EAAE;oBACH,OAAO,EAAE,SAAS;iBACnB;gBACD,GAAG,EAAE;oBACH,OAAO,EAAE,MAAM;iBAChB;aACF,CAAC,CAAC;SACJ;aAAM;YACL,OAAO,CAAC,IAAI,CAAC;gBACX,GAAG,EAAE;oBACH,MAAM,EAAE,MAAM,CAAC,aAAc;oBAC7B,OAAO,EAAE,MAAM;oBACf,SAAS,EAAE,MAAM,CAAC,kBAAkB;iBACrC;aACF,CAAC,CAAC;SACJ;IACH,CAAC,CAAC,CAAC;IAEH,mEAAmE;IACnE,MAAM,aAAa,GAAiB,IAAI,GAAG,EAAE,CAAC;IAC9C,OAAO,CAAC,OAAO,CAAC,MAAM,CAAC,EAAE;QACvB,iBAAiB,CAAC,MAAM,CAAC,CAAC,OAAO,CAAC,EAAE,CAAC,EAAE;YACrC,MAAM,GAAG,GAAG,MAAM,CAAC,OAAO,CAAC,KAAK,CAAC,EAAE,YAAY,CAAC,MAAM,CAAC,CAAC;YACxD,MAAM,EAAE,GAAG,MAAM,CAAC,OAAO,CAAC,SAAS,CAAC,EAAE,YAAY,CAAC,MAAM,CAAC,CAAC;YAC3D,MAAM,EAAE,GAAG,MAAM,CAAC,OAAO,CAAC,aAAa,CAAC,EAAE,YAAY,CAAC,MAAM,CAAC,CAAC;YAC/D,MAAM,EAAE,GAAG,MAAM,CAAC,OAAO,CAAC,KAAK,CAAC,IAAI,MAAM,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;YACzD,MAAM,CAAC,MAAM,EAAE,OAAO,EAAE,IAAI,CAAC,GAAG,CAAC,QAAQ,EAAE,SAAS,EAAE,MAAM,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CACvE,EAAE,EAAE,YAAY,CAAC,IAAI,CAAC,CACvB,CAAC;YACF,MAAM,QAAQ,GAAG,KAAK,CAAC,IAAI,CAAC,EAAE,CAAC,oBAAoB,CAAC,SAAS,CAAC,CAAC,CAAC,MAAM,CACpE,OAAO,CAAC,EAAE,CACR,OAAO,CAAC,WAAW,KAAK,GAAG;gBAC3B,CAAC,OAAO,CAAC,YAAY,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC,KAAK,EAAE;gBAC5C,CAAC,OAAO,CAAC,YAAY,CAAC,QAAQ,CAAC,IAAI,EAAE,CAAC,KAAK,EAAE;gBAC7C,CAAC,OAAO,CAAC,YAAY,CAAC,QAAQ,CAAC,IAAI,MAAM,CAAC,KAAK,MAAM;gBACrD,CAAC,OAAO,CAAC,YAAY,CAAC,SAAS,CAAC,IAAI,OAAO,CAAC,KAAK,OAAO;gBACxD,CAAC,OAAO,CAAC,YAAY,CAAC,QAAQ,CAAC,IAAI,IAAI,CAAC,KAAK,IAAI,CACpD,CAAC;YAEF,QAAQ,CAAC,OAAO,CAAC,OAAO,CAAC,EAAE;gBACzB,aAAa,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC;YAC7B,CAAC,CAAC,CAAC;QACL,CAAC,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;IAEH,MAAM,gBAAgB,GAAiB,IAAI,GAAG,EAAE,CAAC;IACjD,aAAa,CAAC,OAAO,CAAC,OAAO,CAAC,EAAE;QAC9B,gBAAgB,CAAC,KAAK,EAAE,CAAC;QAEzB,MAAM,MAAM,GAAG,iBAAiB,CAAC,OAAO,CAAC,CAAC;QAE1C,IAAI,MAAM;YACR,mBAAmB,CAAC,MAAM,CAAC,CAAC,OAAO,CAAC,eAAe,CAAC,EAAE,CACpD,gBAAgB,CAAC,GAAG,CAAC,eAAe,CAAC,CACtC,CAAC;QAEJ,OAAO,CAAC,OAAO,CAAC,MAAM,CAAC,EAAE,CAAC,gBAAgB,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC;QAC3D,IAAI,gBAAgB,CAAC,IAAI,KAAK,CAAC;YAC7B,OAAO,CAAC,IAAI,CAAC;gBACX,GAAG,EAAE;oBACH,MAAM,EAAE,OAAO,CAAC,aAAc;oBAC9B,OAAO,EAAE,OAAO;oBAChB,SAAS,EAAE,OAAO,CAAC,kBAAkB;iBACtC;aACF,CAAC,CAAC;IACP,CAAC,CAAC,CAAC;IAEH,OAAO,OAAO,CAAC;AACjB,CAAC;AAED,SAAS,iBAAiB,CAAC,OAAgB;IACzC,MAAM,IAAI,GAAG,OAAO,CAAC,WAAW,IAAI,EAAE,CAAC;IACvC,MAAM,CAAC,KAAK,EAAE,MAAM,EAAE,MAAM,EAAE,OAAO,EAAE,MAAM,CAAC,GAAG;QAC/C,OAAO;QACP,QAAQ;QACR,QAAQ;QACR,SAAS;QACT,QAAQ;KACT,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,OAAO,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC,CAAC;IAC1C,MAAM,GAAG,GAAG,OAAO,CAAC,aAAa,CAAC,aAAa,CAAC,oBAAoB,IAAI,GAAG,CAAC,CAAC;IAC7E,IAAI,CAAC,GAAG;QAAE,OAAO,IAAI,CAAC;IAEtB,MAAM,aAAa,GAAG,KAAK,CAAC,CAAC,CAAC,qBAAqB,KAAK,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC;IACpE,MAAM,aAAa,GAAG,MAAM,CAAC,CAAC,CAAC,iBAAiB,MAAM,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC;IAChE,MAAM,eAAe,GAAG,OAAO;QAC7B,CAAC,CAAC,OAAO,KAAK,MAAM;YAClB,CAAC,CAAC,KAAK;YACP,CAAC,CAAC,eAAe,OAAO,IAAI;QAC9B,CAAC,CAAC,EAAE,CAAC;IACP,MAAM,cAAc,GAAG,MAAM,CAAC,CAAC,CAAC,YAAY,MAAM,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC;IAC5D,MAAM,cAAc,GAAG,MAAM,CAAC,CAAC,CAAC,UAAU,MAAM,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC;IAE1D,MAAM,QAAQ,GAAG,IAAI,aAAa,IAAI,aAAa,IAAI,eAAe,GAAG,cAAc,GAAG,cAAc,EAAE,CAAC;IAE3G,OAAO,GAAG,CAAC,aAAa,CAAC,QAAQ,CAAC,CAAC;AACrC,CAAC;AAED,SAAS,UAAU,CACjB,WAAsB,EACtB,IAA2B;IAE3B,OAAO,CACL,MAAqB,EACrB,MAAe,EACf,IAAkB,EACF,EAAE;QAClB,MAAM,KAAK,GAAgB,IAAK,CAAC,KAAK,CAAC;QAEvC,MAAM,OAAO,GAAmB,EAAE,CAAC;QACnC,MAAM,QAAQ,GAAG,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,KAAK,CAAC,EAAE,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC,CAAC;QAEpE,MAAM,eAAe,GAAG,QAAQ,CAAC,MAAM,CACrC,UAAU,CAAC,EAAE,CAAC,UAAU,CAAC,OAAO,KAAK,QAAQ,CAC9C,CAAC;QACF,iBAAiB,CAAC,eAAe,CAAC,CAAC,OAAO,CAAC,MAAM,CAAC,EAAE,CAAC,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC;QAE3E,MAAM,iBAAiB,GAAG,QAAQ,CAAC,MAAM,CACvC,UAAU,CAAC,EAAE,CAAC,UAAU,CAAC,OAAO,KAAK,UAAU,CAChD,CAAC;QACF,iBAAiB,CAAC,OAAO,CAAC,QAAQ,CAAC,EAAE;YACnC,OAAO,CAAC,IAAI,CAAC;gBACX,GAAG,EAAE;oBACH,MAAM,EAAE,QAAQ,CAAC,aAAc;oBAC/B,OAAO,EAAE,QAAQ;oBACjB,SAAS,EAAE,QAAQ,CAAC,kBAAkB;iBACvC;aACF,CAAC,CAAC;QACL,CAAC,CAAC,CAAC;QAEH,OAAO,CAAC,IAAI,CAAC,GAAG,EAAE,CAAC,0BAA0B,CAAC,IAAI,CAAC,CAAC,CAAC;QAErD,OAAO,OAAO,CAAC;IACjB,CAAC,CAAC;AACJ,CAAC;AAED,MAAM,UAAU,8BAA8B,CAC5C,IAA2B;IAE3B,OAAO,GAAG,EAAE,CAAC,CAAC,GAAG,EAAE,CAAC,0BAA0B,CAAC,IAAI,CAAC,CAAC,CAAC;AACxD,CAAC;AAED,SAAS,kBAAkB,CACzB,WAAsB,EACtB,IAAY,EACZ,KAAa,EACb,OAAe,EACf,IAA2B;IAE3B,OAAO;QACL;YACE,KAAK,EAAE,IAAI,GAAG,KAAK,GAAG,OAAO;YAC7B,OAAO,EAAE;gBACP,IAAI,EAAE,QAAQ;gBACd,KAAK,EAAE,GAAG,CAAC,YAAY,CAAC;gBACxB,MAAM,EAAE,UAAU,CAAC,WAAW,EAAE,IAAI,CAAC;aACtC;YACD,SAAS,EAAE;gBACT,IAAI,EAAE,EAAE;gBACR,KAAK,EAAE,GAAG,CAAC,QAAQ,CAAC;gBACpB,MAAM,EAAE,8BAA8B,CAAC,IAAI,CAAC;aAC7C;YACD,OAAO,EAAE;gBACP,IAAI,CAAA;aACC,WAAW,CAAC,GAAG,CAChB,OAAO,CAAC,EAAE,CACR,IAAI,CAAA;wBACM,WAAW,CAAC,OAAO,CAAC;0CACF,aAAa,CAAC,OAAO,CAAC;;qBAE3C,OAAO,CAAC,OAAO,KAAK,UAAU;oBAC/B,CAAC,CAAC,UAAU;oBACZ,CAAC,CAAC,SAAS;;sCAEO,CAC3B;UACD;aACH;SACF;KACF,CAAC;AACJ,CAAC;AAED,MAAM,UAAU,iBAAiB,CAAC,IAAwB;IACxD,OAAO,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,oBAAoB,CAAC,SAAS,CAAC,CAAC;SACpD,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,oBAAoB,CAAC,UAAU,CAAC,CAAC,CAAC;SACzD,MAAM,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC,OAAO,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC,CAAC;AACpD,CAAC;AAED,MAAM,UAAU,mBAAmB,CAAC,IAAwB;IAC1D,OAAO,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,oBAAoB,CAAC,QAAQ,CAAC,CAAC;SACnD,MAAM,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC,OAAO,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC;SAC9C,MAAM,CAAC,OAAO,CAAC,EAAE,CAAC,OAAO,CAAC,YAAY,CAAC,SAAS,CAAC,CAAC,CAAC;AACxD,CAAC;AAED,MAAM,UAAU,oBAAoB,CAAC,GAAa;IAChD,OAAO,CAAC,MAAqB,EAAE,MAAe,EAAkB,EAAE;QAChE,OAAO,CAAC,GAAG,EAAE,CAAC,sBAAsB,CAAC,GAAG,CAAC,CAAC,CAAC;IAC7C,CAAC,CAAC;AACJ,CAAC;AAED,MAAM,UAAU,0BAA0B,CACxC,IAA2B;IAE3B,MAAM,WAAW,GAAG,IAAI,GAAG,EAAqB,CAAC;IACjD,MAAM,UAAU,GAAG,mBAAmB,CAAC,IAAI,CAAC,CAAC;IAC7C,MAAM,QAAQ,GAAG,iBAAiB,CAAC,IAAI,CAAC,CAAC;IAEzC,QAAQ;SACL,MAAM,CAAC,OAAO,CAAC,EAAE,CAAC,OAAO,CAAC,OAAO,KAAK,UAAU,CAAC;SACjD,OAAO,CAAC,OAAO,CAAC,EAAE;QACjB,MAAM,YAAY,GAAG,OAAO,CAAC,aAAc,CAAC,aAAc,CAAC;QAC3D,MAAM,OAAO,GAAG,OAAO,CAAC,YAAY,CAAC,SAAS,CAAC,CAAC;QAChD,MAAM,GAAG,GACP,QAAQ,CAAC,YAAY,CAAC,GAAG,KAAK,GAAG,YAAY,CAAC,OAAO,GAAG,KAAK,GAAG,OAAO,CAAC;QAC1E,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,GAAG,CAAC;YAAE,WAAW,CAAC,GAAG,CAAC,GAAG,EAAE,EAAE,CAAC,CAAC;QACpD,WAAW,CAAC,GAAG,CAAC,GAAG,CAAC,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC;IACtC,CAAC,CAAC,CAAC;IAEL,UAAU,CAAC,OAAO,CAAC,OAAO,CAAC,EAAE;QAC3B,MAAM,OAAO,GAAG,OAAO,CAAC,OAAO,CAAC,KAAK,CAAC,EAAE,YAAY,CAAC,MAAM,CAAC,IAAI,EAAE,CAAC;QACnE,MAAM,aAAa,GAAG,iBAAiB,CAAC,OAAO,CAAC,CAAC;QACjD,aAAa,CAAC,OAAO,CAAC,YAAY,CAAC,EAAE;YACnC,MAAM,GAAG,GACP,QAAQ,CAAC,YAAY,CAAC,GAAG,KAAK,GAAG,YAAY,CAAC,OAAO,GAAG,KAAK,GAAG,OAAO,CAAC;YAC1E,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,GAAG,CAAC;gBAAE,WAAW,CAAC,GAAG,CAAC,GAAG,EAAE,EAAE,CAAC,CAAC;YACpD,WAAW,CAAC,GAAG,CAAC,GAAG,CAAC,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC;QACtC,CAAC,CAAC,CAAC;QACH,IAAI,aAAa,CAAC,IAAI,KAAK,CAAC,EAAE;YAC5B,MAAM,GAAG,GAAG,QAAQ,GAAG,OAAO,CAAC;YAC/B,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,GAAG,CAAC;gBAAE,WAAW,CAAC,GAAG,CAAC,GAAG,EAAE,EAAE,CAAC,CAAC;YACpD,WAAW,CAAC,GAAG,CAAC,GAAG,CAAC,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC;SACrC;IACH,CAAC,CAAC,CAAC;IAEH,OAAO;QACL;YACE,KAAK,EAAE,GAAG,CAAC,iCAAiC,CAAC;YAC7C,OAAO,EAAE;gBACP,IAAI,EAAE,KAAK;gBACX,KAAK,EAAE,GAAG,CAAC,8BAA8B,EAAE,EAAE,MAAM,EAAE,GAAG,CAAC,QAAQ,CAAC,EAAE,CAAC;gBACrE,MAAM,EAAE,oBAAoB,CAC1B,IAAI,YAAY,WAAW,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,aAAa,CACxD;aACF;YACD,OAAO,EAAE;gBACP,IAAI,CAAA;aACC,KAAK,CAAC,IAAI,CAAC,WAAW,CAAC,IAAI,EAAE,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,EAAE;oBAC1C,MAAM,CAAC,IAAI,EAAE,KAAK,EAAE,OAAO,CAAC,GAAG,GAAG,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;oBAChD,MAAM,CAAC,CAAC,EAAE,SAAS,EAAE,YAAY,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,cAAc,CAAE,CAAC;oBACjE,OAAO,IAAI,CAAA;;;;wBAIC,CAAC,GAAwB,EAAE,EAAE;wBACrC,GAAG,CAAC,MAAO,CAAC,aAAa,CACvB,cAAc,CACZ,kBAAkB,CAChB,WAAW,CAAC,GAAG,CAAC,GAAG,CAAE,EACrB,IAAI,EACJ,KAAK,EACL,OAAO,EACP,IAAI,CACL,CACF,CACF,CAAC;wBACF,GAAG,CAAC,MAAO,CAAC,aAAa,CAAC,cAAc,EAAE,CAAC,CAAC;oBAC9C,CAAC;;;mBAGI,SAAS;;kBAEV,OAAO;;uCAEc,YAAY;;mBAEhC,WAAW,CAAC,GAAG,CAAC,GAAG,CAAE,CAAC,MAAM;;yCAEN,iBAAiB,CAAC,KAAK,CAAC;6BACpC,CAAC;gBACpB,CAAC,CAAC;UACF;aACH;SACF;KACF,CAAC;AACJ,CAAC;AAED,MAAM,CAAC,OAAO,OAAO,0BAA2B,SAAQ,UAAU;IAGhE,KAAK,CAAC,OAAO;QACX,IAAI,CAAC,aAAa,CAAC,cAAc,CAAC,0BAA0B,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;IAC3E,CAAC;CACF","sourcesContent":["import { html, LitElement } from 'lit-element';\nimport { get } from 'lit-translate';\n\nimport { List } from '@material/mwc-list';\nimport { ListItemBase } from '@material/mwc-list/mwc-list-item-base';\nimport { SingleSelectedEvent } from '@material/mwc-list/mwc-list-foundation';\n\nimport {\n  createElement,\n  EditorAction,\n  findControlBlocks,\n  getReference,\n  identity,\n  newWizardEvent,\n  pathParts,\n  selector,\n  Wizard,\n  WizardAction,\n  WizardActor,\n  WizardInput,\n} from '../foundation.js';\n\nimport { clientIcon, controlBlockIcons, inputIcon } from '../icons.js';\n\nfunction getPath(identity: string | number): string {\n  if (typeof identity !== 'string') return '';\n\n  return pathParts(identity)[0] ?? '';\n}\n\nfunction getElement(identity: string | number): string {\n  if (typeof identity !== 'string') return '';\n\n  return pathParts(identity)[1] ?? '';\n}\n\nfunction getLogicalNode(doc: XMLDocument, identity: string): Element | null {\n  if (identity.split('>').length === 4) {\n    return doc.querySelector(selector('LN', identity));\n  }\n\n  if (identity.split('>').length === 3) {\n    if (getElement(identity).split(' ').length > 1) {\n      return doc.querySelector(selector('LN', identity));\n    }\n\n    if (getElement(identity).split(' ').length === 1) {\n      return doc.querySelector(selector('LN0', identity));\n    }\n  }\n\n  return null;\n}\n\nfunction hasClientLN(cb: Element, identity: string): boolean {\n  for (const clientLN of Array.from(cb.getElementsByTagName('ClientLN'))) {\n    const [iedName, apRef, ldInst, prefix, lnClass, lnInst] = [\n      'iedName',\n      'apRef',\n      'ldInst',\n      'prefix',\n      'lnClass',\n      'lnInst',\n    ].map(attribute => clientLN.getAttribute(attribute));\n\n    const ln = getLogicalNode(cb.ownerDocument, identity);\n    if (!ln) break;\n    const ied = ln.closest('IED');\n    const ap = ln.closest('AccessPoint');\n    const ld = ln.closest('LDevice');\n\n    if (identity.split('>').length === 4) {\n      if (\n        iedName === ied?.getAttribute('name') &&\n        apRef === ap?.getAttribute('name') &&\n        ldInst === ld?.getAttribute('inst') &&\n        (prefix ?? '') === (ln.getAttribute('prefix') ?? '') &&\n        lnClass === ln.getAttribute('lnClass') &&\n        (lnInst ?? '') === (ln.getAttribute('inst') ?? '')\n      )\n        return true;\n    }\n\n    if (identity.split('>').length === 3) {\n      if (getElement(identity).split(' ').length > 1) {\n        // ClientLNs for LNs inside an AccessPoint have these requirements:\n        // apRef: AccessPoint name (optional if IED has only one AccessPoint)\n        // ldInst: can be arbitrary\n        const apCount = ied?.querySelectorAll('AccessPoint').length;\n        if (\n          iedName === ied?.getAttribute('name') &&\n          apCount &&\n          (apCount <= 1 || apRef === ap?.getAttribute('name')) &&\n          (prefix ?? '') === (ln.getAttribute('prefix') ?? '') &&\n          lnClass === ln.getAttribute('lnClass') &&\n          (lnInst ?? '') === (ln.getAttribute('inst') ?? '')\n        )\n          return true;\n      }\n\n      if (getElement(identity).split(' ').length === 1) {\n        if (\n          iedName === ied?.getAttribute('name') &&\n          apRef === ap?.getAttribute('name') &&\n          ldInst === ld?.getAttribute('inst') &&\n          lnClass === ln.getAttribute('lnClass')\n        )\n          return true;\n      }\n    }\n  }\n\n  return false;\n}\n\nfunction addClientLnAction(doc: XMLDocument): WizardActor {\n  return (inputs: WizardInput[], wizard: Element): WizardAction[] => {\n    const cbSelected = <ListItemBase[]>(\n      (<List>wizard.shadowRoot!.querySelector('#sourcelist')).selected\n    );\n\n    const selectedLNs = <ListItemBase[]>(\n      (<List>wizard.shadowRoot!.querySelector('#sinklist')).selected\n    );\n\n    const actions: WizardAction[] = [];\n\n    selectedLNs.forEach(selectedLN => {\n      const lnIdentity = selectedLN.value;\n\n      const reportCbs = <Element[]>cbSelected\n        .map(cb => cb.value)\n        .map(cbValue => doc.querySelector(selector('ReportControl', cbValue)))\n        .filter(cb => cb !== null);\n\n      reportCbs.forEach(cb => {\n        //RptEnabled is the parent for ClientLN and might be missing\n        if (cb.querySelector('RptEnabled') === null) {\n          const rptEnabled: Element = createElement(doc, 'RptEnabled', {\n            max: '1',\n          });\n          cb.appendChild(rptEnabled);\n        }\n\n        const ln = getLogicalNode(doc, lnIdentity);\n        if (\n          cb.querySelector('RptEnabled') !== null &&\n          !hasClientLN(cb, lnIdentity) &&\n          ln\n        ) {\n          const element: Element = createElement(doc, 'ClientLN', {\n            iedName: ln?.closest('IED')?.getAttribute('name') ?? null,\n            apRef: ln?.closest('AccessPoint')?.getAttribute('name') ?? null,\n            ldInst: ln?.closest('LDevice')?.getAttribute('inst') ?? 'LD0', //ldInst is required and with Ed2 'LD0' for client ln's\n            prefix: ln?.getAttribute('prefix') ?? '', //OpenSCD empty string over null\n            lnClass: ln?.getAttribute('lnClass') ?? '',\n            lnInst: ln?.getAttribute('inst') ?? '', //OpenSCD empty string over null\n          });\n          actions.push({\n            new: {\n              parent: cb.querySelector('RptEnabled')!,\n              element,\n              reference: getReference(\n                cb.querySelector('RptEnabled')!,\n                'ClientLN'\n              ),\n            },\n          });\n        }\n      });\n    });\n\n    actions.push(() => communicationMappingWizard(doc));\n\n    return actions;\n  };\n}\n\nexport function clientlnwizard(\n  sourceIEDs: Element[],\n  sinkIED: Element\n): Wizard {\n  return [\n    {\n      title: get('transform.comm-map.connectToIED', {\n        iedName: sinkIED.getAttribute('name') ?? '',\n      }),\n      primary: {\n        label: get('connect'),\n        icon: '',\n        action: addClientLnAction(sinkIED.ownerDocument),\n      },\n      secondary: {\n        label: get('cancel'),\n        icon: '',\n        action: openCreateConnection(sinkIED.ownerDocument),\n      },\n      content: [\n        html`<div\n          class=\"wrapper\"\n          style=\"display: grid; grid-template-columns: 1fr 1fr;\"\n        >\n          <filtered-list\n            id=\"sourcelist\"\n            multi\n            searchFieldLabel=\"${get('scl.Report')}\"\n            >${sourceIEDs\n              .filter(\n                sourceIED =>\n                  sourceIED.getAttribute('name') !==\n                  sinkIED.getAttribute('name')\n              )\n              .flatMap(sourceIED => {\n                return Array.from(\n                  sourceIED.getElementsByTagName('ReportControl')\n                ).map(cb => {\n                  return {\n                    identity: identity(cb),\n                    numberClientLNs: Array.from(\n                      cb.getElementsByTagName('ClientLN')\n                    ).filter(\n                      clientLN =>\n                        clientLN.getAttribute('iedName') ===\n                        sinkIED.getAttribute('name')\n                    ).length,\n                  };\n                });\n              })\n              .sort((a, b) => b.numberClientLNs - a.numberClientLNs)\n              .map(\n                item =>\n                  html`<mwc-check-list-item\n                    left\n                    hasMeta\n                    twoline\n                    value=\"${item.identity}\"\n                    ><span>${getElement(item.identity)}</span\n                    ><span slot=\"secondary\">${getPath(item.identity)}</span\n                    ><span slot=\"meta\"\n                      >${item.numberClientLNs}</span\n                    ></mwc-check-list-item\n                  >`\n              )}</filtered-list\n          ><filtered-list\n            multi\n            id=\"sinklist\"\n            activatable\n            searchFieldLabel=\"${get('scl.LN')}\"\n            >${Array.from(\n              sinkIED.querySelectorAll(':root > IED > AccessPoint > LN')\n            ).map(\n              ln =>\n                html`<mwc-check-list-item twoline value=\"${identity(ln)}\">\n                  <span>${getElement(identity(ln))}</span>\n                  <span slot=\"secondary\">${getPath(identity(ln))}</span>\n                </mwc-check-list-item>`\n            )}\n            <li divider role=\"separator\"></li>\n            ${Array.from(\n              sinkIED.querySelectorAll(\n                ':root > IED > AccessPoint > Server > LDevice > LN'\n              )\n            ).map(\n              ln =>\n                html`<mwc-check-list-item twoline value=\"${identity(ln)}\">\n                  <span>${getElement(identity(ln))}</span>\n                  <span slot=\"secondary\">${getPath(identity(ln))}</span>\n                </mwc-check-list-item>`\n            )}\n            ${Array.from(\n              sinkIED.querySelectorAll(\n                ':root > IED > AccessPoint > Server > LDevice > LN0'\n              )\n            ).map(\n              ln0 =>\n                html`<mwc-check-list-item twoline value=\"${identity(ln0)}\">\n                  <span>LLN0</span>\n                  <span slot=\"secondary\">${identity(ln0)}</span>\n                </mwc-check-list-item>`\n            )}</filtered-list\n          >\n        </div>`,\n      ],\n    },\n  ];\n}\n\nfunction getSinkIedElement(evt: SingleSelectedEvent, doc: Document): Element {\n  const selectedItem = <ListItemBase>(<List>evt.target)?.selected ?? [];\n\n  return <Element>doc.querySelector(selector('IED', selectedItem.value));\n}\n\nfunction getSelectedSourceIedElements(\n  evt: SingleSelectedEvent,\n  doc: Document\n): Element[] {\n  const selectedItems =\n    <ListItemBase[]>(\n      (\n        <List>(<List>evt.target).parentElement?.querySelector('#sourcelist') ??\n        []\n      ).selected\n    ) ?? [];\n\n  return <Element[]>(\n    selectedItems\n      .map(item => doc.querySelector(selector('IED', item.value)))\n      .filter(item => item !== null)\n  );\n}\n\nexport function createConnectionWizard(doc: Document): Wizard {\n  return [\n    {\n      title: get('transform.comm-map.connectCB', { CbType: get('Report') }),\n      secondary: {\n        icon: '',\n        label: get('cancel'),\n        action: openCommunicationMappingWizard(doc),\n      },\n      content:\n        doc.querySelectorAll(':root > IED').length > 1\n          ? [\n              html` <div\n                class=\"wrapper\"\n                style=\"display: grid; grid-template-columns: 1fr 1fr;\"\n              >\n                <filtered-list\n                  id=\"sourcelist\"\n                  multi\n                  searchFieldLabel=\"${get('transform.comm-map.sourceIED')}\"\n                >\n                  ${Array.from(doc.querySelectorAll(':root > IED') ?? []).map(\n                    ied =>\n                      html`<mwc-check-list-item left value=\"${identity(ied)}\"\n                        >${ied.getAttribute('name')}</mwc-check-list-item\n                      >`\n                  )}\n                </filtered-list>\n                <filtered-list\n                  id=\"sinklist\"\n                  searchFieldLabel=\"${get('transform.comm-map.sinkIED')}\"\n                  @selected=\"${(evt: SingleSelectedEvent) => {\n                    evt.target!.dispatchEvent(\n                      newWizardEvent(\n                        clientlnwizard(\n                          getSelectedSourceIedElements(evt, doc),\n                          getSinkIedElement(evt, doc)\n                        )\n                      )\n                    );\n                    evt.target!.dispatchEvent(newWizardEvent());\n                  }}\"\n                >\n                  ${Array.from(doc.querySelectorAll(':root > IED') ?? []).map(\n                    ied =>\n                      html`<mwc-list-item\n                        style=\"height:56px\"\n                        value=\"${identity(ied)}\"\n                        >${ied.getAttribute('name')}</mwc-list-item\n                      >`\n                  )}\n                </filtered-list>\n              </div>`,\n            ]\n          : [\n              html`\n                <div style=\"display:flex\">\n                  <mwc-icon slot=\"graphic\">info</mwc-icon\n                  ><span style=\"margin-left:20px\">No IEDs in the project</span>\n                </div>\n              `,\n            ],\n    },\n  ];\n}\n\nfunction sinkPrimary(sink: Element): string {\n  const ln =\n    (sink.getAttribute('prefix') ?? '') +\n    sink.getAttribute('lnClass') +\n    (sink.getAttribute('lnInst') ?? '');\n\n  return sink.tagName === 'ClientLN'\n    ? ln\n    : ln +\n        '>' +\n        sink.getAttribute('doName') +\n        '.' +\n        (sink.getAttribute('daName') ?? '');\n}\n\nfunction sinkSecondary(sink: Element): string {\n  return sink.tagName === 'ClientLN' ? '' : sink.getAttribute('ldInst') ?? '';\n}\n\nfunction disconnectExtRefs(extRefs: Element[]): EditorAction[] {\n  const actions = <EditorAction[]>[];\n  extRefs.forEach(extRef => {\n    const [intAddr, desc, serviceType, pServT, pLN, pDO, pDA] = [\n      'intAddr',\n      'desc',\n      'serviceType',\n      'pServT',\n      'pLN',\n      'pDO',\n      'pDA',\n    ].map(name => extRef.getAttribute(name));\n\n    if (intAddr) {\n      // cannot delete extRef but only DAPath attributes\n      const newExtRef = createElement(extRef.ownerDocument, 'ExtRef', {\n        intAddr,\n        desc,\n        serviceType,\n        pServT,\n        pLN,\n        pDO,\n        pDA,\n      });\n\n      actions.push({\n        new: {\n          element: newExtRef,\n        },\n        old: {\n          element: extRef,\n        },\n      });\n    } else {\n      actions.push({\n        old: {\n          parent: extRef.parentElement!,\n          element: extRef,\n          reference: extRef.nextElementSibling,\n        },\n      });\n    }\n  });\n\n  // cbConnectionWizard shows connections sources in ONE controlBlock\n  const sinkReference: Set<Element> = new Set();\n  extRefs.forEach(extRef => {\n    findControlBlocks(extRef).forEach(cb => {\n      const ied = extRef.closest('IED')?.getAttribute('name');\n      const ld = extRef.closest('LDevice')?.getAttribute('inst');\n      const ap = extRef.closest('AccessPoint')?.getAttribute('name');\n      const ln = extRef.closest('LN0') || extRef.closest('LN');\n      const [prefix, lnClass, inst] = ['prefix', 'lnClass', 'inst'].map(name =>\n        ln?.getAttribute(name)\n      );\n      const iedNames = Array.from(cb.getElementsByTagName('IEDName')).filter(\n        iedName =>\n          iedName.textContent === ied &&\n          (iedName.getAttribute('apRef') || ap) === ap &&\n          (iedName.getAttribute('ldInst') || ld) === ld &&\n          (iedName.getAttribute('prefix') || prefix) === prefix &&\n          (iedName.getAttribute('lnClass') || lnClass) === lnClass &&\n          (iedName.getAttribute('lnInst') || inst) === inst\n      );\n\n      iedNames.forEach(iedName => {\n        sinkReference.add(iedName);\n      });\n    });\n  });\n\n  const sourceReferences: Set<Element> = new Set();\n  sinkReference.forEach(iedName => {\n    sourceReferences.clear();\n\n    const target = findIEDNameTarget(iedName);\n\n    if (target)\n      getSourceReferences(target).forEach(sourceReference =>\n        sourceReferences.add(sourceReference)\n      );\n\n    extRefs.forEach(extRef => sourceReferences.delete(extRef));\n    if (sourceReferences.size === 0)\n      actions.push({\n        old: {\n          parent: iedName.parentElement!,\n          element: iedName,\n          reference: iedName.nextElementSibling,\n        },\n      });\n  });\n\n  return actions;\n}\n\nfunction findIEDNameTarget(iedName: Element): Element | null {\n  const name = iedName.textContent ?? '';\n  const [apRef, ldInst, prefix, lnClass, lnInst] = [\n    'apRef',\n    'ldInst',\n    'prefix',\n    'lnClass',\n    'lnInst',\n  ].map(name => iedName.getAttribute(name));\n  const ied = iedName.ownerDocument.querySelector(`:root > IED[name=${name}]`);\n  if (!ied) return null;\n\n  const apRefSelector = apRef ? `AccessPoint[name=\"${apRef}\"]` : '``';\n  const ldInstSeletor = ldInst ? `LDevice[inst=\"${ldInst}\"]` : '';\n  const lnClassSelector = lnClass\n    ? lnClass === 'LLN0'\n      ? `LN0`\n      : `LN[lnClass=\"${lnClass}\"]`\n    : '';\n  const prefixSelector = prefix ? `[prefix=\"${prefix}\"]` : '';\n  const lnInstSelector = lnInst ? `[inst=\"${lnInst}\"]` : '';\n\n  const selector = ` ${apRefSelector} ${ldInstSeletor} ${lnClassSelector}${prefixSelector}${lnInstSelector}`;\n\n  return ied.querySelector(selector);\n}\n\nfunction disconnect(\n  connections: Element[],\n  root: XMLDocument | Element\n): WizardActor {\n  return (\n    inputs: WizardInput[],\n    wizard: Element,\n    list?: List | null\n  ): WizardAction[] => {\n    const items = <Set<number>>list!.index;\n\n    const actions: WizardAction[] = [];\n    const selected = Array.from(items).map(index => connections[index]);\n\n    const selectedExtRefs = selected.filter(\n      connection => connection.tagName === 'ExtRef'\n    );\n    disconnectExtRefs(selectedExtRefs).forEach(action => actions.push(action));\n\n    const selectedClientLNs = selected.filter(\n      connection => connection.tagName === 'ClientLN'\n    );\n    selectedClientLNs.forEach(clientLN => {\n      actions.push({\n        old: {\n          parent: clientLN.parentElement!,\n          element: clientLN,\n          reference: clientLN.nextElementSibling,\n        },\n      });\n    });\n\n    actions.push(() => communicationMappingWizard(root));\n\n    return actions;\n  };\n}\n\nexport function openCommunicationMappingWizard(\n  root: XMLDocument | Element\n): WizardActor {\n  return () => [() => communicationMappingWizard(root)];\n}\n\nfunction cbConnectionWizard(\n  connections: Element[],\n  cbId: string,\n  cbTag: string,\n  iedName: string,\n  root: XMLDocument | Element\n): Wizard {\n  return [\n    {\n      title: cbId + ' - ' + iedName,\n      primary: {\n        icon: 'delete',\n        label: get('disconnect'), // FIXME: translate\n        action: disconnect(connections, root),\n      },\n      secondary: {\n        icon: '',\n        label: get('cancel'),\n        action: openCommunicationMappingWizard(root),\n      },\n      content: [\n        html`<filtered-list multi\n          >${connections.map(\n            element =>\n              html`<mwc-check-list-item graphic=\"icon\" twoline>\n                <span>${sinkPrimary(element)}</span\n                ><span slot=\"secondary\">${sinkSecondary(element)}</span>\n                <mwc-icon slot=\"graphic\"\n                  >${element.tagName === 'ClientLN'\n                    ? clientIcon\n                    : inputIcon}</mwc-icon\n                >\n              </mwc-check-list-item> `\n          )}</filtered-list\n        >`,\n      ],\n    },\n  ];\n}\n\nexport function getSinkReferences(root: Document | Element): Element[] {\n  return Array.from(root.getElementsByTagName('IEDName'))\n    .concat(Array.from(root.getElementsByTagName('ClientLN')))\n    .filter(element => !element.closest('Private'));\n}\n\nexport function getSourceReferences(root: Document | Element): Element[] {\n  return Array.from(root.getElementsByTagName('ExtRef'))\n    .filter(element => !element.closest('Private'))\n    .filter(element => element.getAttribute('iedName'));\n}\n\nexport function openCreateConnection(doc: Document): WizardActor {\n  return (inputs: WizardInput[], wizard: Element): WizardAction[] => {\n    return [() => createConnectionWizard(doc)];\n  };\n}\n\nexport function communicationMappingWizard(\n  root: XMLDocument | Element\n): Wizard {\n  const connections = new Map<string, Element[]>();\n  const sourceRefs = getSourceReferences(root);\n  const sinkRefs = getSinkReferences(root);\n\n  sinkRefs\n    .filter(element => element.tagName === 'ClientLN')\n    .forEach(element => {\n      const controlBlock = element.parentElement!.parentElement!;\n      const iedName = element.getAttribute('iedName');\n      const key =\n        identity(controlBlock) + ' | ' + controlBlock.tagName + ' | ' + iedName;\n      if (!connections.has(key)) connections.set(key, []);\n      connections.get(key)?.push(element);\n    });\n\n  sourceRefs.forEach(element => {\n    const iedName = element.closest('IED')?.getAttribute('name') ?? '';\n    const controlBlocks = findControlBlocks(element);\n    controlBlocks.forEach(controlBlock => {\n      const key =\n        identity(controlBlock) + ' | ' + controlBlock.tagName + ' | ' + iedName;\n      if (!connections.has(key)) connections.set(key, []);\n      connections.get(key)?.push(element);\n    });\n    if (controlBlocks.size === 0) {\n      const key = ' |  | ' + iedName;\n      if (!connections.has(key)) connections.set(key, []);\n      connections.get(key)?.push(element);\n    }\n  });\n\n  return [\n    {\n      title: get('transform.comm-map.wizard.title'),\n      primary: {\n        icon: 'add',\n        label: get('transform.comm-map.connectCB', { CbType: get('Report') }),\n        action: openCreateConnection(\n          root instanceof XMLDocument ? root : root.ownerDocument\n        ),\n      },\n      content: [\n        html`<filtered-list\n          >${Array.from(connections.keys()).map(key => {\n            const [cbId, cbTag, sinkIED] = key.split(' | ');\n            const [_, sourceIED, controlBlock] = cbId.match(/^(.+)>>(.*)$/)!;\n            return html`<mwc-list-item\n              twoline\n              graphic=\"icon\"\n              hasMeta\n              @click=\"${(evt: SingleSelectedEvent) => {\n                evt.target!.dispatchEvent(\n                  newWizardEvent(\n                    cbConnectionWizard(\n                      connections.get(key)!,\n                      cbId,\n                      cbTag,\n                      sinkIED,\n                      root\n                    )\n                  )\n                );\n                evt.target!.dispatchEvent(newWizardEvent());\n              }}\"\n            >\n              <span\n                >${sourceIED}\n                <mwc-icon style=\"--mdc-icon-size: 1em;\">trending_flat</mwc-icon>\n                ${sinkIED}</span\n              >\n              <span slot=\"secondary\">${controlBlock}</span>\n              <span slot=\"meta\" style=\"padding-left: 10px\"\n                >${connections.get(key)!.length}</span\n              >\n              <mwc-icon slot=\"graphic\">${controlBlockIcons[cbTag]}</mwc-icon>\n            </mwc-list-item>`;\n          })}</filtered-list\n        >`,\n      ],\n    },\n  ];\n}\n\nexport default class CommunicationMappingPlugin extends LitElement {\n  doc!: XMLDocument;\n\n  async trigger(): Promise<void> {\n    this.dispatchEvent(newWizardEvent(communicationMappingWizard(this.doc)));\n  }\n}\n"]}