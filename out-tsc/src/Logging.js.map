{"version":3,"file":"Logging.js","sourceRoot":"","sources":["../../src/Logging.ts"],"names":[],"mappings":"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","sourcesContent":["import { html, property, query, TemplateResult } from 'lit-element';\nimport { ifDefined } from 'lit-html/directives/if-defined';\n\nimport { Dialog } from '@material/mwc-dialog';\nimport { Snackbar } from '@material/mwc-snackbar';\n\nimport {\n  CommitEntry,\n  ifImplemented,\n  invert,\n  LitElementConstructor,\n  LogEntry,\n  LogEntryType,\n  LogEvent,\n  Mixin,\n  newActionEvent,\n} from './foundation.js';\nimport { get, translate } from 'lit-translate';\nimport { getFilterIcon, iconColors } from './icons.js';\n\nconst icons = {\n  info: 'info',\n  warning: 'warning',\n  error: 'report',\n  action: 'history',\n};\n\n/**\n * A mixin adding a `history` property to any `LitElement`, in which\n * incoming [[`LogEvent`]]s are logged.\n *\n * For [[`EditorAction`]] entries, also sets `currentAction` to the index of\n * the committed action, allowing the user to go to `previousAction` with\n * `undo()` if `canUndo` and to go to `nextAction` with `redo()` if `canRedo`.\n *\n * Also provides a `reset()` method resetting the history and `currentAction`.\n *\n * Renders the `history` to `logUI` and the latest `'error'` [[`LogEntry`]] to\n * `messageUI`.\n */\nexport type LoggingElement = Mixin<typeof Logging>;\n\nexport function Logging<TBase extends LitElementConstructor>(Base: TBase) {\n  class LoggingElement extends Base {\n    /** All [[`LogEntry`]]s received so far through [[`LogEvent`]]s. */\n    @property({ type: Array })\n    history: LogEntry[] = [];\n    /** Index of the last [[`EditorAction`]] applied. */\n    @property({ type: Number })\n    currentAction = -1;\n\n    @query('#log') logUI!: Dialog;\n    @query('#error') errorUI!: Snackbar;\n    @query('#warning') warningUI!: Snackbar;\n    @query('#info') infoUI!: Snackbar;\n\n    get canUndo(): boolean {\n      return this.currentAction >= 0;\n    }\n    get canRedo(): boolean {\n      return this.nextAction >= 0;\n    }\n\n    get previousAction(): number {\n      if (!this.canUndo) return -1;\n      return this.history\n        .slice(0, this.currentAction)\n        .map(entry => (entry.kind == 'action' ? true : false))\n        .lastIndexOf(true);\n    }\n    get nextAction(): number {\n      let index = this.history\n        .slice(this.currentAction + 1)\n        .findIndex(entry => entry.kind == 'action');\n      if (index >= 0) index += this.currentAction + 1;\n      return index;\n    }\n\n    undo(): boolean {\n      if (!this.canUndo) return false;\n      this.dispatchEvent(\n        newActionEvent(\n          invert((<CommitEntry>this.history[this.currentAction]).action)\n        )\n      );\n      this.currentAction = this.previousAction;\n      return true;\n    }\n    redo(): boolean {\n      if (!this.canRedo) return false;\n      this.dispatchEvent(\n        newActionEvent((<CommitEntry>this.history[this.nextAction]).action)\n      );\n      this.currentAction = this.nextAction;\n      return true;\n    }\n\n    /** Resets the history to an empty state. */\n    reset(): void {\n      this.history = [];\n      this.currentAction = -1;\n    }\n\n    private onLog(le: LogEvent): void {\n      const entry: LogEntry = {\n        time: new Date(),\n        ...le.detail,\n      };\n\n      if (entry.kind == 'action') {\n        if (entry.action.derived) return;\n        entry.action.derived = true;\n        if (this.nextAction !== -1) this.history.splice(this.nextAction);\n        this.currentAction = this.history.length;\n      }\n\n      this.history.push(entry);\n      if (!this.logUI.open) {\n        const ui = {\n          error: this.errorUI,\n          warning: this.warningUI,\n          info: this.infoUI,\n          action: this.infoUI,\n        }[le.detail.kind];\n\n        ui.close();\n        ui.show();\n      }\n      if (le.detail.kind == 'error') {\n        this.errorUI.close(); // hack to reset timeout\n        this.errorUI.show();\n      }\n      this.requestUpdate('history', []);\n    }\n\n    async performUpdate() {\n      await new Promise<void>(resolve =>\n        requestAnimationFrame(() => resolve())\n      );\n      super.performUpdate();\n    }\n\n    constructor(...args: any[]) {\n      super(...args);\n\n      this.undo = this.undo.bind(this);\n      this.redo = this.redo.bind(this);\n\n      this.onLog = this.onLog.bind(this);\n      this.addEventListener('log', this.onLog);\n    }\n\n    renderLogEntry(\n      entry: LogEntry,\n      index: number,\n      history: LogEntry[]\n    ): TemplateResult {\n      return html` <abbr title=\"${entry.title}\">\n        <mwc-list-item\n          class=\"${entry.kind}\"\n          graphic=\"icon\"\n          ?twoline=${!!entry.message}\n          ?activated=${this.currentAction == history.length - index - 1}\n        >\n          <span>\n            <!-- FIXME: replace tt with mwc-chip asap -->\n            <tt>${entry.time.toLocaleTimeString()}</tt>\n            ${entry.title}</span\n          >\n          <span slot=\"secondary\">${entry.message}</span>\n          <mwc-icon\n            slot=\"graphic\"\n            style=\"--mdc-theme-text-icon-on-background:var(${ifDefined(\n              iconColors[entry.kind]\n            )})\"\n            >${icons[entry.kind]}</mwc-icon\n          >\n        </mwc-list-item></abbr\n      >`;\n    }\n\n    private renderHistory(): TemplateResult[] | TemplateResult {\n      if (this.history.length > 0)\n        return this.history.slice().reverse().map(this.renderLogEntry, this);\n      else\n        return html`<mwc-list-item disabled graphic=\"icon\">\n          <span>${translate('log.placeholder')}</span>\n          <mwc-icon slot=\"graphic\">info</mwc-icon>\n        </mwc-list-item>`;\n    }\n\n    private renderFilterButtons() {\n      return (<LogEntryType[]>Object.keys(icons)).map(\n        kind => html`<mwc-icon-button-toggle id=\"${kind}filter\" on\n          >${getFilterIcon(kind, false)}\n          ${getFilterIcon(kind, true)}</mwc-icon-button-toggle\n        >`\n      );\n    }\n\n    render(): TemplateResult {\n      return html`${ifImplemented(super.render())}\n        <style>\n          #log > mwc-icon-button-toggle {\n            position: absolute;\n            top: 8px;\n            right: 14px;\n          }\n          #log > mwc-icon-button-toggle:nth-child(2) {\n            right: 62px;\n          }\n          #log > mwc-icon-button-toggle:nth-child(3) {\n            right: 110px;\n          }\n          #log > mwc-icon-button-toggle:nth-child(4) {\n            right: 158px;\n          }\n          #content mwc-list-item.info,\n          #content mwc-list-item.warning,\n          #content mwc-list-item.error,\n          #content mwc-list-item.action {\n            display: none;\n          }\n          #infofilter[on] ~ #content mwc-list-item.info {\n            display: flex;\n          }\n          #warningfilter[on] ~ #content mwc-list-item.warning {\n            display: flex;\n          }\n          #errorfilter[on] ~ #content mwc-list-item.error {\n            display: flex;\n          }\n          #actionfilter[on] ~ #content mwc-list-item.action {\n            display: flex;\n          }\n\n          #log {\n            --mdc-dialog-min-width: 92vw;\n          }\n\n          #log > #filterContainer {\n            position: absolute;\n            top: 14px;\n            right: 14px;\n          }\n        </style>\n        <mwc-dialog id=\"log\" heading=\"${translate('log.name')}\">\n          ${this.renderFilterButtons()}\n          <mwc-list id=\"content\" wrapFocus>${this.renderHistory()}</mwc-list>\n          <mwc-button\n            icon=\"undo\"\n            label=\"${translate('undo')}\"\n            ?disabled=${!this.canUndo}\n            @click=${this.undo}\n            slot=\"secondaryAction\"\n          ></mwc-button>\n          <mwc-button\n            icon=\"redo\"\n            label=\"${translate('redo')}\"\n            ?disabled=${!this.canRedo}\n            @click=${this.redo}\n            slot=\"secondaryAction\"\n          ></mwc-button>\n          <mwc-button slot=\"primaryAction\" dialogaction=\"close\"\n            >${translate('close')}</mwc-button\n          >\n        </mwc-dialog>\n\n        <mwc-snackbar\n          id=\"info\"\n          timeoutMs=\"4000\"\n          labelText=\"${this.history\n            .slice()\n            .reverse()\n            .find(le => le.kind === 'info' || le.kind === 'action')?.title ??\n          get('log.snackbar.placeholder')}\"\n        >\n          <mwc-icon-button icon=\"close\" slot=\"dismiss\"></mwc-icon-button>\n        </mwc-snackbar>\n        <mwc-snackbar\n          id=\"warning\"\n          timeoutMs=\"6000\"\n          labelText=\"${this.history\n            .slice()\n            .reverse()\n            .find(le => le.kind === 'warning')?.title ??\n          get('log.snackbar.placeholder')}\"\n        >\n          <mwc-button\n            slot=\"action\"\n            icon=\"rule\"\n            @click=${() => this.logUI.show()}\n            >${translate('log.snackbar.show')}</mwc-button\n          >\n          <mwc-icon-button icon=\"close\" slot=\"dismiss\"></mwc-icon-button>\n        </mwc-snackbar>\n        <mwc-snackbar\n          id=\"error\"\n          timeoutMs=\"10000\"\n          labelText=\"${this.history\n            .slice()\n            .reverse()\n            .find(le => le.kind === 'error')?.title ??\n          get('log.snackbar.placeholder')}\"\n        >\n          <mwc-button\n            slot=\"action\"\n            icon=\"rule\"\n            @click=${() => this.logUI.show()}\n            >${translate('log.snackbar.show')}</mwc-button\n          >\n          <mwc-icon-button icon=\"close\" slot=\"dismiss\"></mwc-icon-button>\n        </mwc-snackbar>`;\n    }\n  }\n\n  return LoggingElement;\n}\n"]}