{"version":3,"file":"ImportIEDs.js","sourceRoot":"","sources":["../../../src/menu/ImportIEDs.ts"],"names":[],"mappings":";AAEA,OAAO,EAAE,GAAG,EAAE,IAAI,EAAE,UAAU,EAAE,KAAK,EAAkB,MAAM,aAAa,CAAC;AAC3E,OAAO,EAAE,GAAG,EAAE,MAAM,eAAe,CAAC;AACpC,OAAO,EACL,aAAa,EAEb,YAAY,EACZ,QAAQ,EACR,cAAc,EACd,WAAW,EACX,oBAAoB,EACpB,cAAc,EACd,QAAQ,GAIT,MAAM,kBAAkB,CAAC;AAE1B,SAAS,gBAAgB,CACvB,SAAsB,EACtB,GAAgB;IAEhB,OAAO,CAAC,CAAC,EAAE,MAAe,EAAkB,EAAE;QAC5C,MAAM,aAAa,GAAmB,CAC7B,MAAM,CAAC,UAAW,CAAC,aAAa,CAAC,UAAU,CAAE,CAAC,QAAQ,CAC9D,CAAC;QAEF,MAAM,QAAQ,GAAG,aAAa;aAC3B,GAAG,CAAC,IAAI,CAAC,EAAE;YACV,OAAO,SAAS,CAAC,aAAa,CAAC,QAAQ,CAAC,KAAK,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC;QAC9D,CAAC,CAAC;aACD,MAAM,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC;aAClB,GAAG,CAAC,GAAG,CAAC,EAAE,CAAC,SAAS,CAAC,GAAI,EAAE,GAAG,EAAe,MAAM,CAAC,CAAC,CAAC;QAEzD,MAAM,aAAa,GAAG,IAAI,OAAO,CAAO,CAAC,OAAO,EAAE,MAAM,EAAE,EAAE,CAC1D,OAAO,CAAC,UAAU,CAAC,QAAQ,CAAC,CAAC,IAAI,CAC/B,GAAG,EAAE,CAAC,OAAO,EAAE,EACf,GAAG,EAAE,CAAC,MAAM,EAAE,CACf,CACF,CAAC;QAEF,MAAM,CAAC,aAAa,CAAC,oBAAoB,CAAC,aAAa,CAAC,CAAC,CAAC;QAC1D,MAAM,CAAC,aAAa,CAAC,cAAc,EAAE,CAAC,CAAC;QACvC,OAAO,EAAE,CAAC;IACZ,CAAC,CAAC;AACJ,CAAC;AAED,SAAS,gBAAgB,CAAC,SAAsB,EAAE,GAAgB;IAChE,OAAO;QACL;YACE,KAAK,EAAE,aAAa;YACpB,OAAO,EAAE;gBACP,IAAI,EAAE,KAAK;gBACX,KAAK,EAAE,MAAM;gBACb,MAAM,EAAE,gBAAgB,CAAC,SAAS,EAAE,GAAG,CAAC;aACzC;YACD,OAAO,EAAE;gBACP,IAAI,CAAA;aACC,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,gBAAgB,CAAC,aAAa,CAAC,CAAC,CAAC,GAAG,CAC1D,GAAG,CAAC,EAAE,CACJ,IAAI,CAAA,+BAA+B,QAAQ,CAAC,GAAG,CAAC;mBAC3C,GAAG,CAAC,YAAY,CAAC,MAAM,CAAC;gBAC3B,CACL;UACD;aACH;SACF;KACF,CAAC;AACJ,CAAC;AAED,SAAS,aAAa,CAAC,QAAmB,EAAE,OAAgB;IAC1D,MAAM,YAAY,GAAG,QAAQ,CAAC,IAAI,CAChC,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC,KAAK,OAAO,CAAC,YAAY,CAAC,MAAM,CAAC,CACnE,CAAC;IACF,OAAO,YAAY,CAAC,CAAC,CAAC,YAAY,CAAC,CAAC,CAAU,OAAO,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC;AACzE,CAAC;AAED,SAAS,wBAAwB,CAC/B,GAAY,EACZ,GAAgB;IAEhB,MAAM,OAAO,GAAG,EAAE,CAAC;IAEnB,MAAM,uBAAuB,GAAG,GAAG,CAAC,aAAa,CAAC,uBAAuB,CAAC,CAAC;IAE3E,MAAM,aAAa,GAAG,uBAAuB;QAC3C,CAAC,CAAC,uBAAuB;QACzB,CAAC,CAAC,aAAa,CAAC,GAAG,EAAE,eAAe,EAAE,EAAE,CAAC,CAAC;IAE5C,IAAI,CAAC,uBAAuB;QAC1B,OAAO,CAAC,IAAI,CAAC;YACX,GAAG,EAAE;gBACH,MAAM,EAAE,GAAG,CAAC,aAAa,CAAC,OAAO,CAAE;gBACnC,OAAO,EAAE,aAAa;gBACtB,SAAS,EAAE,YAAY,CAAC,GAAG,CAAC,aAAa,CAAC,OAAO,CAAE,EAAE,eAAe,CAAC;aACtE;SACF,CAAC,CAAC;IAEL,MAAM,YAAY,GAAG,KAAK,CAAC,IAAI,CAC7B,GAAG,CAAC,aAAa,CAAC,gBAAgB,CAChC,6DAA6D,GAAG,CAAC,YAAY,CAC3E,MAAM,CACP,IAAI,CACN,CACF,CAAC;IAEF,MAAM,kBAAkB,GAAc,EAAE,CAAC;IAEzC,YAAY,CAAC,OAAO,CAAC,WAAW,CAAC,EAAE;QACjC,MAAM,aAAa,GAAY,WAAW,CAAC,aAAc,CAAC;QAC1D,MAAM,kBAAkB,GAAG,aAAa,CAAC,aAAa,CACpD,4CAA4C,aAAa,CAAC,YAAY,CACpE,MAAM,CACP,IAAI,CACN,CAAC;QAEF,MAAM,UAAU,GAAG,kBAAkB;YACnC,CAAC,CAAC,kBAAkB;YACpB,CAAC,CAAC,aAAa,CAAC,kBAAkB,EAAE,aAAa,CAAC,CAAC;QACrD,MAAM,OAAO,GAAY,WAAW,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC;QAErD,IAAI,CAAC,kBAAkB,IAAI,CAAC,kBAAkB,CAAC,QAAQ,CAAC,UAAU,CAAC,EAAE;YACnE,OAAO,CAAC,IAAI,CAAC;gBACX,GAAG,EAAE;oBACH,MAAM,EAAE,aAAa;oBACrB,OAAO,EAAE,UAAU;oBACnB,SAAS,EAAE,YAAY,CAAC,aAAa,EAAE,YAAY,CAAC;iBACrD;aACF,CAAC,CAAC;YACH,kBAAkB,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;SACrC;QAED,OAAO,CAAC,IAAI,CAAC;YACX,GAAG,EAAE;gBACH,MAAM,EAAE,UAAU;gBAClB,OAAO;gBACP,SAAS,EAAE,YAAY,CAAC,UAAU,EAAE,aAAa,CAAC;aACnD;SACF,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;IAEH,OAAO,OAAO,CAAC;AACjB,CAAC;AAED,SAAS,kBAAkB,CAAC,IAAa,EAAE,GAAY;IACrD,MAAM,IAAI,GAAY,IAAI,CAAC,aAAc,CAAC;IAC1C,MAAM,EAAE,GAAG,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC;IAEnC,IAAI,CAAC,IAAI,IAAI,CAAC,EAAE;QAAE,OAAO,KAAK,CAAC;IAE/B,IAAI,IAAI,CAAC,OAAO,KAAK,UAAU;QAC7B,OAAO,KAAK,CAAC,IAAI,CACf,IAAI,CAAC,gBAAgB,CACnB,qBAAqB,EAAE,yBAAyB,EAAE,IAAI,CACvD,CACF,CAAC,IAAI,CAAC,SAAS,CAAC,EAAE,CAAC,kBAAkB,CAAC,SAAS,CAAC,aAAc,EAAE,GAAG,CAAC,CAAC,CAAC;IAEzE,IAAI,IAAI,CAAC,OAAO,KAAK,QAAQ;QAC3B,OAAO,KAAK,CAAC,IAAI,CACf,IAAI,CAAC,gBAAgB,CACnB,qBAAqB,EAAE,yBAAyB,EAAE,IAAI,CACvD,CACF,CAAC,IAAI,CAAC,SAAS,CAAC,EAAE,CAAC,kBAAkB,CAAC,SAAS,CAAC,aAAc,EAAE,GAAG,CAAC,CAAC,CAAC;IAEzE,IAAI,IAAI,CAAC,OAAO,KAAK,QAAQ;QAC3B,OAAO,KAAK,CAAC,IAAI,CACf,IAAI,CAAC,gBAAgB,CACnB,wBAAwB,EAAE,0BAA0B,EAAE,IAAI,CAC3D,CACF,CAAC,IAAI,CAAC,SAAS,CAAC,EAAE,CAAC,kBAAkB,CAAC,SAAS,CAAC,aAAc,EAAE,GAAG,CAAC,CAAC,CAAC;IAEzE,OAAO,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC,oBAAoB,CAAC,KAAK,CAAC,CAAC;SAC/C,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC,oBAAoB,CAAC,IAAI,CAAC,CAAC,CAAC;SAClD,IAAI,CAAC,KAAK,CAAC,EAAE,CAAC,KAAK,CAAC,YAAY,CAAC,QAAQ,CAAC,KAAK,EAAE,CAAC,CAAC;AACxD,CAAC;AAED,SAAS,WAAW,CAClB,GAAY,EACZ,QAAiB,EACjB,GAAa;IAEb,MAAM,aAAa,GAAG,GAAG,CAAC,aAAa,CACrC,4CAA4C,QAAQ,CAAC,YAAY,CAAC,IAAI,CAAC,IAAI,CAC5E,CAAC;IAEF,IAAI,aAAa,IAAI,QAAQ,CAAC,WAAW,CAAC,aAAa,CAAC;QAAE,OAAO;IACjE,IAAI,CAAC,kBAAkB,CAAC,QAAQ,EAAE,GAAG,CAAC;QAAE,OAAO;IAE/C,IAAI,aAAa,EAAE;QACjB,+EAA+E;QAC/E,mDAAmD;QACnD,MAAM,IAAI,GAAY,QAAQ,CAAC,aAAc,CAAC;QAC9C,MAAM,KAAK,GAAG,QAAQ,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC;QAC1C,MAAM,KAAK,GAAG,GAAG,CAAC,YAAY,CAAC,MAAM,CAAE,GAAG,KAAK,CAAC;QAEhD,QAAQ,CAAC,YAAY,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC;QACnC,IAAI;aACD,gBAAgB,CACf,qBAAqB,KAAK,yBAAyB,KAAK,IAAI,CAC7D;aACA,OAAO,CAAC,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,YAAY,CAAC,MAAM,EAAE,KAAK,CAAC,CAAC,CAAC;KACtD;IAED,OAAO;QACL,GAAG,EAAE;YACH,MAAM,EAAE,GAAG,CAAC,aAAa,CAAC,2BAA2B,CAAE;YACvD,OAAO,EAAE,QAAQ;YACjB,SAAS,EAAE,YAAY,CACrB,GAAG,CAAC,aAAa,CAAC,2BAA2B,CAAE,EAC/C,UAAU,CACX;SACF;KACF,CAAC;AACJ,CAAC;AAED,SAAS,SAAS,CAChB,GAAY,EACZ,MAAe,EACf,GAAa;IAEb,MAAM,WAAW,GAAG,GAAG,CAAC,aAAa,CACnC,0CAA0C,MAAM,CAAC,YAAY,CAAC,IAAI,CAAC,IAAI,CACxE,CAAC;IAEF,IAAI,WAAW,IAAI,MAAM,CAAC,WAAW,CAAC,WAAW,CAAC;QAAE,OAAO;IAC3D,IAAI,CAAC,kBAAkB,CAAC,MAAM,EAAE,GAAG,CAAC;QAAE,OAAO;IAE7C,IAAI,WAAW,EAAE;QACf,+EAA+E;QAC/E,mDAAmD;QACnD,MAAM,IAAI,GAAmB,MAAM,CAAC,aAAc,CAAC;QACnD,MAAM,KAAK,GAAG,MAAM,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC;QACxC,MAAM,KAAK,GAAG,GAAG,CAAC,YAAY,CAAC,MAAM,CAAE,GAAG,KAAK,CAAC;QAEhD,MAAM,CAAC,YAAY,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC;QACjC,IAAI;aACD,gBAAgB,CACf,qBAAqB,KAAK,yBAAyB,KAAK,IAAI,CAC7D;aACA,OAAO,CAAC,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,YAAY,CAAC,MAAM,EAAE,KAAK,CAAC,CAAC,CAAC;KACtD;IAED,OAAO;QACL,GAAG,EAAE;YACH,MAAM,EAAE,GAAG,CAAC,aAAa,CAAC,2BAA2B,CAAE;YACvD,OAAO,EAAE,MAAM;YACf,SAAS,EAAE,YAAY,CACrB,GAAG,CAAC,aAAa,CAAC,2BAA2B,CAAE,EAC/C,QAAQ,CACT;SACF;KACF,CAAC;AACJ,CAAC;AAED,SAAS,SAAS,CAChB,GAAY,EACZ,MAAe,EACf,GAAa;IAEb,MAAM,WAAW,GAAG,GAAG,CAAC,aAAa,CACnC,0CAA0C,MAAM,CAAC,YAAY,CAAC,IAAI,CAAC,IAAI,CACxE,CAAC;IAEF,IAAI,WAAW,IAAI,MAAM,CAAC,WAAW,CAAC,WAAW,CAAC;QAAE,OAAO;IAC3D,IAAI,CAAC,kBAAkB,CAAC,MAAM,EAAE,GAAG,CAAC;QAAE,OAAO;IAE7C,IAAI,WAAW,EAAE;QACf,+EAA+E;QAC/E,mDAAmD;QACnD,MAAM,IAAI,GAAY,MAAM,CAAC,aAAc,CAAC;QAC5C,MAAM,KAAK,GAAG,MAAM,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC;QACxC,MAAM,KAAK,GAAG,GAAG,CAAC,YAAY,CAAC,MAAM,CAAE,GAAG,KAAK,CAAC;QAEhD,MAAM,CAAC,YAAY,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC;QACjC,IAAI;aACD,gBAAgB,CACf,wBAAwB,KAAK,0BAA0B,KAAK,IAAI,CACjE;aACA,OAAO,CAAC,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,YAAY,CAAC,MAAM,EAAE,KAAK,CAAC,CAAC,CAAC;KACtD;IAED,OAAO;QACL,GAAG,EAAE;YACH,MAAM,EAAE,GAAG,CAAC,aAAa,CAAC,2BAA2B,CAAE;YACvD,OAAO,EAAE,MAAM;YACf,SAAS,EAAE,YAAY,CACrB,GAAG,CAAC,aAAa,CAAC,2BAA2B,CAAE,EAC/C,QAAQ,CACT;SACF;KACF,CAAC;AACJ,CAAC;AAED,SAAS,YAAY,CACnB,GAAY,EACZ,SAAkB,EAClB,GAAa;IAEb,MAAM,cAAc,GAAG,GAAG,CAAC,aAAa,CACtC,6CAA6C,SAAS,CAAC,YAAY,CACjE,IAAI,CACL,IAAI,CACN,CAAC;IAEF,IAAI,cAAc,IAAI,SAAS,CAAC,WAAW,CAAC,cAAc,CAAC;QAAE,OAAO;IACpE,IAAI,CAAC,kBAAkB,CAAC,SAAS,EAAE,GAAG,CAAC;QAAE,OAAO;IAEhD,IAAI,cAAc,EAAE;QAClB,+EAA+E;QAC/E,mDAAmD;QACnD,MAAM,KAAK,GAAG,SAAS,CAAC,YAAY,CAAC,IAAI,CAAE,CAAC;QAC5C,MAAM,KAAK,GAAG,GAAG,CAAC,YAAY,CAAC,MAAM,CAAE,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;QAEtD,SAAS,CAAC,YAAY,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC;QACpC,GAAG;aACA,gBAAgB,CACf,gDAAgD,KAAK,mDAAmD,KAAK,IAAI,CAClH;aACA,OAAO,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,YAAY,CAAC,QAAQ,EAAE,KAAK,CAAC,CAAC,CAAC;KACpD;IAED,OAAO;QACL,GAAG,EAAE;YACH,MAAM,EAAE,GAAG,CAAC,aAAa,CAAC,2BAA2B,CAAE;YACvD,OAAO,EAAE,SAAS;YAClB,SAAS,EAAE,YAAY,CACrB,GAAG,CAAC,aAAa,CAAC,mBAAmB,CAAE,EACvC,WAAW,CACZ;SACF;KACF,CAAC;AACJ,CAAC;AAED,SAAS,oBAAoB,CAAC,GAAY,EAAE,GAAgB;IAC1D,MAAM,OAAO,GAAiC,EAAE,CAAC;IAEjD,GAAG,CAAC,aAAa;SACd,gBAAgB,CAAC,uCAAuC,CAAC;SACzD,OAAO,CAAC,SAAS,CAAC,EAAE,CAAC,OAAO,CAAC,IAAI,CAAC,YAAY,CAAC,GAAG,EAAE,SAAS,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;IAEzE,GAAG,CAAC,aAAa;SACd,gBAAgB,CAAC,oCAAoC,CAAC;SACtD,OAAO,CAAC,MAAM,CAAC,EAAE,CAAC,OAAO,CAAC,IAAI,CAAC,SAAS,CAAC,GAAG,EAAE,MAAM,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;IAEhE,GAAG,CAAC,aAAa;SACd,gBAAgB,CAAC,oCAAoC,CAAC;SACtD,OAAO,CAAC,MAAM,CAAC,EAAE,CAAC,OAAO,CAAC,IAAI,CAAC,SAAS,CAAC,GAAG,EAAE,MAAM,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;IAEhE,GAAG,CAAC,aAAa;SACd,gBAAgB,CAAC,sCAAsC,CAAC;SACxD,OAAO,CAAC,QAAQ,CAAC,EAAE,CAAC,OAAO,CAAC,IAAI,CAAC,WAAW,CAAC,GAAG,EAAE,QAAQ,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;IAEtE,OAAuB,OAAO,CAAC,MAAM,CAAC,IAAI,CAAC,EAAE,CAAC,IAAI,KAAK,SAAS,CAAC,CAAC;AACpE,CAAC;AAED,SAAS,eAAe,CAAC,GAAY,EAAE,GAAa;IAClD,MAAM,gBAAgB,GAAG,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC,gBAAgB,CAAC,aAAa,CAAC,CAAC,CAAC,GAAG,CAC1E,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,YAAY,CAAC,MAAM,CAAE,CACjC,CAAC;IACF,MAAM,eAAe,GAAG,GAAG,CAAC,YAAY,CAAC,MAAM,CAAE,CAAC;IAElD,IAAI,gBAAgB,CAAC,QAAQ,CAAC,eAAe,CAAC;QAAE,OAAO,KAAK,CAAC;IAE7D,OAAO,IAAI,CAAC;AACd,CAAC;AAED,MAAM,CAAC,KAAK,UAAU,SAAS,CAC7B,GAAY,EACZ,GAAgB,EAChB,cAA2B;IAE3B,IAAI,GAAG,CAAC,YAAY,CAAC,MAAM,CAAC,KAAK,UAAU;QACzC,GAAG,CAAC,YAAY,CACd,MAAM,EACN,cAAc;YACZ,CAAC,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC,gBAAgB,CAAC,KAAK,CAAC,CAAC,CAAC,MAAM,CAAC,GAAG,CAAC,EAAE,CACpD,GAAG,CAAC,YAAY,CAAC,MAAM,CAAC,EAAE,QAAQ,CAAC,UAAU,CAAC,CAC/C,CAAC,MAAM;gBACN,CAAC,CAAC,CACP,CAAC;IAEJ,IAAI,CAAC,eAAe,CAAC,GAAG,EAAE,GAAG,CAAC,EAAE;QAC9B,cAAc,CAAC,aAAa,CAC1B,WAAW,CAAC;YACV,IAAI,EAAE,OAAO;YACb,KAAK,EAAE,GAAG,CAAC,wBAAwB,EAAE;gBACnC,IAAI,EAAE,GAAG,CAAC,YAAY,CAAC,MAAM,CAAE;aAChC,CAAC;SACH,CAAC,CACH,CAAC;KACH;IAED,MAAM,uBAAuB,GAAG,oBAAoB,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;IAC/D,MAAM,oBAAoB,GAAG,wBAAwB,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;IAChE,MAAM,OAAO,GAAG,oBAAoB,CAAC,MAAM,CAAC,uBAAuB,CAAC,CAAC;IACrE,OAAO,CAAC,IAAI,CAAC;QACX,GAAG,EAAE;YACH,MAAM,EAAE,GAAI,CAAC,aAAa,CAAC,OAAO,CAAE;YACpC,OAAO,EAAE,GAAG;YACZ,SAAS,EAAE,YAAY,CAAC,GAAI,CAAC,aAAa,CAAC,OAAO,CAAE,EAAE,KAAK,CAAC;SAC7D;KACF,CAAC,CAAC;IAEH,cAAc,CAAC,aAAa,CAC1B,cAAc,CAAC;QACb,KAAK,EAAE,GAAG,CAAC,gBAAgB,EAAE,EAAE,IAAI,EAAE,GAAG,CAAC,YAAY,CAAC,MAAM,CAAE,EAAE,CAAC;QACjE,OAAO;KACR,CAAC,CACH,CAAC;AACJ,CAAC;AAED,MAAM,CAAC,OAAO,OAAO,kBAAmB,SAAQ,UAAU;IAMxD,6EAA6E;IACrE,KAAK,CAAC,YAAY,CAAC,KAAY;QACrC,MAAM,KAAK,GAAG,KAAK,CAAC,IAAI,CACI,KAAK,CAAC,MAAO,EAAE,KAAK,IAAI,EAAE,CACrD,CAAC;QAEF,MAAM,QAAQ,GAAG,KAAK,CAAC,GAAG,CAAC,KAAK,EAAC,IAAI,EAAC,EAAE;YACtC,MAAM,SAAS,GAAG,IAAI,SAAS,EAAE,CAAC,eAAe,CAC/C,MAAM,IAAI,CAAC,IAAI,EAAE,EACjB,iBAAiB,CAClB,CAAC;YAEF,OAAO,IAAI,CAAC,aAAa,CAAC,SAAS,EAAE,IAAI,CAAC,GAAI,CAAC,CAAC;QAClD,CAAC,CAAC,CAAC;QAEH,MAAM,aAAa,GAAG,IAAI,OAAO,CAAO,CAAC,OAAO,EAAE,MAAM,EAAE,EAAE,CAC1D,OAAO,CAAC,UAAU,CAAC,QAAQ,CAAC,CAAC,IAAI,CAC/B,GAAG,EAAE,CAAC,OAAO,EAAE,EACf,GAAG,EAAE,CAAC,MAAM,EAAE,CACf,CACF,CAAC;QAEF,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,oBAAoB,CAAC,aAAa,CAAC,CAAC,CAAC;IACjE,CAAC;IAEM,KAAK,CAAC,aAAa,CACxB,SAAsB,EACtB,GAAgB;QAEhB,IAAI,CAAC,SAAS,EAAE;YACd,IAAI,CAAC,MAAM,CAAC,aAAa,CACvB,WAAW,CAAC;gBACV,IAAI,EAAE,OAAO;gBACb,KAAK,EAAE,GAAG,CAAC,sBAAsB,CAAC;aACnC,CAAC,CACH,CAAC;YACF,OAAO;SACR;QAED,IAAI,SAAS,CAAC,aAAa,CAAC,aAAa,CAAC,EAAE;YAC1C,IAAI,CAAC,MAAM,CAAC,aAAa,CACvB,WAAW,CAAC;gBACV,IAAI,EAAE,OAAO;gBACb,KAAK,EAAE,GAAG,CAAC,wBAAwB,CAAC;aACrC,CAAC,CACH,CAAC;YACF,OAAO;SACR;QAED,MAAM,IAAI,GAAG,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,gBAAgB,CAAC,aAAa,CAAC,CAAC,CAAC;QACnE,IAAI,IAAI,CAAC,MAAM,KAAK,CAAC,EAAE;YACrB,IAAI,CAAC,MAAM,CAAC,aAAa,CACvB,WAAW,CAAC;gBACV,IAAI,EAAE,OAAO;gBACb,KAAK,EAAE,GAAG,CAAC,uBAAuB,CAAC;aACpC,CAAC,CACH,CAAC;YACF,OAAO;SACR;QAED,IAAI,CAAC,GAAG,CAAC,aAAa,CAAC,2BAA2B,CAAC,EAAE;YACnD,MAAM,OAAO,GAAG,aAAa,CAAC,GAAG,EAAE,mBAAmB,EAAE,EAAE,CAAC,CAAC;YAE5D,IAAI,CAAC,MAAM,CAAC,aAAa,CACvB,cAAc,CAAC;gBACb,GAAG,EAAE;oBACH,MAAM,EAAE,GAAG,CAAC,eAAe;oBAC3B,OAAO;oBACP,SAAS,EAAE,YAAY,CAAC,GAAG,CAAC,eAAe,EAAE,mBAAmB,CAAC;iBAClE;aACF,CAAC,CACH,CAAC;SACH;QAED,IAAI,IAAI,CAAC,MAAM,KAAK,CAAC,EAAE;YACrB,SAAS,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,GAAG,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC;YACrC,OAAO;SACR;QAED,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,cAAc,CAAC,gBAAgB,CAAC,SAAS,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;IAC9E,CAAC;IAED,KAAK,CAAC,GAAG;QACP,IAAI,CAAC,YAAY,CAAC,KAAK,EAAE,CAAC;IAC5B,CAAC;IAED,YAAY;QACV,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,aAAc,CAAC;IACpC,CAAC;IAED,MAAM;QACJ,OAAO,IAAI,CAAA,2BAA2B,CAAC,KAAY,EAAE,EAAE,CACrD,IAAI,CAAC,YAAY,CACf,KAAK,CACN,0FAA0F,CAAC;IAChG,CAAC;;AAEM,yBAAM,GAAG,GAAG,CAAA;;;;;;GAMlB,CAAC;AAzGgC;IAAjC,KAAK,CAAC,yBAAyB,CAAC;wDAAiC","sourcesContent":["import { List } from '@material/mwc-list';\nimport { ListItemBase } from '@material/mwc-list/mwc-list-item-base';\nimport { css, html, LitElement, query, TemplateResult } from 'lit-element';\nimport { get } from 'lit-translate';\nimport {\n  createElement,\n  EditorAction,\n  getReference,\n  identity,\n  newActionEvent,\n  newLogEvent,\n  newPendingStateEvent,\n  newWizardEvent,\n  selector,\n  SimpleAction,\n  Wizard,\n  WizardActor,\n} from '../foundation.js';\n\nfunction importIedsAction(\n  importDoc: XMLDocument,\n  doc: XMLDocument\n): WizardActor {\n  return (_, wizard: Element): EditorAction[] => {\n    const selectedItems = <ListItemBase[]>(\n      (<List>wizard.shadowRoot!.querySelector('#iedList')).selected\n    );\n\n    const promises = selectedItems\n      .map(item => {\n        return importDoc.querySelector(selector('IED', item.value));\n      })\n      .filter(ied => ied)\n      .map(ied => importIED(ied!, doc, <HTMLElement>wizard));\n\n    const mergedPromise = new Promise<void>((resolve, reject) =>\n      Promise.allSettled(promises).then(\n        () => resolve(),\n        () => reject()\n      )\n    );\n\n    wizard.dispatchEvent(newPendingStateEvent(mergedPromise));\n    wizard.dispatchEvent(newWizardEvent());\n    return [];\n  };\n}\n\nfunction importIedsWizard(importDoc: XMLDocument, doc: XMLDocument): Wizard {\n  return [\n    {\n      title: 'Import IEDs',\n      primary: {\n        icon: 'add',\n        label: 'IEDs',\n        action: importIedsAction(importDoc, doc),\n      },\n      content: [\n        html`<filtered-list id=\"iedList\" multi\n          >${Array.from(importDoc.querySelectorAll(':root > IED')).map(\n            ied =>\n              html`<mwc-check-list-item value=\"${identity(ied)}\"\n                >${ied.getAttribute('name')}</mwc-check-list-item\n              >`\n          )}</filtered-list\n        >`,\n      ],\n    },\n  ];\n}\n\nfunction getSubNetwork(elements: Element[], element: Element): Element {\n  const existElement = elements.find(\n    item => item.getAttribute('name') === element.getAttribute('name')\n  );\n  return existElement ? existElement : <Element>element.cloneNode(false);\n}\n\nfunction addCommunicationElements(\n  ied: Element,\n  doc: XMLDocument\n): SimpleAction[] {\n  const actions = [];\n\n  const oldCommunicationElement = doc.querySelector(':root > Communication');\n\n  const communication = oldCommunicationElement\n    ? oldCommunicationElement\n    : createElement(doc, 'Communication', {});\n\n  if (!oldCommunicationElement)\n    actions.push({\n      new: {\n        parent: doc.querySelector(':root')!,\n        element: communication,\n        reference: getReference(doc.querySelector(':root')!, 'Communication'),\n      },\n    });\n\n  const connectedAPs = Array.from(\n    ied.ownerDocument.querySelectorAll(\n      `:root > Communication > SubNetwork > ConnectedAP[iedName=\"${ied.getAttribute(\n        'name'\n      )}\"]`\n    )\n  );\n\n  const createdSubNetworks: Element[] = [];\n\n  connectedAPs.forEach(connectedAP => {\n    const newSubNetwork = <Element>connectedAP.parentElement!;\n    const oldSubNetworkMatch = communication.querySelector(\n      `:root > Communication > SubNetwork[name=\"${newSubNetwork.getAttribute(\n        'name'\n      )}\"]`\n    );\n\n    const subNetwork = oldSubNetworkMatch\n      ? oldSubNetworkMatch\n      : getSubNetwork(createdSubNetworks, newSubNetwork);\n    const element = <Element>connectedAP.cloneNode(true);\n\n    if (!oldSubNetworkMatch && !createdSubNetworks.includes(subNetwork)) {\n      actions.push({\n        new: {\n          parent: communication,\n          element: subNetwork,\n          reference: getReference(communication, 'SubNetwork'),\n        },\n      });\n      createdSubNetworks.push(subNetwork);\n    }\n\n    actions.push({\n      new: {\n        parent: subNetwork,\n        element,\n        reference: getReference(subNetwork, 'ConnectedAP'),\n      },\n    });\n  });\n\n  return actions;\n}\n\nfunction hasConnectionToIed(type: Element, ied: Element): boolean {\n  const data: Element = type.parentElement!;\n  const id = type.getAttribute('id');\n\n  if (!data || !id) return false;\n\n  if (type.tagName === 'EnumType')\n    return Array.from(\n      data.querySelectorAll(\n        `DOType > DA[type=\"${id}\"],DAType > BDA[type=\"${id}\"]`\n      )\n    ).some(typeChild => hasConnectionToIed(typeChild.parentElement!, ied));\n\n  if (type.tagName === 'DAType')\n    return Array.from(\n      data.querySelectorAll(\n        `DOType > DA[type=\"${id}\"],DAType > BDA[type=\"${id}\"]`\n      )\n    ).some(typeChild => hasConnectionToIed(typeChild.parentElement!, ied));\n\n  if (type.tagName === 'DOType')\n    return Array.from(\n      data.querySelectorAll(\n        `LNodeType > DO[type=\"${id}\"], DOType > SDO[type=\"${id}\"]`\n      )\n    ).some(typeChild => hasConnectionToIed(typeChild.parentElement!, ied));\n\n  return Array.from(ied.getElementsByTagName('LN0'))\n    .concat(Array.from(ied.getElementsByTagName('LN')))\n    .some(anyln => anyln.getAttribute('lnType') === id);\n}\n\nfunction addEnumType(\n  ied: Element,\n  enumType: Element,\n  doc: Document\n): SimpleAction | undefined {\n  const existEnumType = doc.querySelector(\n    `:root > DataTypeTemplates > EnumType[id=\"${enumType.getAttribute('id')}\"]`\n  );\n\n  if (existEnumType && enumType.isEqualNode(existEnumType)) return;\n  if (!hasConnectionToIed(enumType, ied)) return;\n\n  if (existEnumType) {\n    //INFO: id's within DataTypeTemplate must be unique. This is not the case here.\n    //Rename the id by adding IED name at the beginning\n    const data: Element = enumType.parentElement!;\n    const idOld = enumType.getAttribute('id');\n    const idNew = ied.getAttribute('name')! + idOld;\n\n    enumType.setAttribute('id', idNew);\n    data\n      .querySelectorAll(\n        `DOType > DA[type=\"${idOld}\"],DAType > BDA[type=\"${idOld}\"]`\n      )\n      .forEach(type => type.setAttribute('type', idNew));\n  }\n\n  return {\n    new: {\n      parent: doc.querySelector(':root > DataTypeTemplates')!,\n      element: enumType,\n      reference: getReference(\n        doc.querySelector(':root > DataTypeTemplates')!,\n        'EnumType'\n      ),\n    },\n  };\n}\n\nfunction addDAType(\n  ied: Element,\n  daType: Element,\n  doc: Document\n): SimpleAction | undefined {\n  const existDAType = doc.querySelector(\n    `:root > DataTypeTemplates > DAType[id=\"${daType.getAttribute('id')}\"]`\n  );\n\n  if (existDAType && daType.isEqualNode(existDAType)) return;\n  if (!hasConnectionToIed(daType, ied)) return;\n\n  if (existDAType) {\n    //INFO: id's within DataTypeTemplate must be unique. This is not the case here.\n    //Rename the id by adding IED name at the beginning\n    const data: Element | null = daType.parentElement!;\n    const idOld = daType.getAttribute('id');\n    const idNew = ied.getAttribute('name')! + idOld;\n\n    daType.setAttribute('id', idNew);\n    data\n      .querySelectorAll(\n        `DOType > DA[type=\"${idOld}\"],DAType > BDA[type=\"${idOld}\"]`\n      )\n      .forEach(type => type.setAttribute('type', idNew));\n  }\n\n  return {\n    new: {\n      parent: doc.querySelector(':root > DataTypeTemplates')!,\n      element: daType,\n      reference: getReference(\n        doc.querySelector(':root > DataTypeTemplates')!,\n        'DAType'\n      ),\n    },\n  };\n}\n\nfunction addDOType(\n  ied: Element,\n  doType: Element,\n  doc: Document\n): SimpleAction | undefined {\n  const existDOType = doc.querySelector(\n    `:root > DataTypeTemplates > DOType[id=\"${doType.getAttribute('id')}\"]`\n  );\n\n  if (existDOType && doType.isEqualNode(existDOType)) return;\n  if (!hasConnectionToIed(doType, ied)) return;\n\n  if (existDOType) {\n    //INFO: id's within DataTypeTemplate must be unique. This is not the case here.\n    //Rename the id by adding IED name at the beginning\n    const data: Element = doType.parentElement!;\n    const idOld = doType.getAttribute('id');\n    const idNew = ied.getAttribute('name')! + idOld;\n\n    doType.setAttribute('id', idNew);\n    data\n      .querySelectorAll(\n        `LNodeType > DO[type=\"${idOld}\"], DOType > SDO[type=\"${idOld}\"]`\n      )\n      .forEach(type => type.setAttribute('type', idNew));\n  }\n\n  return {\n    new: {\n      parent: doc.querySelector(':root > DataTypeTemplates')!,\n      element: doType,\n      reference: getReference(\n        doc.querySelector(':root > DataTypeTemplates')!,\n        'DOType'\n      ),\n    },\n  };\n}\n\nfunction addLNodeType(\n  ied: Element,\n  lNodeType: Element,\n  doc: Document\n): SimpleAction | undefined {\n  const existLNodeType = doc.querySelector(\n    `:root > DataTypeTemplates > LNodeType[id=\"${lNodeType.getAttribute(\n      'id'\n    )}\"]`\n  );\n\n  if (existLNodeType && lNodeType.isEqualNode(existLNodeType)) return;\n  if (!hasConnectionToIed(lNodeType, ied)) return;\n\n  if (existLNodeType) {\n    //INFO: id's within DataTypeTemplate must be unique. This is not the case here.\n    //Rename the id by adding IED name at the beginning\n    const idOld = lNodeType.getAttribute('id')!;\n    const idNew = ied.getAttribute('name')!.concat(idOld);\n\n    lNodeType.setAttribute('id', idNew);\n    ied\n      .querySelectorAll(\n        `AccessPoint > Server > LDevice > LN0[lnType=\"${idOld}\"], AccessPoint > Server > LDevice > LN[lnType=\"${idOld}\"]`\n      )\n      .forEach(ln => ln.setAttribute('lnType', idNew));\n  }\n\n  return {\n    new: {\n      parent: doc.querySelector(':root > DataTypeTemplates')!,\n      element: lNodeType,\n      reference: getReference(\n        doc.querySelector('DataTypeTemplates')!,\n        'LNodeType'\n      ),\n    },\n  };\n}\n\nfunction addDataTypeTemplates(ied: Element, doc: XMLDocument): SimpleAction[] {\n  const actions: (SimpleAction | undefined)[] = [];\n\n  ied.ownerDocument\n    .querySelectorAll(':root > DataTypeTemplates > LNodeType')\n    .forEach(lNodeType => actions.push(addLNodeType(ied, lNodeType, doc)));\n\n  ied.ownerDocument\n    .querySelectorAll(':root > DataTypeTemplates > DOType')\n    .forEach(doType => actions.push(addDOType(ied, doType, doc)));\n\n  ied.ownerDocument\n    .querySelectorAll(':root > DataTypeTemplates > DAType')\n    .forEach(daType => actions.push(addDAType(ied, daType, doc)));\n\n  ied.ownerDocument\n    .querySelectorAll(':root > DataTypeTemplates > EnumType')\n    .forEach(enumType => actions.push(addEnumType(ied, enumType, doc)));\n\n  return <SimpleAction[]>actions.filter(item => item !== undefined);\n}\n\nfunction isIedNameUnique(ied: Element, doc: Document): boolean {\n  const existingIedNames = Array.from(doc.querySelectorAll(':root > IED')).map(\n    ied => ied.getAttribute('name')!\n  );\n  const importedIedName = ied.getAttribute('name')!;\n\n  if (existingIedNames.includes(importedIedName)) return false;\n\n  return true;\n}\n\nexport async function importIED(\n  ied: Element,\n  doc: XMLDocument,\n  dispatchObject: HTMLElement\n): Promise<void> {\n  if (ied.getAttribute('name') === 'TEMPLATE')\n    ied.setAttribute(\n      'name',\n      'TEMPLATE_IED' +\n        (Array.from(doc.querySelectorAll('IED')).filter(ied =>\n          ied.getAttribute('name')?.includes('TEMPLATE')\n        ).length +\n          1)\n    );\n\n  if (!isIedNameUnique(ied, doc)) {\n    dispatchObject.dispatchEvent(\n      newLogEvent({\n        kind: 'error',\n        title: get('import.log.nouniqueied', {\n          name: ied.getAttribute('name')!,\n        }),\n      })\n    );\n  }\n\n  const dataTypeTemplateActions = addDataTypeTemplates(ied, doc);\n  const communicationActions = addCommunicationElements(ied, doc);\n  const actions = communicationActions.concat(dataTypeTemplateActions);\n  actions.push({\n    new: {\n      parent: doc!.querySelector(':root')!,\n      element: ied,\n      reference: getReference(doc!.querySelector(':root')!, 'IED'),\n    },\n  });\n\n  dispatchObject.dispatchEvent(\n    newActionEvent({\n      title: get('editing.import', { name: ied.getAttribute('name')! }),\n      actions,\n    })\n  );\n}\n\nexport default class ImportingIedPlugin extends LitElement {\n  doc!: XMLDocument;\n  parent!: HTMLElement;\n\n  @query('#importied-plugin-input') pluginFileUI!: HTMLInputElement;\n\n  /** Loads the file `event.target.files[0]` into [[`src`]] as a `blob:...`. */\n  private async loadIedFiles(event: Event): Promise<void> {\n    const files = Array.from(\n      (<HTMLInputElement | null>event.target)?.files ?? []\n    );\n\n    const promises = files.map(async file => {\n      const importDoc = new DOMParser().parseFromString(\n        await file.text(),\n        'application/xml'\n      );\n\n      return this.prepareImport(importDoc, this.doc!);\n    });\n\n    const mergedPromise = new Promise<void>((resolve, reject) =>\n      Promise.allSettled(promises).then(\n        () => resolve(),\n        () => reject()\n      )\n    );\n\n    this.parent.dispatchEvent(newPendingStateEvent(mergedPromise));\n  }\n\n  public async prepareImport(\n    importDoc: XMLDocument,\n    doc: XMLDocument\n  ): Promise<void> {\n    if (!importDoc) {\n      this.parent.dispatchEvent(\n        newLogEvent({\n          kind: 'error',\n          title: get('import.log.loaderror'),\n        })\n      );\n      return;\n    }\n\n    if (importDoc.querySelector('parsererror')) {\n      this.parent.dispatchEvent(\n        newLogEvent({\n          kind: 'error',\n          title: get('import.log.parsererror'),\n        })\n      );\n      return;\n    }\n\n    const ieds = Array.from(importDoc.querySelectorAll(':root > IED'));\n    if (ieds.length === 0) {\n      this.parent.dispatchEvent(\n        newLogEvent({\n          kind: 'error',\n          title: get('import.log.missingied'),\n        })\n      );\n      return;\n    }\n\n    if (!doc.querySelector(':root > DataTypeTemplates')) {\n      const element = createElement(doc, 'DataTypeTemplates', {});\n\n      this.parent.dispatchEvent(\n        newActionEvent({\n          new: {\n            parent: doc.documentElement,\n            element,\n            reference: getReference(doc.documentElement, 'DataTypeTemplates'),\n          },\n        })\n      );\n    }\n\n    if (ieds.length === 1) {\n      importIED(ieds[0], doc, this.parent);\n      return;\n    }\n\n    this.parent.dispatchEvent(newWizardEvent(importIedsWizard(importDoc, doc)));\n  }\n\n  async run(): Promise<void> {\n    this.pluginFileUI.click();\n  }\n\n  firstUpdated(): void {\n    this.parent = this.parentElement!;\n  }\n\n  render(): TemplateResult {\n    return html`<input multiple @change=${(event: Event) =>\n      this.loadIedFiles(\n        event\n      )} id=\"importied-plugin-input\" accept=\".sed,.scd,.ssd,.iid,.cid,.icd\" type=\"file\"></input>`;\n  }\n\n  static styles = css`\n    input {\n      width: 0;\n      height: 0;\n      opacity: 0;\n    }\n  `;\n}\n"]}