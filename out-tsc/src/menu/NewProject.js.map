{"version":3,"file":"NewProject.js","sourceRoot":"","sources":["../../../src/menu/NewProject.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,IAAI,EAAE,UAAU,EAAE,MAAM,aAAa,CAAC;AAC/C,OAAO,EAAE,GAAG,EAAE,MAAM,eAAe,CAAC;AAIpC,OAAO,EAEL,WAAW,EACX,eAAe,EACf,cAAc,GAGf,MAAM,kBAAkB,CAAC;AAC1B,OAAO,EAAE,WAAW,EAAoB,MAAM,eAAe,CAAC;AAE9D,MAAM,CAAC,OAAO,OAAO,gBAAiB,SAAQ,UAAU;IAC9C,gBAAgB,CACtB,MAAqB,EACrB,MAAe;QAEf,MAAM,OAAO,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC,KAAK,EAAE,KAAK,CAAC,YAAY,CAAC;YAClD,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,KAAK;YACjB,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,KAAK,GAAG,MAAM,CAAC;QAC7B,MAAM,OAAO,GAAqB,CACjB,MAAM,CAAC,UAAW,CAAC,aAAa,CAAC,UAAU,CAAE,CAAC,QAAS;aACnE,KAAK,CACT,CAAC;QAEF,QAAQ;aACL,aAAa,CAAC,UAAU,CAAC;YAC1B,EAAE,aAAa,CAAC,WAAW,CAAC,EAAE,IAAI,EAAE,OAAO,EAAE,CAAC,CAAC,CAAC;QAClD,QAAQ;aACL,aAAa,CAAC,UAAU,CAAC;YAC1B,EAAE,aAAa,CACb,eAAe,CAAC,WAAW,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,OAAO,CAAC,EAAE,OAAO,CAAC,CACrE,CAAC;QAEJ,OAAO,CAAC,EAAE,OAAO,EAAE,EAAE,EAAE,KAAK,EAAE,EAAE,EAAE,OAAO,EAAE,IAAI,EAAE,CAAC,CAAC;IACrD,CAAC;IAEO,gBAAgB;QACtB,OAAO;YACL;gBACE,KAAK,EAAE,GAAG,CAAC,UAAU,CAAC;gBACtB,OAAO,EAAE;oBACP,IAAI,EAAE,mBAAmB;oBACzB,KAAK,EAAE,GAAG,CAAC,QAAQ,CAAC;oBACpB,MAAM,EAAE,CAAC,MAAM,EAAE,MAAM,EAAE,EAAE,CAAC,IAAI,CAAC,gBAAgB,CAAC,MAAM,EAAE,MAAM,CAAC;iBAClE;gBACD,OAAO,EAAE;oBACP,IAAI,CAAA;;;;;;;;;;;;;;;;;wBAiBU;iBACf;aACF;SACF,CAAC;IACJ,CAAC;IAED,KAAK,CAAC,GAAG;QACP,QAAQ;aACL,aAAa,CAAC,UAAU,CAAC;YAC1B,EAAE,aAAa,CAAC,cAAc,CAAC,IAAI,CAAC,gBAAgB,EAAE,CAAC,CAAC,CAAC;IAC7D,CAAC;CACF","sourcesContent":["import { html, LitElement } from 'lit-element';\nimport { get } from 'lit-translate';\n\nimport { ListItemBase } from '@material/mwc-list/mwc-list-item-base';\n\nimport {\n  EditorAction,\n  newLogEvent,\n  newOpenDocEvent,\n  newWizardEvent,\n  Wizard,\n  WizardInput,\n} from '../foundation.js';\nimport { newEmptySCD, SupportedVersion } from '../schemas.js';\n\nexport default class NewProjectPlugin extends LitElement {\n  private createNewProject(\n    inputs: WizardInput[],\n    wizard: Element\n  ): EditorAction[] {\n    const docName = inputs[0].value?.match(/\\.s[sc]d$/i)\n      ? inputs[0].value\n      : inputs[0].value + '.scd';\n    const version = <SupportedVersion>(\n      (<ListItemBase>wizard.shadowRoot!.querySelector('mwc-list')!.selected)\n        .value\n    );\n\n    document\n      .querySelector('open-scd')\n      ?.dispatchEvent(newLogEvent({ kind: 'reset' }));\n    document\n      .querySelector('open-scd')\n      ?.dispatchEvent(\n        newOpenDocEvent(newEmptySCD(docName.slice(0, -4), version), docName)\n      );\n\n    return [{ actions: [], title: '', derived: true }];\n  }\n\n  private newProjectWizard(): Wizard {\n    return [\n      {\n        title: get('menu.new'),\n        primary: {\n          icon: 'create_new_folder',\n          label: get('create'),\n          action: (inputs, wizard) => this.createNewProject(inputs, wizard),\n        },\n        content: [\n          html`<wizard-textfield\n              id=\"srcName\"\n              label=\"name\"\n              value=\"project.scd\"\n              required\n              dialogInitialFocus\n            ></wizard-textfield>\n            <mwc-list activatable>\n              <mwc-radio-list-item left value=\"2003\"\n                >Edition 1 (Schema 1.7)</mwc-radio-list-item\n              >\n              <mwc-radio-list-item left value=\"2007B\"\n                >Edition 2 (Schema 3.1)</mwc-radio-list-item\n              >\n              <mwc-radio-list-item left selected value=\"2007B4\"\n                >Edition 2.1 (2007B4)</mwc-radio-list-item\n              >\n            </mwc-list>`,\n        ],\n      },\n    ];\n  }\n\n  async run(): Promise<void> {\n    document\n      .querySelector('open-scd')\n      ?.dispatchEvent(newWizardEvent(this.newProjectWizard()));\n  }\n}\n"]}