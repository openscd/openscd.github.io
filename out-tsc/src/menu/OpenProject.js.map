{"version":3,"file":"OpenProject.js","sourceRoot":"","sources":["../../../src/menu/OpenProject.ts"],"names":[],"mappings":";AAAA,OAAO,EAAE,GAAG,EAAE,IAAI,EAAE,UAAU,EAAE,KAAK,EAAkB,MAAM,aAAa,CAAC;AAE3E,OAAO,EAAE,WAAW,EAAE,eAAe,EAAE,MAAM,kBAAkB,CAAC;AAEhE,MAAM,CAAC,OAAO,OAAO,iBAAkB,SAAQ,UAAU;IAGvD,KAAK,CAAC,OAAO,CAAC,KAAY;QACxB,MAAM,IAAI,GACkB,KAAK,CAAC,MAAO,EAAE,KAAK,EAAE,IAAI,CAAC,CAAC,CAAC,IAAI,KAAK,CAAC;QACnE,IAAI,CAAC,IAAI;YAAE,OAAO;QAElB,MAAM,IAAI,GAAG,MAAM,IAAI,CAAC,IAAI,EAAE,CAAC;QAC/B,MAAM,OAAO,GAAG,IAAI,CAAC,IAAI,CAAC;QAC1B,MAAM,GAAG,GAAG,IAAI,SAAS,EAAE,CAAC,eAAe,CAAC,IAAI,EAAE,iBAAiB,CAAC,CAAC;QAErE,QAAQ;aACL,aAAa,CAAC,UAAU,CAAE;aAC1B,aAAa,CAAC,WAAW,CAAC,EAAE,IAAI,EAAE,OAAO,EAAE,CAAC,CAAC,CAAC;QACjD,QAAQ;aACL,aAAa,CAAC,UAAU,CAAE;aAC1B,aAAa,CAAC,eAAe,CAAC,GAAG,EAAE,OAAO,CAAC,CAAC,CAAC;QAChD,IAAI,CAAC,YAAY,CAAC,QAAQ,GAAG,IAAI,CAAC;IACpC,CAAC;IAED,KAAK,CAAC,GAAG;QACP,IAAI,CAAC,YAAY,CAAC,KAAK,EAAE,CAAC;IAC5B,CAAC;IAED,MAAM;QACJ,OAAO,IAAI,CAAA,iBAAiB,CAAC,KAAiB,EAAE,EAAE,CAChD,CAAoB,KAAK,CAAC,MAAO,CAAC,KAAK,GAAG,EAAE,CAAC,YAC7C,IAAI,CAAC,OACP,qFAAqF,CAAC;IACxF,CAAC;;AAEM,wBAAM,GAAG,GAAG,CAAA;;;;;;GAMlB,CAAC;AArC2B;IAA5B,KAAK,CAAC,oBAAoB,CAAC;uDAAiC","sourcesContent":["import { css, html, LitElement, query, TemplateResult } from 'lit-element';\n\nimport { newLogEvent, newOpenDocEvent } from '../foundation.js';\n\nexport default class OpenProjectPlugin extends LitElement {\n  @query('#open-plugin-input') pluginFileUI!: HTMLInputElement;\n\n  async openDoc(event: Event): Promise<void> {\n    const file =\n      (<HTMLInputElement | null>event.target)?.files?.item(0) ?? false;\n    if (!file) return;\n\n    const text = await file.text();\n    const docName = file.name;\n    const doc = new DOMParser().parseFromString(text, 'application/xml');\n\n    document\n      .querySelector('open-scd')!\n      .dispatchEvent(newLogEvent({ kind: 'reset' }));\n    document\n      .querySelector('open-scd')!\n      .dispatchEvent(newOpenDocEvent(doc, docName));\n    this.pluginFileUI.onchange = null;\n  }\n\n  async run(): Promise<void> {\n    this.pluginFileUI.click();\n  }\n\n  render(): TemplateResult {\n    return html`<input @click=${(event: MouseEvent) =>\n      ((<HTMLInputElement>event.target).value = '')} @change=${\n      this.openDoc\n    } id=\"open-plugin-input\" accept=\".sed,.scd,.ssd,.iid,.cid,.icd\" type=\"file\"></input>`;\n  }\n\n  static styles = css`\n    input {\n      width: 0;\n      height: 0;\n      opacity: 0;\n    }\n  `;\n}\n"]}