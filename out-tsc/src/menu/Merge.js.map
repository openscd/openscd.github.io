{"version":3,"file":"Merge.js","sourceRoot":"","sources":["../../../src/menu/Merge.ts"],"names":[],"mappings":";AAAA,OAAO,EAAE,GAAG,EAAE,IAAI,EAAE,UAAU,EAAE,KAAK,EAAkB,MAAM,aAAa,CAAC;AAE3E,OAAO,EAAE,cAAc,EAAE,MAAM,kBAAkB,CAAC;AAClD,OAAO,EAAE,WAAW,EAAE,MAAM,eAAe,CAAC;AAE5C,MAAM,CAAC,OAAO,OAAO,WAAY,SAAQ,UAAU;IAKjD,QAAQ,CAAC,KAAY;QACnB,MAAM,IAAI,GACkB,KAAK,CAAC,MAAO,EAAE,KAAK,EAAE,IAAI,CAAC,CAAC,CAAC,IAAI,KAAK,CAAC;QACnE,IAAI,IAAI;YACN,IAAI,CAAC,IAAI,EAAE,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE;gBACtB,MAAM,GAAG,GAAG,IAAI,SAAS,EAAE,CAAC,eAAe,CAAC,IAAI,EAAE,iBAAiB,CAAC,CAAC;gBACrE,6CAA6C;gBAC7C,QAAQ;qBACL,aAAa,CAAC,UAAU,CAAE;qBAC1B,aAAa,CACZ,cAAc,CACZ,WAAW,CAAC,IAAI,CAAC,GAAG,CAAC,eAAe,EAAE,GAAG,CAAC,eAAe,CAAC,CAC3D,CACF,CAAC;YACN,CAAC,CAAC,CAAC;QACL,IAAI,CAAC,YAAY,CAAC,QAAQ,GAAG,IAAI,CAAC;IACpC,CAAC;IAED,KAAK,CAAC,GAAG;QACP,IAAI,CAAC,YAAY,CAAC,KAAK,EAAE,CAAC;IAC5B,CAAC;IAED,MAAM;QACJ,OAAO,IAAI,CAAA,iBAAiB,CAAC,KAAiB,EAAE,EAAE,CAChD,CAAoB,KAAK,CAAC,MAAO,CAAC,KAAK,GAAG,EAAE,CAAC,YAC7C,IAAI,CAAC,QACP,sFAAsF,CAAC;IACzF,CAAC;;AAEM,kBAAM,GAAG,GAAG,CAAA;;;;;;GAMlB,CAAC;AArC4B;IAA7B,KAAK,CAAC,qBAAqB,CAAC;iDAAiC","sourcesContent":["import { css, html, LitElement, query, TemplateResult } from 'lit-element';\n\nimport { newWizardEvent } from '../foundation.js';\nimport { mergeWizard } from '../wizards.js';\n\nexport default class MergePlugin extends LitElement {\n  doc!: XMLDocument;\n\n  @query('#merge-plugin-input') pluginFileUI!: HTMLInputElement;\n\n  mergeDoc(event: Event): void {\n    const file =\n      (<HTMLInputElement | null>event.target)?.files?.item(0) ?? false;\n    if (file)\n      file.text().then(text => {\n        const doc = new DOMParser().parseFromString(text, 'application/xml');\n        // FIXME: Dirty hack should not be necessary!\n        document\n          .querySelector('open-scd')!\n          .dispatchEvent(\n            newWizardEvent(\n              mergeWizard(this.doc.documentElement, doc.documentElement)\n            )\n          );\n      });\n    this.pluginFileUI.onchange = null;\n  }\n\n  async run(): Promise<void> {\n    this.pluginFileUI.click();\n  }\n\n  render(): TemplateResult {\n    return html`<input @click=${(event: MouseEvent) =>\n      ((<HTMLInputElement>event.target).value = '')} @change=${\n      this.mergeDoc\n    } id=\"merge-plugin-input\" accept=\".sed,.scd,.ssd,.iid,.cid,.icd\" type=\"file\"></input>`;\n  }\n\n  static styles = css`\n    input {\n      width: 0;\n      height: 0;\n      opacity: 0;\n    }\n  `;\n}\n"]}