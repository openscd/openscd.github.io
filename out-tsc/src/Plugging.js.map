{"version":3,"file":"Plugging.js","sourceRoot":"","sources":["../../src/Plugging.ts"],"names":[],"mappings":"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","sourcesContent":["import { html as litHtml, query, TemplateResult } from 'lit-element';\nimport { translate } from 'lit-translate';\nimport wrapHtml from 'carehtml';\n\nconst html = wrapHtml(litHtml);\n\nimport { Dialog } from '@material/mwc-dialog';\nimport { List } from '@material/mwc-list';\nimport { TextField } from '@material/mwc-textfield';\n\nimport { ifImplemented, LitElementConstructor, Mixin } from './foundation.js';\nimport { EditingElement } from './Editing.js';\nimport { MultiSelectedEvent } from '@material/mwc-list/mwc-list-foundation';\nimport { ListItem } from '@material/mwc-list/mwc-list-item';\nimport { officialPlugins } from '../public/js/plugins.js';\n\ntype PluginKind = 'editor' | 'triggered';\n\ntype AvailablePlugin = {\n  name: string;\n  src: string;\n  icon?: string;\n  kind: PluginKind;\n  installed: boolean;\n};\n\nexport type InstalledPlugin = AvailablePlugin & {\n  content: () => Promise<TemplateResult>;\n  installed: true;\n};\n\nexport const pluginIcons: Record<PluginKind, string> = {\n  editor: 'tab',\n  triggered: 'play_circle',\n};\n\nasync function storeDefaultPlugins(): Promise<void> {\n  localStorage.setItem('externalPlugins', JSON.stringify([]));\n  localStorage.setItem(\n    'officialPlugins',\n    JSON.stringify(\n      await officialPlugins.map(plugin => {\n        return { ...plugin, installed: plugin.default ?? false };\n      })\n    )\n  );\n}\n\nfunction isNew(src: string): boolean {\n  const installedOfficialPlugins = <AvailablePlugin[]>(\n    JSON.parse(localStorage.getItem('officialPlugins') ?? '[]')\n  );\n\n  return !installedOfficialPlugins.some(\n    installedOfficialPlugin => installedOfficialPlugin.src === src\n  );\n}\n\nfunction isInstalled(src: string): boolean {\n  const installedOfficialPlugins = <AvailablePlugin[]>(\n    JSON.parse(localStorage.getItem('officialPlugins') ?? '[]')\n  );\n\n  return installedOfficialPlugins.some(\n    installedOfficialPlugin =>\n      installedOfficialPlugin.src === src && installedOfficialPlugin.installed\n  );\n}\n\n/** Mixin that manages Plugins in `localStorage` */\nexport type PluggingElement = Mixin<typeof Plugging>;\n\nconst loadedPlugins = new Map<string, LitElementConstructor>();\n\nexport function Plugging<TBase extends new (...args: any[]) => EditingElement>(\n  Base: TBase\n) {\n  class PluggingElement extends Base {\n    get editors(): InstalledPlugin[] {\n      return this.plugins\n        .filter(plugin => plugin.installed && plugin.kind === 'editor')\n        .map(plugin => this.addContent(plugin));\n    }\n    get items(): InstalledPlugin[] {\n      return this.plugins\n        .filter(plugin => plugin.installed && plugin.kind === 'triggered')\n        .map(plugin => this.addContent(plugin));\n    }\n\n    private get plugins(): AvailablePlugin[] {\n      return this.officialPlugins.concat(this.externalPlugins);\n    }\n\n    private get officialPlugins(): AvailablePlugin[] {\n      return <InstalledPlugin[]>(<unknown>officialPlugins.map(plugin => {\n        return {\n          ...plugin,\n          installed: isNew(plugin.src) || isInstalled(plugin.src),\n        };\n      }));\n    }\n\n    private get externalPlugins(): AvailablePlugin[] {\n      return <InstalledPlugin[]>(\n        JSON.parse(localStorage.getItem('externalPlugins') ?? '[]')\n      );\n    }\n\n    @query('#pluginManager')\n    pluginUI!: Dialog;\n    @query('#officialPluginList')\n    officialPluginList!: List;\n    @query('#pluginAdd')\n    pluginDownloadUI!: Dialog;\n\n    private setOfficialPlugins(indices: Set<number>): void {\n      const newPlugins = this.officialPlugins.map((plugin, index) => {\n        return { ...plugin, installed: indices.has(index) };\n      });\n      localStorage.setItem('officialPlugins', JSON.stringify(newPlugins));\n      this.requestUpdate();\n    }\n\n    private setExternalPlugins(indices: Set<number>): void {\n      const newPlugins = this.externalPlugins.map((plugin, index) => {\n        return { ...plugin, installed: indices.has(index) };\n      });\n      localStorage.setItem('externalPlugins', JSON.stringify(newPlugins));\n      this.requestUpdate();\n    }\n\n    private addExternalPlugin(plugin: AvailablePlugin): void {\n      if (this.externalPlugins.some(p => p.src === plugin.src)) return;\n\n      const newPlugins = this.externalPlugins;\n      newPlugins.push(plugin);\n      localStorage.setItem('externalPlugins', JSON.stringify(newPlugins));\n    }\n\n    private addContent(plugin: AvailablePlugin): InstalledPlugin {\n      return {\n        ...plugin,\n        installed: true,\n        content: async (): Promise<TemplateResult> => {\n          if (!loadedPlugins.has(plugin.src))\n            loadedPlugins.set(\n              plugin.src,\n              await import(plugin.src).then(mod => mod.default)\n            );\n          return html`<${loadedPlugins.get(plugin.src)}\n            .doc=${this.doc}\n            .docName=${this.docName}\n          ></${loadedPlugins.get(plugin.src)}>`;\n        },\n      };\n    }\n\n    private handleAddPlugin() {\n      const pluginSrcInput = <TextField>(\n        this.pluginDownloadUI.querySelector('#pluginSrcInput')\n      );\n      const pluginNameInput = <TextField>(\n        this.pluginDownloadUI.querySelector('#pluginNameInput')\n      );\n      const pluginKindList = <List>(\n        this.pluginDownloadUI.querySelector('#pluginKindList')\n      );\n\n      if (\n        !(\n          pluginSrcInput.checkValidity() &&\n          pluginNameInput.checkValidity() &&\n          pluginKindList.selected\n        )\n      )\n        return;\n\n      this.addExternalPlugin({\n        src: pluginSrcInput.value,\n        name: pluginNameInput.value,\n        kind: <PluginKind>(<ListItem>pluginKindList.selected).value,\n        installed: true,\n      });\n\n      this.requestUpdate();\n      this.pluginUI.requestUpdate();\n      this.pluginDownloadUI.close();\n    }\n\n    constructor(...args: any[]) {\n      super(...args);\n\n      if (localStorage.getItem('officialPlugins') === null)\n        storeDefaultPlugins().then(() => this.requestUpdate());\n    }\n\n    renderDownloadUI(): TemplateResult {\n      return html`\n        <mwc-dialog\n          id=\"pluginAdd\"\n          heading=\"${translate('plugins.add.heading')}\"\n        >\n          <div style=\"display: flex; flex-direction: column; row-gap: 8px;\">\n            <p style=\"color:var(--mdc-theme-error);\">\n              ${translate('plugins.add.warning')}\n            </p>\n            <mwc-textfield\n              label=\"${translate('plugins.add.name')}\"\n              helper=\"${translate('plugins.add.nameHelper')}\"\n              required\n              id=\"pluginNameInput\"\n            ></mwc-textfield>\n            <mwc-list id=\"pluginKindList\">\n              <mwc-radio-list-item value=\"editor\" hasMeta selected left\n                >${translate('plugins.editor')}<mwc-icon slot=\"meta\"\n                  >${pluginIcons['editor']}</mwc-icon\n                ></mwc-radio-list-item\n              >\n              <mwc-radio-list-item value=\"triggered\" hasMeta left\n                >${translate('plugins.triggered')}<mwc-icon slot=\"meta\"\n                  >${pluginIcons['triggered']}</mwc-icon\n                ></mwc-radio-list-item\n              >\n            </mwc-list>\n            <mwc-textfield\n              label=\"${translate('plugins.add.src')}\"\n              helper=\"${translate('plugins.add.srcHelper')}\"\n              placeholder=\"http://example.com/plugin.js\"\n              type=\"url\"\n              required\n              id=\"pluginSrcInput\"\n            ></mwc-textfield>\n          </div>\n          <mwc-button\n            slot=\"secondaryAction\"\n            dialogAction=\"close\"\n            label=\"${translate('cancel')}\"\n          ></mwc-button>\n          <mwc-button\n            slot=\"primaryAction\"\n            icon=\"add\"\n            label=\"${translate('add')}\"\n            trailingIcon\n            @click=${() => this.handleAddPlugin()}\n          ></mwc-button>\n        </mwc-dialog>\n      `;\n    }\n\n    renderPluginUI(): TemplateResult {\n      return html`\n        <mwc-dialog\n          stacked\n          id=\"pluginManager\"\n          heading=\"${translate('plugins.heading')}\"\n        >\n          <mwc-list\n            @selected=${(e: MultiSelectedEvent) =>\n              this.setOfficialPlugins(e.detail.index)}\n            id=\"officialPluginList\"\n            activatable\n            multi\n          >\n            ${this.officialPlugins.map(\n              plugin =>\n                html`<mwc-list-item\n                  value=\"${plugin.src}\"\n                  hasMeta\n                  graphic=\"icon\"\n                  ?activated=${plugin.installed}\n                  ?selected=${plugin.installed}\n                >\n                  <mwc-icon slot=\"graphic\"\n                    >${plugin.icon || pluginIcons[plugin.kind]}</mwc-icon\n                  >\n                  ${plugin.name}\n                  <mwc-icon slot=\"meta\"\n                    >${pluginIcons[plugin.kind]}</mwc-icon\n                  ></mwc-list-item\n                >`\n            )}\n          </mwc-list>\n          <mwc-list\n            @selected=${(e: MultiSelectedEvent) =>\n              this.setExternalPlugins(e.detail.index)}\n            id=\"externalPluginList\"\n            activatable\n            multi\n          >\n            ${this.externalPlugins.map(\n              plugin =>\n                html`<mwc-list-item\n                  value=\"${plugin.src}\"\n                  hasMeta\n                  graphic=\"icon\"\n                  ?activated=${plugin.installed}\n                  ?selected=${plugin.installed}\n                >\n                  <mwc-icon slot=\"graphic\"\n                    >${plugin.icon || pluginIcons[plugin.kind]}</mwc-icon\n                  >\n                  ${plugin.name}\n                  <mwc-icon slot=\"meta\"\n                    >${pluginIcons[plugin.kind]}</mwc-icon\n                  ></mwc-list-item\n                >`\n            )}\n          </mwc-list>\n          <mwc-button\n            slot=\"secondaryAction\"\n            icon=\"refresh\"\n            label=\"${translate('reset')}\"\n            @click=${async () => {\n              storeDefaultPlugins();\n              this.requestUpdate();\n            }}\n            style=\"--mdc-theme-primary: var(--mdc-theme-error)\"\n          >\n          </mwc-button>\n          <mwc-button\n            raised\n            trailingIcon\n            slot=\"primaryAction\"\n            icon=\"library_add\"\n            label=\"${translate('add')}&hellip;\"\n            @click=${() => this.pluginDownloadUI.show()}\n          >\n          </mwc-button>\n        </mwc-dialog>\n      `;\n    }\n\n    render(): TemplateResult {\n      return html`\n        ${ifImplemented(super.render())} ${this.renderPluginUI()}\n        ${this.renderDownloadUI()}\n      `;\n    }\n  }\n\n  return PluggingElement;\n}\n"]}