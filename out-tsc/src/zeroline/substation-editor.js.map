{"version":3,"file":"substation-editor.js","sourceRoot":"","sources":["../../../src/zeroline/substation-editor.ts"],"names":[],"mappings":"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","sourcesContent":["import {\n  css,\n  customElement,\n  html,\n  LitElement,\n  property,\n  TemplateResult,\n} from 'lit-element';\nimport { translate } from 'lit-translate';\n\nimport { newActionEvent, newWizardEvent } from '../foundation.js';\nimport {\n  cloneSubstationElement,\n  selectors,\n  startMove,\n  styles,\n} from './foundation.js';\n\nimport { wizards } from '../wizards/wizard-library.js';\n\nimport './voltage-level-editor.js';\nimport '../editor-container.js';\n\n/** [[`Substation`]] plugin subeditor for editing `Substation` sections. */\n@customElement('substation-editor')\nexport class SubstationEditor extends LitElement {\n  /** The edited `Element`, a common property of all Substation subeditors. */\n  @property({ attribute: false })\n  element!: Element;\n  @property({ type: Boolean })\n  readonly = false;\n\n  @property({ attribute: false })\n  getAttachedIeds?: (element: Element) => Element[] = () => {\n    return [];\n  };\n\n  /** Opens a [[`WizardDialog`]] for editing [[`element`]]. */\n  openEditWizard(): void {\n    const wizard = wizards['Substation'].edit(this.element);\n    if (wizard) this.dispatchEvent(newWizardEvent(wizard));\n  }\n\n  /** Opens a [[`WizardDialog`]] for editing `LNode` connections. */\n  openLNodeWizard(): void {\n    const wizard = wizards['LNode'].edit(this.element);\n    if (wizard) this.dispatchEvent(newWizardEvent(wizard));\n  }\n\n  /** Deletes [[`element`]]. */\n  remove(): void {\n    this.dispatchEvent(\n      newActionEvent({\n        old: {\n          parent: this.element.parentElement!,\n          element: this.element,\n          reference: this.element.nextSibling,\n        },\n      })\n    );\n  }\n\n  renderIedContainer(): TemplateResult {\n    const ieds = this.getAttachedIeds?.(this.element) ?? [];\n    return ieds?.length\n      ? html`<div id=\"iedcontainer\" slot=\"container\">\n          ${ieds.map(ied => html`<ied-editor .element=${ied}></ied-editor>`)}\n        </div>`\n      : html``;\n  }\n\n  render(): TemplateResult {\n    return html`\n        <editor-container\n          .element=${this.element}\n          >\n          ${this.renderIedContainer()}\n          <abbr slot=\"header\" title=\"${translate('lnode.tooltip')}\">\n            <mwc-icon-button\n              icon=\"account_tree\"\n              @click=${() => this.openLNodeWizard()}\n            ></mwc-icon-button>\n          </abbr>\n          <abbr slot=\"header\" title=\"${translate('duplicate')}\">\n            <mwc-icon-button\n              icon=\"content_copy\"\n              @click=${() => cloneSubstationElement(this)}\n            ></mwc-icon-button>\n          </abbr>\n          <abbr slot=\"header\" title=\"${translate('edit')}\">\n            <mwc-icon-button\n              icon=\"edit\"\n              @click=${() => this.openEditWizard()}\n            ></mwc-icon-button>\n          </abbr>\n          <abbr slot=\"header\" title=\"${translate('move')}\">\n            <mwc-icon-button\n              icon=\"forward\"\n              @click=${() =>\n                startMove(this, SubstationEditor, SubstationEditor)}\n            ></mwc-icon-button>\n          </abbr>\n          <abbr slot=\"header\" title=\"${translate('remove')}\">\n            <mwc-icon-button\n              icon=\"delete\"\n              @click=${() => this.remove()}\n            ></mwc-icon-button> </abbr\n        >${Array.from(\n          this.element.querySelectorAll(selectors.VoltageLevel)\n        ).map(\n          voltageLevel =>\n            html`<voltage-level-editor\n              slot=\"container\"\n              .element=${voltageLevel}\n              .getAttachedIeds=${this.getAttachedIeds}\n              ?readonly=${this.readonly}\n            ></voltage-level-editor>`\n        )}</editor-container>\n      </section>\n    `;\n  }\n\n  static styles = css`\n    ${styles}\n  `;\n}\n"]}