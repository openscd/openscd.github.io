{"version":3,"file":"ied-editor.js","sourceRoot":"","sources":["../../../src/zeroline/ied-editor.ts"],"names":[],"mappings":";AAAA,OAAO,EACL,GAAG,EACH,aAAa,EACb,IAAI,EACJ,UAAU,EACV,QAAQ,EACR,KAAK,GAEN,MAAM,aAAa,CAAC;AACrB,OAAO,EAAE,cAAc,EAAE,MAAM,kBAAkB,CAAC;AAClD,OAAO,EAAE,oBAAoB,EAAE,MAAM,wBAAwB,CAAC;AAG9D,OAAO,EAAE,sBAAsB,EAAE,MAAM,0BAA0B,CAAC;AAClE,OAAO,EAAE,SAAS,EAAE,MAAM,aAAa,CAAC;AAExC,4EAA4E;AAE5E,IAAa,SAAS,GAAtB,MAAa,SAAU,SAAQ,UAAU;IAKvC,IAAI,IAAI;QACN,OAAO,IAAI,CAAC,OAAO,CAAC,YAAY,CAAC,MAAM,CAAC,IAAI,EAAE,CAAC;IACjD,CAAC;IAID,wBAAwB;QACtB,MAAM,WAAW,GAAG,KAAK,CAAC,IAAI,CAC5B,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,KAAK,CAAC,EAAE,gBAAgB,CAAC,KAAK,CAAC,IAAI,EAAE,CAC3D,CAAC;QACF,MAAM,MAAM,GAAG,oBAAoB,CAAC,WAAW,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC;QAC/D,IAAI,MAAM;YAAE,IAAI,CAAC,aAAa,CAAC,cAAc,CAAC,MAAM,CAAC,CAAC,CAAC;IACzD,CAAC;IAED,uBAAuB;QACrB,MAAM,MAAM,GAAG,sBAAsB,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;QACpD,IAAI,MAAM;YAAE,IAAI,CAAC,aAAa,CAAC,cAAc,CAAC,MAAM,CAAC,CAAC,CAAC;IACzD,CAAC;IAED,MAAM;QACJ,OAAO,IAAI,CAAA;;uBAEQ,IAAI,CAAC,IAAI;;;;;;;oBAOZ,GAAG,EAAE,CAAC,IAAI,CAAC,wBAAwB,EAAE;;;;;;;oBAOrC,GAAG,EAAE,CAAC,IAAI,CAAC,uBAAuB,EAAE;mCACrB,SAAS;;;YAGhC,IAAI,CAAC,IAAI;KAChB,CAAC;IACJ,CAAC;CA2GF,CAAA;AAzGQ,gBAAM,GAAG,GAAG,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;GAwGlB,CAAC;AAvJF;IADC,QAAQ,CAAC,EAAE,IAAI,EAAE,OAAO,EAAE,CAAC;0CACV;AAGlB;IADC,QAAQ,CAAC,EAAE,IAAI,EAAE,MAAM,EAAE,CAAC;qCAG1B;AAEwB;IAAxB,KAAK,CAAC,gBAAgB,CAAC;gDAAqB;AATlC,SAAS;IADrB,aAAa,CAAC,YAAY,CAAC;GACf,SAAS,CA0JrB;SA1JY,SAAS","sourcesContent":["import {\n  css,\n  customElement,\n  html,\n  LitElement,\n  property,\n  query,\n  TemplateResult,\n} from 'lit-element';\nimport { newWizardEvent } from '../foundation.js';\nimport { createClientLnWizard } from '../wizards/clientln.js';\n\nimport { Fab } from '@material/mwc-fab';\nimport { selectGseControlWizard } from '../wizards/gsecontrol.js';\nimport { gooseIcon } from '../icons.js';\n\n/** [[`SubstationEditor`]] subeditor for a `ConductingEquipment` element. */\n@customElement('ied-editor')\nexport class IedEditor extends LitElement {\n  @property({ type: Element })\n  element!: Element;\n\n  @property({ type: String })\n  get name(): string {\n    return this.element.getAttribute('name') ?? '';\n  }\n\n  @query('#connectreport') connectReport!: Fab;\n\n  openCommunicationMapping(): void {\n    const sendingIeds = Array.from(\n      this.element.closest('SCL')?.querySelectorAll('IED') ?? []\n    );\n    const wizard = createClientLnWizard(sendingIeds, this.element);\n    if (wizard) this.dispatchEvent(newWizardEvent(wizard));\n  }\n\n  openGseControlSelection(): void {\n    const wizard = selectGseControlWizard(this.element);\n    if (wizard) this.dispatchEvent(newWizardEvent(wizard));\n  }\n\n  render(): TemplateResult {\n    return html`\n      <div id=\"container\" tabindex=\"0\">\n        <abbr title=\"${this.name}\">\n          <mwc-icon class=\"icon\">developer_board</mwc-icon></abbr\n        >\n        <mwc-fab\n          id=\"connectreport\"\n          mini\n          class=\"menu-item right\"\n          @click=\"${() => this.openCommunicationMapping()}\"\n          icon=\"add_link\"\n        ></mwc-fab>\n        <mwc-fab\n          id=\"connectreport\"\n          mini\n          class=\"menu-item left\"\n          @click=\"${() => this.openGseControlSelection()}\"\n          ><mwc-icon slot=\"icon\">${gooseIcon}</mwc-icon></mwc-fab\n        >\n      </div>\n      <h4>${this.name}</h4>\n    `;\n  }\n\n  static styles = css`\n    #container {\n      color: var(--mdc-theme-on-surface);\n      width: 50px;\n      height: 50px;\n      margin: auto;\n      position: relative;\n      transition: all 200ms linear;\n      user-select: none;\n    }\n\n    #container:focus {\n      outline: none;\n    }\n\n    .icon {\n      color: var(--mdc-theme-on-surface);\n      --mdc-icon-size: 50px;\n      transition: transform 150ms linear, box-shadow 200ms linear;\n      outline-color: var(--mdc-theme-primary);\n      outline-style: solid;\n      outline-width: 0px;\n    }\n\n    #container > .icon {\n      color: var(--mdc-theme-on-surface);\n      width: 50px;\n      height: 50px;\n      transition: transform 150ms linear, box-shadow 200ms linear;\n      outline-color: var(--mdc-theme-primary);\n      outline-style: solid;\n      outline-width: 0px;\n    }\n\n    #container:focus > .icon {\n      box-shadow: 0 8px 10px 1px rgba(0, 0, 0, 0.14),\n        0 3px 14px 2px rgba(0, 0, 0, 0.12), 0 5px 5px -3px rgba(0, 0, 0, 0.2);\n    }\n\n    #container:hover > .icon {\n      outline: 2px dashed var(--mdc-theme-primary);\n      transition: transform 200ms linear, box-shadow 250ms linear;\n    }\n\n    #container:focus-within > .icon {\n      outline: 2px solid var(--mdc-theme-primary);\n      background: var(--mdc-theme-on-primary);\n      transform: scale(0.8);\n      transition: transform 200ms linear, box-shadow 250ms linear;\n    }\n\n    .menu-item {\n      color: var(--mdc-theme-on-surface);\n      transition: transform 200ms cubic-bezier(0.4, 0, 0.2, 1),\n        opacity 200ms linear;\n      position: absolute;\n      top: 2px;\n      left: 2px;\n      pointer-events: none;\n      z-index: 1;\n      opacity: 0;\n    }\n\n    #container:focus-within > .menu-item {\n      transition: transform 250ms cubic-bezier(0.4, 0, 0.2, 1),\n        opacity 250ms linear;\n      pointer-events: auto;\n      opacity: 1;\n    }\n\n    #container:focus-within > .menu-item.up {\n      transform: translate(0px, -60px);\n    }\n\n    #container:focus-within > .menu-item.down {\n      transform: translate(0px, 60px);\n    }\n\n    #container:focus-within > .menu-item.right {\n      transform: translate(60px, 0px);\n    }\n\n    #container:focus-within > .menu-item.left {\n      transform: translate(-60px, 0px);\n    }\n\n    h4 {\n      color: var(--mdc-theme-on-surface);\n      font-family: 'Roboto', sans-serif;\n      font-weight: 300;\n      overflow: hidden;\n      white-space: nowrap;\n      text-overflow: ellipsis;\n      margin: 0px;\n      opacity: 1;\n      transition: opacity 200ms linear;\n      text-align: center;\n      direction: rtl;\n    }\n\n    :host(.moving) #container,\n    :host(.moving) h4 {\n      opacity: 0.3;\n    }\n  `;\n}\n"]}