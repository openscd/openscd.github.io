{"version":3,"file":"substation-editor.js","sourceRoot":"","sources":["../../../../src/editors/substation/substation-editor.ts"],"names":[],"mappings":"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","sourcesContent":["import {\n  css,\n  customElement,\n  html,\n  LitElement,\n  property,\n  TemplateResult,\n} from 'lit-element';\nimport { translate, get } from 'lit-translate';\n\nimport {\n  createElement,\n  EditorAction,\n  getReference,\n  getValue,\n  newActionEvent,\n  newWizardEvent,\n  Wizard,\n  WizardActor,\n  WizardInput,\n} from '../../foundation.js';\n\nimport {\n  isCreateOptions,\n  selectors,\n  styles,\n  updateNamingAction,\n  WizardOptions,\n} from './foundation.js';\n\nimport './voltage-level-editor.js';\nimport { VoltageLevelEditor } from './voltage-level-editor.js';\nimport { editlNode } from './lnodewizard.js';\nimport { guessVoltageLevel } from './guess-wizard.js';\n/** [[`Substation`]] plugin subeditor for editing `Substation` sections. */\n@customElement('substation-editor')\nexport class SubstationEditor extends LitElement {\n  /** The edited `Element`, a common property of all Substation subeditors. */\n  @property({ attribute: false })\n  element!: Element;\n\n  /** [[element | `element.name`]] */\n  @property({ type: String })\n  get name(): string {\n    return this.element.getAttribute('name') ?? '';\n  }\n  /** [[element | `element.desc`]] */\n  @property({ type: String })\n  get desc(): string | null {\n    return this.element.getAttribute('desc');\n  }\n\n  /** Opens a [[`WizardDialog`]] for editing [[`element`]]. */\n  openEditWizard(): void {\n    this.dispatchEvent(\n      newWizardEvent(SubstationEditor.wizard({ element: this.element }))\n    );\n  }\n\n  /** Opens a [[`WizardDialog`]] for adding a new `VoltageLevel`. */\n  openVoltageLevelWizard(): void {\n    this.dispatchEvent(\n      newWizardEvent(VoltageLevelEditor.wizard({ parent: this.element }))\n    );\n  }\n\n  /** Opens a [[`WizardDialog`]] for editing `LNode` connections. */\n  openLNodeWizard(): void {\n    this.dispatchEvent(newWizardEvent(editlNode(this.element)));\n  }\n\n  /** Deletes [[`element`]]. */\n  remove(): void {\n    this.dispatchEvent(\n      newActionEvent({\n        old: {\n          parent: this.element.parentElement!,\n          element: this.element,\n          reference: this.element.nextElementSibling,\n        },\n      })\n    );\n  }\n\n  renderHeader(): TemplateResult {\n    return html`\n      <h1>\n        ${this.name} ${this.desc === null ? '' : html`&mdash;`} ${this.desc}\n        <abbr title=\"${translate('add')}\">\n          <mwc-icon-button\n            icon=\"playlist_add\"\n            @click=${() => this.openVoltageLevelWizard()}\n          ></mwc-icon-button>\n        </abbr>\n        <nav>\n          <abbr title=\"${translate('lnode.tooltip')}\">\n            <mwc-icon-button\n              icon=\"account_tree\"\n              @click=${() => this.openLNodeWizard()}\n            ></mwc-icon-button>\n          </abbr>\n          <abbr title=\"${translate('edit')}\">\n            <mwc-icon-button\n              icon=\"edit\"\n              @click=${() => this.openEditWizard()}\n            ></mwc-icon-button>\n          </abbr>\n          <abbr title=\"${translate('remove')}\">\n            <mwc-icon-button\n              icon=\"delete\"\n              @click=${() => this.remove()}\n            ></mwc-icon-button>\n          </abbr>\n        </nav>\n      </h1>\n    `;\n  }\n\n  static createAction(parent: Element): WizardActor {\n    return (inputs: WizardInput[], wizard: Element): EditorAction[] => {\n      const name = getValue(inputs.find(i => i.label === 'name')!);\n      const desc = getValue(inputs.find(i => i.label === 'desc')!);\n      const guess = wizard.shadowRoot?.querySelector('mwc-checkbox')?.checked;\n      parent.ownerDocument.createElement('Substation');\n      const element = createElement(parent.ownerDocument, 'Substation', {\n        name,\n        desc,\n      });\n\n      const action = {\n        new: {\n          parent,\n          element,\n          reference: getReference(parent, 'Substation'),\n        },\n      };\n\n      if (guess)\n        wizard.dispatchEvent(\n          newWizardEvent(guessVoltageLevel(parent.ownerDocument))\n        );\n\n      return [action];\n    };\n  }\n\n  render(): TemplateResult {\n    return html`\n      <section tabindex=\"0\">\n        ${this.renderHeader()}\n        ${Array.from(this.element.querySelectorAll(selectors.VoltageLevel)).map(\n          voltageLevel =>\n            html`<voltage-level-editor\n              .element=${voltageLevel}\n            ></voltage-level-editor>`\n        )}\n      </section>\n    `;\n  }\n\n  static wizard(options: WizardOptions): Wizard {\n    const [\n      heading,\n      actionName,\n      actionIcon,\n      action,\n      name,\n      desc,\n      guessable,\n    ] = isCreateOptions(options)\n      ? [\n          get('substation.wizard.title.add'),\n          get('add'),\n          'add',\n          SubstationEditor.createAction(options.parent),\n          '',\n          '',\n          options.parent.querySelector(':root > IED'),\n        ]\n      : [\n          get('substation.wizard.title.edit'),\n          get('save'),\n          'edit',\n          updateNamingAction(options.element),\n          options.element.getAttribute('name'),\n          options.element.getAttribute('desc'),\n          false,\n        ];\n\n    return [\n      {\n        title: heading,\n        primary: {\n          icon: actionIcon,\n          label: actionName,\n          action: action,\n        },\n        content: [\n          html`<wizard-textfield\n            label=\"name\"\n            .maybeValue=${name}\n            helper=\"${translate('substation.wizard.nameHelper')}\"\n            required\n            validationMessage=\"${translate('textfield.required')}\"\n            dialogInitialFocus\n          ></wizard-textfield>`,\n          html`<wizard-textfield\n            label=\"desc\"\n            .maybeValue=${desc}\n            nullable\n            helper=\"${translate('substation.wizard.descHelper')}\"\n          ></wizard-textfield>`,\n          guessable\n            ? html`<mwc-formfield label=\"${translate('guess.wizard.primary')}\">\n                <mwc-checkbox></mwc-checkbox>\n              </mwc-formfield>`\n            : html``,\n        ],\n      },\n    ];\n  }\n\n  static styles = css`\n    ${styles}\n\n    section {\n      overflow: hidden;\n    }\n\n    :host {\n      width: 100vw;\n    }\n  `;\n}\n"]}