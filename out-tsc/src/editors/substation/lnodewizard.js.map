{"version":3,"file":"lnodewizard.js","sourceRoot":"","sources":["../../../../src/editors/substation/lnodewizard.ts"],"names":[],"mappings":"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","sourcesContent":["import { html, render, TemplateResult } from 'lit-html';\nimport { get, translate } from 'lit-translate';\n\nimport {\n  Wizard,\n  WizardAction,\n  WizardInput,\n  CloseableElement,\n  EditorAction,\n} from '../../foundation.js';\n\nimport '@material/mwc-list/mwc-check-list-item';\nimport '@material/mwc-list/mwc-list-item';\nimport '@material/mwc-textfield';\nimport { List } from '@material/mwc-list';\nimport { ListItemBase } from '@material/mwc-list/mwc-list-item-base';\nimport { MultiSelectedEvent } from '@material/mwc-list/mwc-list-foundation';\nimport { TextField } from '@material/mwc-textfield';\n\ninterface ldValue {\n  iedName: string;\n  ldInst: string;\n}\n\ninterface lnValue extends ldValue {\n  prefix: string | null;\n  lnClass: string;\n  inst: string;\n}\n\nfunction existLNode(value: lnValue, parent: Element): boolean {\n  return parent.querySelector(\n    `${parent.tagName} > LNode[iedName=\"${value.iedName}\"][ldInst=\"${\n      value.ldInst\n    }\"]${value.prefix ? `[prefix=\"${value.prefix}\"]` : ``}[lnClass=\"${\n      value.lnClass\n    }\"]${value.inst === '' ? `` : `[lnInst=\"${value.inst}\"]`}`\n  )\n    ? true\n    : false;\n}\n\nfunction creteAction(value: lnValue, parent: Element): EditorAction {\n  return {\n    new: {\n      parent,\n      element: new DOMParser().parseFromString(\n        `<LNode iedName=\"${value.iedName}\" ldInst=\"${value.ldInst}\" ${\n          value.prefix ? `prefix=\"${value.prefix}\"` : ''\n        } lnClass=\"${value.lnClass}\" lnInst=\"${value.inst}\"></LNode>`,\n        'application/xml'\n      ).documentElement,\n      reference: null,\n    },\n  };\n}\n\nfunction deleteAction(value: lnValue, parent: Element): EditorAction {\n  const element = parent.querySelector(\n    `${parent.tagName} > LNode[iedName=\"${value.iedName}\"][ldInst=\"${\n      value.ldInst\n    }\"]${value.prefix ? `[prefix=\"${value.prefix}\"]` : ``}[lnClass=\"${\n      value.lnClass\n    }\"]${value.inst === '' ? `` : `[lnInst=\"${value.inst}\"]`}`\n  )!;\n  return {\n    old: {\n      parent: parent,\n      element: element,\n      reference: element.nextElementSibling ?? null,\n    },\n  };\n}\n\nfunction lNodeActions(parent: Element): WizardAction {\n  return (inputs: WizardInput[], wizard: CloseableElement): EditorAction[] => {\n    const actions: EditorAction[] = [];\n    (<ListItemBase[]>(\n      (<List>wizard.shadowRoot?.querySelector('#lnList')).items\n    )).forEach(item => {\n      const value: lnValue = JSON.parse(item.value);\n\n      if (item.selected && !existLNode(value, parent)) {\n        actions.push(creteAction(value, parent));\n      }\n\n      if (!item.selected && existLNode(value, parent)) {\n        actions.push(deleteAction(value, parent));\n      }\n    });\n    wizard.close();\n    return actions;\n  };\n}\n\nfunction onIEDSelect(evt: MultiSelectedEvent, element: Element): void {\n  const doc = element.ownerDocument;\n  const ldList =\n    (<Element>(\n      evt.target\n    )).parentElement?.parentElement?.nextElementSibling?.querySelector(\n      '#ldList'\n    ) ?? null;\n\n  if (ldList === null) return;\n\n  const itemGroups = (<ListItemBase[]>(<List>evt.target).selected)\n    .map(item => doc.querySelector(`IED[name=\"${item.value}\"]`)!)\n    .map(ied => {\n      const values = Array.from(ied.querySelectorAll('LDevice')).map(\n        lDevice => {\n          return {\n            iedName: ied.getAttribute('name'),\n            ldInst: lDevice.getAttribute('inst')!,\n          };\n        }\n      );\n      const deviceItems = values.map(\n        value =>\n          html`<mwc-check-list-item\n            value=\"${JSON.stringify(value)}\"\n            twoline\n            ?selected=\"${element.querySelector(\n              `${element.tagName} > LNode[ldInst=\"${value.ldInst}\"]`\n            )}\"\n            ><span>${value.ldInst}</span\n            ><span slot=\"secondary\">${value.iedName}</span></mwc-check-list-item\n          >`\n      );\n      return html`${deviceItems}\n        <li divider role=\"separator\"></li>`;\n    });\n\n  render(html`${itemGroups}`, ldList);\n}\n\nfunction onLdSelect(evt: MultiSelectedEvent, element: Element): void {\n  const doc = element.ownerDocument;\n  const lnList =\n    (<Element>(\n      evt.target\n    )).parentElement?.parentElement?.nextElementSibling?.querySelector(\n      '#lnList'\n    ) ?? null;\n  if (lnList === null) return;\n\n  const itemGroups = (<ListItemBase[]>(<List>evt.target).selected)\n    .map((item): ldValue => JSON.parse(item.value))\n    .map(ldValue => {\n      const values = Array.from(\n        doc.querySelectorAll(\n          `IED[name=\"${ldValue.iedName}\"] LDevice[inst=\"${ldValue.ldInst}\"] LN\n          ,IED[name=\"${ldValue.iedName}\"] LDevice[inst=\"${ldValue.ldInst}\"] LN0`\n        )\n      ).map(ln => {\n        return {\n          prefix: ln.getAttribute('prefix'),\n          lnClass: ln.getAttribute('lnClass') ?? '',\n          inst: ln.getAttribute('inst') ?? '',\n          ...ldValue,\n        };\n      });\n      const nodeItems = values.map(value => {\n        return html`<mwc-check-list-item\n          ?selected=${existLNode(value, element)}\n          value=\"${JSON.stringify(value)}\"\n          twoline\n          ><span>${value.prefix}${value.lnClass}${value.inst}</span\n          ><span slot=\"secondary\"\n            >${value.iedName} | ${value.ldInst}</span\n          ></mwc-check-list-item\n        >`;\n      });\n      return html`${nodeItems}\n        <li divider role=\"separator\"></li>`;\n    });\n\n  render(html`${itemGroups}`, lnList);\n}\n\nfunction filter(item: ListItemBase, searchfield: TextField): boolean {\n  return item.value.toUpperCase().includes(searchfield.value.toUpperCase());\n}\n\nfunction onFilter(evt: InputEvent, selector: string): void {\n  (<List>(\n    (<TextField>evt.target).parentElement?.querySelector(selector)\n  )).items.forEach(item => {\n    filter(item, <TextField>evt.target)\n      ? item.removeAttribute('style')\n      : item.setAttribute('style', 'display:none;');\n  });\n}\n\nfunction renderIEDPage(element: Element): TemplateResult {\n  const doc = element.ownerDocument;\n  return html`<wizard-textfield\n      label=\"${translate('filter')}\"\n      iconTrailing=\"search\"\n      @input=\"${(evt: InputEvent) => onFilter(evt, '#iedList')}\"\n    ></wizard-textfield>\n    <mwc-list\n      activatable\n      multi\n      id=\"iedList\"\n      @selected=\"${(evt: MultiSelectedEvent) => onIEDSelect(evt, element)}\"\n      >${Array.from(doc.querySelectorAll('IED'))\n        .map(ied => ied.getAttribute('name'))\n        .map(\n          iedName =>\n            html`<mwc-check-list-item\n              .value=${iedName ?? ''}\n              ?selected=\"${element.querySelector(\n                `${element.tagName} > LNode[iedName=\"${iedName}\"]`\n              )}\"\n              >${iedName}</mwc-check-list-item\n            >`\n        )}</mwc-list\n    >`;\n}\n\nfunction renderLdPage(element: Element): TemplateResult {\n  return html`<wizard-textfield\n      label=\"${translate('filter')}\"\n      iconTrailing=\"search\"\n      @input=\"${(evt: InputEvent) => onFilter(evt, '#ldList')}\"\n    ></wizard-textfield>\n    <mwc-list\n      activatable\n      multi\n      id=\"ldList\"\n      @selected=\"${(evt: MultiSelectedEvent) => onLdSelect(evt, element)}\"\n    ></mwc-list>`;\n}\n\nfunction renderLnPage(): TemplateResult {\n  return html`<wizard-textfield\n      label=\"${translate('filter')}\"\n      iconTrailing=\"search\"\n      @input=\"${(evt: InputEvent) => onFilter(evt, '#lnList')}\"\n    ></wizard-textfield>\n    <mwc-list activatable multi id=\"lnList\"></mwc-list>`;\n}\n\nexport function editlNode(element: Element): Wizard {\n  return [\n    {\n      title: get('lnode.wizard.title.selectIEDs'),\n      content: [renderIEDPage(element)],\n    },\n    {\n      title: get('lnode.wizard.title.selectLDs'),\n      content: [renderLdPage(element)],\n    },\n    {\n      title: get('lnode.wizard.title.selectLNs'),\n      primary: {\n        icon: 'add',\n        label: get('add'),\n        action: lNodeActions(element),\n      },\n      content: [renderLnPage()],\n    },\n  ];\n}\n"]}