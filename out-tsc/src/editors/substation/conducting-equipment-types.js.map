{"version":3,"file":"conducting-equipment-types.js","sourceRoot":"","sources":["../../../../src/editors/substation/conducting-equipment-types.ts"],"names":[],"mappings":"AACA,OAAO,EAAE,GAAG,EAAE,MAAM,eAAe,CAAC;AAEpC,OAAO,EACL,gBAAgB,EAChB,kBAAkB,EAClB,sBAAsB,EACtB,eAAe,EACf,8BAA8B,EAC9B,sBAAsB,GACvB,MAAM,gBAAgB,CAAC;AAExB,SAAS,OAAO,CAAC,MAAe;IAC9B,OAAO,MAAM,CAAC,YAAY,CAAC,MAAM,CAAC,KAAK,KAAK;QAC1C,MAAM,CAAC,aAAa,CAAC,UAAU,CAAC,EAAE,YAAY,CAAC,WAAW,CAAC,KAAK,UAAU;QAC1E,CAAC,CAAC,KAAK;QACP,CAAC,CAAC,MAAM,CAAC,YAAY,CAAC,MAAM,CAAC,IAAI,EAAE,CAAC;AACxC,CAAC;AAED,MAAM,UAAU,QAAQ,CAAC,MAAe;IACtC,OAAO,SAAS,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,IAAI,8BAA8B,CAAC;AACtE,CAAC;AAED,MAAM,UAAU,QAAQ,CAAC,MAAe;IACtC,OAAO,KAAK,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,IAAI,GAAG,CAAC,iCAAiC,CAAC,CAAC;AAC1E,CAAC;AAED,MAAM,SAAS,GAA4C;IACzD,GAAG,EAAE,kBAAkB;IACvB,GAAG,EAAE,gBAAgB;IACrB,GAAG,EAAE,sBAAsB;IAC3B,GAAG,EAAE,sBAAsB;IAC3B,GAAG,EAAE,eAAe;CACrB,CAAC;AAEF,MAAM,CAAC,MAAM,KAAK,GAAoC;IACpD,WAAW;IACX,GAAG,EAAE,iBAAiB;IACtB,GAAG,EAAE,cAAc;IACnB,SAAS;IACT,GAAG,EAAE,cAAc;IACnB,GAAG,EAAE,qBAAqB;IAC1B,GAAG,EAAE,qBAAqB;IAC1B,GAAG,EAAE,mBAAmB;IACxB,GAAG,EAAE,SAAS;IACd,GAAG,EAAE,SAAS;IACd,GAAG,EAAE,gBAAgB;IACrB,GAAG,EAAE,WAAW;IAChB,GAAG,EAAE,yBAAyB;IAC9B,GAAG,EAAE,KAAK;IACV,GAAG,EAAE,oBAAoB;IACzB,GAAG,EAAE,WAAW;IAChB,GAAG,EAAE,gBAAgB;IACrB,GAAG,EAAE,OAAO;IACZ,GAAG,EAAE,kBAAkB;IACvB,GAAG,EAAE,SAAS;IACd,GAAG,EAAE,aAAa;IAClB,GAAG,EAAE,aAAa;IAClB,GAAG,EAAE,MAAM;IACX,GAAG,EAAE,qBAAqB;IAC1B,GAAG,EAAE,6BAA6B;IAClC,GAAG,EAAE,oCAAoC;IACzC,GAAG,EAAE,gBAAgB;IACrB,GAAG,EAAE,qBAAqB;IAC1B,GAAG,EAAE,0CAA0C;IAC/C,GAAG,EAAE,yCAAyC;CAC/C,CAAC","sourcesContent":["import { TemplateResult } from 'lit-html';\nimport { get } from 'lit-translate';\n\nimport {\n  disconnectorIcon,\n  circuitBreakerIcon,\n  currentTransformerIcon,\n  earthSwitchIcon,\n  generalConductingEquipmentIcon,\n  voltageTransformerIcon,\n} from '../../icons.js';\n\nfunction typeStr(condEq: Element): string {\n  return condEq.getAttribute('type') === 'DIS' &&\n    condEq.querySelector('Terminal')?.getAttribute('cNodeName') === 'grounded'\n    ? 'ERS'\n    : condEq.getAttribute('type') ?? '';\n}\n\nexport function typeIcon(condEq: Element): TemplateResult {\n  return typeIcons[typeStr(condEq)] ?? generalConductingEquipmentIcon;\n}\n\nexport function typeName(condEq: Element): string {\n  return types[typeStr(condEq)] ?? get('conductingequipment.unknownType');\n}\n\nconst typeIcons: Partial<Record<string, TemplateResult>> = {\n  CBR: circuitBreakerIcon,\n  DIS: disconnectorIcon,\n  CTR: currentTransformerIcon,\n  VTR: voltageTransformerIcon,\n  ERS: earthSwitchIcon,\n};\n\nexport const types: Partial<Record<string, string>> = {\n  // standard\n  CBR: 'Circuit Breaker',\n  DIS: 'Disconnector',\n  // custom\n  ERS: 'Earth Switch',\n  CTR: 'Current Transformer',\n  VTR: 'Voltage Transformer',\n  AXN: 'Auxiliary Network',\n  BAT: 'Battery',\n  BSH: 'Bushing',\n  CAP: 'Capacitor Bank',\n  CON: 'Converter',\n  EFN: 'Earth Fault Neutralizer',\n  FAN: 'Fan',\n  GIL: 'Gas Insulated Line',\n  GEN: 'Genarator',\n  IFL: 'Infeeding Line',\n  MOT: 'Motor',\n  RES: 'Neutral Resistor',\n  REA: 'Reactor',\n  PSH: 'Power Shunt',\n  CAB: 'Power Cable',\n  PMP: 'Pump',\n  LIN: 'Power Overhead Line',\n  RRC: 'Rotating Reactive Component',\n  SCR: 'Semiconductor Controlled Rectifier',\n  SAR: 'Surge Arrester',\n  SMC: 'Synchronous Machine',\n  TCF: 'Thyristor Controlled Frequency Converter',\n  TCR: 'Thyristor Controlled Reactive Component',\n};\n"]}