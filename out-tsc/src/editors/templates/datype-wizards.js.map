{"version":3,"file":"datype-wizards.js","sourceRoot":"","sources":["../../../../src/editors/templates/datype-wizards.ts"],"names":[],"mappings":"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","sourcesContent":["import { html } from 'lit-element';\nimport { get, translate } from 'lit-translate';\n\nimport {\n  Create,\n  EditorAction,\n  getReference,\n  getValue,\n  identity,\n  newActionEvent,\n  newWizardEvent,\n  patterns,\n  SCLTag,\n  selector,\n  Wizard,\n  WizardActor,\n  WizardInput,\n} from '../../foundation.js';\nimport {\n  addReferencedDataTypes,\n  allDataTypeSelector,\n  unifyCreateActionArray,\n  updateIDNamingAction,\n} from './foundation.js';\n\nimport { List } from '@material/mwc-list';\nimport { ListItem } from '@material/mwc-list/mwc-list-item';\nimport { Select } from '@material/mwc-select';\nimport { SingleSelectedEvent } from '@material/mwc-list/mwc-list-foundation';\nimport { createBDAWizard, editBDAWizard } from '../../wizards/bda.js';\n\nexport function editDaTypeWizard(\n  dATypeIdentity: string,\n  doc: XMLDocument\n): Wizard | undefined {\n  const datype = doc.querySelector(selector('DAType', dATypeIdentity));\n  if (!datype) return undefined;\n\n  const id = datype.getAttribute('id');\n  const desc = datype.getAttribute('desc');\n\n  return [\n    {\n      title: get('datype.wizard.title.edit'),\n      element: datype ?? undefined,\n      primary: {\n        icon: '',\n        label: get('save'),\n        action: updateIDNamingAction(datype),\n      },\n      content: [\n        html`<mwc-button\n          icon=\"delete\"\n          trailingIcon\n          label=\"${translate('remove')}\"\n          @click=${(e: MouseEvent) => {\n            e.target!.dispatchEvent(newWizardEvent());\n            e.target!.dispatchEvent(\n              newActionEvent({\n                old: {\n                  parent: datype.parentElement!,\n                  element: datype,\n                  reference: datype.nextSibling,\n                },\n              })\n            );\n          }}\n          fullwidth\n        ></mwc-button> `,\n        html`<wizard-textfield\n          label=\"id\"\n          helper=\"${translate('scl.id')}\"\n          .maybeValue=${id}\n          required\n          maxlength=\"127\"\n          minlength=\"1\"\n          pattern=\"${patterns.nmToken}\"\n          dialogInitialFocus\n        ></wizard-textfield>`,\n        html`<wizard-textfield\n          label=\"desc\"\n          helper=\"${translate('scl.desc')}\"\n          .maybeValue=${desc}\n          nullable\n          pattern=\"${patterns.normalizedString}\"\n        ></wizard-textfield>`,\n        html`<mwc-button\n            slot=\"graphic\"\n            icon=\"playlist_add\"\n            trailingIcon\n            label=\"${translate('scl.DA')}\"\n            @click=${(e: Event) => {\n              if (datype)\n                e.target!.dispatchEvent(\n                  newWizardEvent(createBDAWizard(datype))\n                );\n              e.target!.dispatchEvent(newWizardEvent());\n            }}\n          ></mwc-button>\n          <mwc-list\n            style=\"margin-top: 0px;\"\n            @selected=${(e: SingleSelectedEvent) => {\n              const bdaIdentity = (<ListItem>(<List>e.target).selected).value;\n              const bda = doc.querySelector(selector('BDA', bdaIdentity));\n\n              if (bda)\n                e.target!.dispatchEvent(newWizardEvent(editBDAWizard(bda)));\n              e.target!.dispatchEvent(newWizardEvent());\n            }}\n          >\n            ${Array.from(datype.querySelectorAll('BDA')).map(\n              bda =>\n                html`<mwc-list-item\n                  twoline\n                  tabindex=\"0\"\n                  value=\"${identity(bda)}\"\n                  ><span>${bda.getAttribute('name')}</span\n                  ><span slot=\"secondary\"\n                    >${bda.getAttribute('bType') === 'Enum' ||\n                    bda.getAttribute('bType') === 'Struct'\n                      ? '#' + bda.getAttribute('type')\n                      : bda.getAttribute('bType')}</span\n                  ></mwc-list-item\n                >`\n            )}\n          </mwc-list> `,\n      ],\n    },\n  ];\n}\n\nfunction addPredefinedDAType(\n  parent: Element,\n  templates: XMLDocument\n): WizardActor {\n  return (inputs: WizardInput[]): EditorAction[] => {\n    const id = getValue(inputs.find(i => i.label === 'id')!);\n\n    if (!id) return [];\n\n    const existId = Array.from(\n      templates.querySelectorAll(allDataTypeSelector)\n    ).some(type => type.getAttribute('id') === id);\n\n    if (existId) return [];\n\n    const desc = getValue(inputs.find(i => i.label === 'desc')!);\n    const values = <Select>inputs.find(i => i.label === 'values');\n    const selectedElement = values.selected\n      ? templates.querySelector(`DAType[id=\"${values.selected.value}\"]`)\n      : null;\n    const element = values.selected\n      ? <Element>selectedElement!.cloneNode(true)\n      : parent.ownerDocument.createElement('DAType');\n\n    element.setAttribute('id', id);\n    if (desc) element.setAttribute('desc', desc);\n\n    const actions: Create[] = [];\n\n    if (selectedElement)\n      addReferencedDataTypes(selectedElement, parent).forEach(action =>\n        actions.push(action)\n      );\n\n    actions.push({\n      new: {\n        parent,\n        element,\n        reference: getReference(parent, <SCLTag>element.tagName),\n      },\n    });\n\n    return unifyCreateActionArray(actions);\n  };\n}\n\nexport function createDATypeWizard(\n  parent: Element,\n  templates: Document\n): Wizard {\n  return [\n    {\n      title: get('datype.wizard.title.add'),\n      primary: {\n        icon: 'add',\n        label: get('add'),\n        action: addPredefinedDAType(parent, templates),\n      },\n      content: [\n        html`<mwc-select\n          fixedMenuPosition\n          outlined\n          icon=\"playlist_add_check\"\n          label=\"values\"\n          helper=\"Default enumerations\"\n        >\n          ${Array.from(templates.querySelectorAll('DAType')).map(\n            datype =>\n              html`<mwc-list-item\n                graphic=\"icon\"\n                hasMeta\n                value=\"${datype.getAttribute('id') ?? ''}\"\n                ><span\n                  >${datype.getAttribute('id')?.replace('OpenSCD_', '')}</span\n                >\n                <span slot=\"meta\"\n                  >${datype.querySelectorAll('BDA').length}</span\n                >\n              </mwc-list-item>`\n          )}\n        </mwc-select>`,\n        html`<wizard-textfield\n          label=\"id\"\n          helper=\"${translate('scl.id')}\"\n          .maybeValue=${''}\n          required\n          maxlength=\"255\"\n          minlength=\"1\"\n          pattern=\"${patterns.nmToken}\"\n          dialogInitialFocus\n        ></wizard-textfield>`,\n        html`<wizard-textfield\n          label=\"desc\"\n          helper=\"${translate('scl.desc')}\"\n          .maybeValue=${null}\n          nullable\n          pattern=\"${patterns.normalizedString}\"\n        ></wizard-textfield>`,\n      ],\n    },\n  ];\n}\n"]}