{"version":3,"file":"foundation.js","sourceRoot":"","sources":["../../../../src/editors/templates/foundation.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,GAAG,EAAE,IAAI,EAAkB,MAAM,aAAa,CAAC;AACxD,OAAO,EAAE,SAAS,EAAE,MAAM,gCAAgC,CAAC;AAE3D,OAAO,EACL,YAAY,EAGZ,YAAY,EACZ,QAAQ,EACR,QAAQ,GAIT,MAAM,qBAAqB,CAAC;AAW7B,MAAM,CAAC,MAAM,mBAAmB,GAAG,qCAAqC,CAAC;AAEzE,MAAM,UAAU,eAAe,CAC7B,OAAsB;IAEtB,OAAuB,OAAQ,CAAC,MAAM,KAAK,SAAS,CAAC;AACvD,CAAC;AAED,MAAM,UAAU,oBAAoB,CAAC,OAAgB;IACnD,OAAO,CAAC,MAAqB,EAAkB,EAAE;QAC/C,MAAM,EAAE,GAAG,QAAQ,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,KAAK,KAAK,IAAI,CAAE,CAAE,CAAC;QAC1D,MAAM,IAAI,GAAG,QAAQ,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,KAAK,KAAK,MAAM,CAAE,CAAC,CAAC;QAE7D,IACE,EAAE,KAAK,OAAO,CAAC,YAAY,CAAC,IAAI,CAAC;YACjC,IAAI,KAAK,OAAO,CAAC,YAAY,CAAC,MAAM,CAAC;YAErC,OAAO,EAAE,CAAC;QAEZ,MAAM,UAAU,GAAG,YAAY,CAAC,OAAO,EAAE,EAAE,EAAE,EAAE,IAAI,EAAE,CAAC,CAAC;QAEvD,OAAO,CAAC,EAAE,GAAG,EAAE,EAAE,OAAO,EAAE,EAAE,GAAG,EAAE,EAAE,OAAO,EAAE,UAAU,EAAE,EAAE,CAAC,CAAC;IAC9D,CAAC,CAAC;AACJ,CAAC;AAED,SAAS,oBAAoB,CAAC,OAAiB,EAAE,SAAiB;IAChE,OAAO,CAAC,OAAO,CAAC,IAAI,CAClB,MAAM,CAAC,EAAE,CACP,MAAM,CAAC,GAAG,CAAC,MAAM,KAAK,SAAS,CAAC,GAAG,CAAC,MAAM;QAC1C,MAAM,CAAC,GAAG,CAAC,OAAO,CAAC,YAAY,CAAC,IAAI,CAAC;YACnC,SAAS,CAAC,GAAG,CAAC,OAAO,CAAC,YAAY,CAAC,IAAI,CAAC,CAC7C,CAAC;AACJ,CAAC;AAED,MAAM,UAAU,sBAAsB,CAAC,OAAiB;IACtD,MAAM,aAAa,GAAa,EAAE,CAAC;IACnC,KAAK,MAAM,MAAM,IAAI,OAAO;QAC1B,IAAI,oBAAoB,CAAC,aAAa,EAAE,MAAM,CAAC;YAAE,aAAa,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;IAC9E,OAAO,aAAa,CAAC;AACvB,CAAC;AAED,MAAM,UAAU,sBAAsB,CACpC,OAAgB,EAChB,MAAe;IAEf,MAAM,SAAS,GAAG,OAAO,CAAC,OAAO,CAAC,mBAAmB,CAAE,CAAC;IACxD,MAAM,GAAG,GAAG,KAAK,CAAC,IAAI,CAAC,MAAM,CAAC,gBAAgB,CAAC,mBAAmB,CAAC,CAAC;SACjE,MAAM,CAAC,QAAQ,CAAC;SAChB,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC,CAAC;IAExC,MAAM,KAAK,GAAG,IAAI,GAAG,CACT,KAAK,CAAC,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC;SACnC,GAAG,CAAC,KAAK,CAAC,EAAE,CAAC,KAAK,CAAC,YAAY,CAAC,MAAM,CAAC,CAAC;SACxC,MAAM,CAAC,IAAI,CAAC,EAAE,CAAC,IAAI,KAAK,IAAI,CAAC;SAC7B,MAAM,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,GAAG,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,CACvC,CAAC;IAEF,MAAM,SAAS,GAAc,EAAE,CAAC;IAChC,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,EAAE;QACnB,MAAM,QAAQ,GAAG,SAAS,CAAC,aAAa,CACtC,iBAAiB,IAAI,iBAAiB,IAAI,iBAAiB,IAAI,mBAAmB,IAAI,IAAI,CAC1F,CAAC;QAEH,IAAI,QAAQ,KAAK,IAAI,IAAI,QAAQ,CAAC,QAAQ,CAAC;YAAE,SAAS,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;IACxE,CAAC,CAAC,CAAC;IAEH,MAAM,OAAO,GAAa,EAAE,CAAC;IAC7B,SAAS;SACN,OAAO,CAAC,QAAQ,CAAC,EAAE,CAAC,sBAAsB,CAAC,QAAQ,EAAE,MAAM,CAAC,CAAC;SAC7D,OAAO,CAAC,MAAM,CAAC,EAAE,CAAC,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC;IAE3C,SAAS,CAAC,OAAO,CAAC,QAAQ,CAAC,EAAE;QAC3B,OAAO,CAAC,IAAI,CAAC;YACX,GAAG,EAAE;gBACH,MAAM;gBACN,OAAO,EAAW,QAAQ,CAAC,SAAS,CAAC,IAAI,CAAC;gBAC1C,SAAS,EAAE,YAAY,CAAC,MAAM,EAAU,QAAQ,CAAC,OAAO,CAAC;aAC1D;SACF,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;IAEH,OAAO,OAAO,CAAC;AACjB,CAAC;AAED,MAAM,UAAU,wBAAwB,CACtC,IAAuB,EACvB,QAAuB;IAEvB,OAAO,IAAI,CAAC,GAAG,CACb,IAAI,CAAC,EAAE,CAAC,IAAI,CAAA;cACF,SAAS,CAAC,IAAI,KAAK,IAAI,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,IAAI,CAAC;kBACvC,IAAI,KAAK,QAAQ;SAC1B,IAAI;MACP,CACH,CAAC;AACJ,CAAC;AAED,8DAA8D;AAC9D,MAAM,CAAC,MAAM,MAAM,GAAG,GAAG,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;CA6DxB,CAAC","sourcesContent":["import { css, html, TemplateResult } from 'lit-element';\nimport { ifDefined } from 'lit-html/directives/if-defined';\n\nimport {\n  cloneElement,\n  Create,\n  EditorAction,\n  getReference,\n  getValue,\n  isPublic,\n  SCLTag,\n  WizardActor,\n  WizardInput,\n} from '../../foundation.js';\n\nexport interface UpdateOptions {\n  identity: string | null;\n  doc: XMLDocument;\n}\nexport interface CreateOptions {\n  parent: Element;\n}\nexport type WizardOptions = UpdateOptions | CreateOptions;\n\nexport const allDataTypeSelector = 'LNodeType, DOType, DAType, EnumType';\n\nexport function isCreateOptions(\n  options: WizardOptions\n): options is CreateOptions {\n  return (<CreateOptions>options).parent !== undefined;\n}\n\nexport function updateIDNamingAction(element: Element): WizardActor {\n  return (inputs: WizardInput[]): EditorAction[] => {\n    const id = getValue(inputs.find(i => i.label === 'id')!)!;\n    const desc = getValue(inputs.find(i => i.label === 'desc')!);\n\n    if (\n      id === element.getAttribute('id') &&\n      desc === element.getAttribute('desc')\n    )\n      return [];\n\n    const newElement = cloneElement(element, { id, desc });\n\n    return [{ old: { element }, new: { element: newElement } }];\n  };\n}\n\nfunction containsCreateAction(actions: Create[], newAction: Create): boolean {\n  return !actions.some(\n    action =>\n      action.new.parent === newAction.new.parent &&\n      action.new.element.getAttribute('id') ===\n        newAction.new.element.getAttribute('id')\n  );\n}\n\nexport function unifyCreateActionArray(actions: Create[]): Create[] {\n  const uniqueActions: Create[] = [];\n  for (const action of actions)\n    if (containsCreateAction(uniqueActions, action)) uniqueActions.push(action);\n  return uniqueActions;\n}\n\nexport function addReferencedDataTypes(\n  element: Element,\n  parent: Element\n): Create[] {\n  const templates = element.closest('DataTypeTemplates')!;\n  const ids = Array.from(parent.querySelectorAll(allDataTypeSelector))\n    .filter(isPublic)\n    .map(type => type.getAttribute('id'));\n\n  const types = new Set(\n    <string[]>Array.from(element.children)\n      .map(child => child.getAttribute('type'))\n      .filter(type => type !== null)\n      .filter(type => !ids.includes(type))\n  );\n\n  const adjacents: Element[] = [];\n  types.forEach(type => {\n    const adjacent = templates.querySelector(\n      `LNodeType[id=\"${type}\"],DOType[id=\"${type}\"],DAType[id=\"${type}\"],EnumType[id=\"${type}\"]`\n    )!;\n\n    if (adjacent !== null && isPublic(adjacent)) adjacents.push(adjacent);\n  });\n\n  const actions: Create[] = [];\n  adjacents\n    .flatMap(adjacent => addReferencedDataTypes(adjacent, parent))\n    .forEach(action => actions.push(action));\n\n  adjacents.forEach(adjacent => {\n    actions.push({\n      new: {\n        parent,\n        element: <Element>adjacent.cloneNode(true),\n        reference: getReference(parent, <SCLTag>adjacent.tagName),\n      },\n    });\n  });\n\n  return actions;\n}\n\nexport function buildListFromStringArray(\n  list: (string | null)[],\n  selected: string | null\n): TemplateResult[] {\n  return list.map(\n    item => html`<mwc-list-item\n      value=${ifDefined(item === null ? undefined : item)}\n      ?selected=${item === selected}\n      >${item}</mwc-list-item\n    >`\n  );\n}\n\n/** Common `CSS` styles used by DataTypeTemplate subeditors */\nexport const styles = css`\n  :host(.moving) section {\n    opacity: 0.3;\n  }\n\n  section {\n    background-color: var(--mdc-theme-surface);\n    transition: all 200ms linear;\n    outline-color: var(--mdc-theme-primary);\n    outline-style: solid;\n    outline-width: 0px;\n    opacity: 1;\n  }\n\n  section:focus {\n    box-shadow: 0 8px 10px 1px rgba(0, 0, 0, 0.14),\n      0 3px 14px 2px rgba(0, 0, 0, 0.12), 0 5px 5px -3px rgba(0, 0, 0, 0.2);\n  }\n\n  section:focus-within {\n    outline-width: 2px;\n    transition: all 250ms linear;\n  }\n\n  h1,\n  h2,\n  h3 {\n    color: var(--mdc-theme-on-surface);\n    font-family: 'Roboto', sans-serif;\n    font-weight: 300;\n    overflow: hidden;\n    white-space: nowrap;\n    text-overflow: ellipsis;\n    margin: 0px;\n    line-height: 48px;\n    padding-left: 0.3em;\n    transition: background-color 150ms linear;\n  }\n\n  section:focus-within > h1,\n  section:focus-within > h2,\n  section:focus-within > h3 {\n    color: var(--mdc-theme-surface);\n    background-color: var(--mdc-theme-primary);\n    transition: background-color 200ms linear;\n  }\n\n  h1 > nav,\n  h2 > nav,\n  h3 > nav,\n  h1 > abbr > mwc-icon-button,\n  h2 > abbr > mwc-icon-button,\n  h3 > abbr > mwc-icon-button {\n    float: right;\n  }\n\n  abbr[title] {\n    border-bottom: none !important;\n    cursor: inherit !important;\n    text-decoration: none !important;\n  }\n`;\n"]}