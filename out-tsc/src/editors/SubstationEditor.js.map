{"version":3,"file":"SubstationEditor.js","sourceRoot":"","sources":["../../../src/editors/SubstationEditor.ts"],"names":[],"mappings":"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","sourcesContent":["import { LitElement, html, TemplateResult, property, css } from 'lit-element';\nimport { translate, get } from 'lit-translate';\n\nimport '@material/mwc-button';\nimport '@material/mwc-fab';\nimport '@material/mwc-icon-button';\nimport '@material/mwc-list/mwc-list-item';\n\nimport {\n  CloseableElement,\n  EditorAction,\n  newActionEvent,\n  newWizardEvent,\n  WizardInput,\n  getValue,\n} from '../foundation.js';\n\nimport './substation/voltage-level-editor.js';\nimport { VoltageLevelEditor } from './substation/voltage-level-editor.js';\n\nexport default class SubstationEditor extends LitElement {\n  @property()\n  doc!: XMLDocument;\n  @property()\n  get element(): Element | null {\n    return this.doc?.querySelector('Substation') ?? null;\n  }\n  @property()\n  get parent(): Element {\n    return this.doc.documentElement; // <SCL>\n  }\n\n  @property({ type: String })\n  get name(): string {\n    return this.element?.getAttribute('name') ?? '';\n  }\n  @property({ type: String })\n  get desc(): string | null {\n    return this.element?.getAttribute('desc') ?? null;\n  }\n\n  newUpdateAction(name: string, desc: string | null): EditorAction {\n    if (!this.element) throw new Error('Cannot edit a missing Substation');\n    const newElement = <Element>this.element.cloneNode(false);\n    newElement.setAttribute('name', name);\n    if (desc === null) newElement.removeAttribute('desc');\n    else newElement.setAttribute('desc', desc);\n    return {\n      old: { element: this.element },\n      new: { element: newElement },\n    };\n  }\n\n  newCreateAction(name: string, desc: string | null): EditorAction {\n    if (this.element) throw new Error('Will not create a second Substation');\n    return {\n      new: {\n        parent: this.parent,\n        element: new DOMParser().parseFromString(\n          `<Substation name=\"${name}\"${\n            desc === null ? '' : ` desc=\"${desc}\"`\n          }></Substation>`,\n          'application/xml'\n        ).documentElement,\n        reference: null,\n      },\n    };\n  }\n\n  substationEditAction(\n    inputs: WizardInput[],\n    dialog: CloseableElement\n  ): EditorAction[] {\n    const name = inputs.find(i => i.label === 'name')!.value;\n    const desc = getValue(inputs.find(i => i.label === 'desc')!);\n    if (name === this.name && desc === this.desc) return [];\n    const action = this.element\n      ? this.newUpdateAction(name, desc)\n      : this.newCreateAction(name, desc);\n    dialog.close();\n    return [action];\n  }\n\n  openVoltageLevelWizard(): void {\n    if (!this.element) return;\n    const event = newWizardEvent(\n      VoltageLevelEditor.wizard({ parent: this.element })\n    );\n    this.dispatchEvent(event);\n  }\n\n  openSubstationWizard(): void {\n    const [heading, actionName, actionIcon] = this.element\n      ? [get('substation.wizard.title.edit'), get('edit'), 'edit']\n      : [get('substation.wizard.title.add'), get('add'), 'add'];\n    const event = newWizardEvent([\n      {\n        title: heading,\n        primary: {\n          icon: actionIcon,\n          action: this.substationEditAction,\n          label: actionName,\n        },\n        content: [\n          html`<wizard-textfield\n            .maybeValue=${this.name}\n            helper=\"${translate('substation.wizard.nameHelper')}\"\n            label=\"name\"\n            required\n            dialogInitialFocus\n          ></wizard-textfield>`,\n          html`<wizard-textfield\n            .maybeValue=${this.desc}\n            helper=\"${translate('substation.wizard.descHelper')}\"\n            label=\"desc\"\n            nullable\n          ></wizard-textfield>`,\n        ],\n      },\n    ]);\n    this.dispatchEvent(event);\n  }\n\n  removeSubstation(): void {\n    if (this.element)\n      this.dispatchEvent(\n        newActionEvent({\n          old: { parent: this.parent, element: this.element, reference: null },\n        })\n      );\n  }\n\n  constructor() {\n    super();\n\n    this.substationEditAction = this.substationEditAction.bind(this);\n  }\n\n  renderHeader(): TemplateResult {\n    if (!this.element)\n      return html`<h1>\n        <span style=\"color: var(--base1)\"\n          >${translate('substation.missing')}</span\n        >\n        <mwc-icon-button\n          icon=\"add\"\n          @click=${() => this.openSubstationWizard()}\n        ></mwc-icon-button>\n      </h1>`;\n    return html`\n      <h1>\n        <mwc-icon-button\n          icon=\"playlist_add\"\n          @click=${() => this.openVoltageLevelWizard()}\n        ></mwc-icon-button>\n        <span style=\"position:relative; float:right;\">&#124;</span>\n        <mwc-icon-button\n          icon=\"delete\"\n          @click=${() => this.removeSubstation()}\n        ></mwc-icon-button>\n        <mwc-icon-button\n          icon=\"edit\"\n          @click=${() => this.openSubstationWizard()}\n        ></mwc-icon-button>\n        ${this.name} ${this.desc === null ? '' : html`&mdash;`} ${this.desc}\n      </h1>\n    `;\n  }\n\n  render(): TemplateResult {\n    return html`\n      <div id=\"container\">\n        ${this.renderHeader()}\n        ${Array.from(this.element?.querySelectorAll('VoltageLevel') ?? []).map(\n          voltageLevel =>\n            html`<voltage-level-editor\n              .element=${voltageLevel}\n              .parent=${this.element}\n            ></voltage-level-editor>`\n        )}\n        <mwc-fab\n          @click=${this.openSubstationWizard}\n          icon=\"${this.element ? 'edit' : 'add'}\"\n        >\n        </mwc-fab>\n      </div>\n    `;\n  }\n\n  static styles = css`\n    :host {\n      width: calc(100vw);\n      overflow-x: hidden;\n    }\n\n    #container {\n      background-color: var(--mdc-theme-surface);\n      margin: 10px;\n    }\n\n    h1 {\n      font-family: 'Roboto', sans-serif;\n      font-weight: 300;\n      color: var(--mdc-theme-on-surface);\n      margin: 0px;\n      padding-top: 0.3em;\n      padding-bottom: 0.3em;\n    }\n\n    h1 > mwc-icon-button {\n      position: relative;\n      float: right;\n      top: -5px;\n    }\n\n    mwc-dialog {\n      display: flex;\n      flex-direction: column;\n    }\n\n    mwc-dialog > * {\n      display: block;\n      margin-top: 16px;\n    }\n\n    pre {\n      font-family: 'Roboto Mono', monospace;\n      font-weight: 100;\n    }\n\n    mwc-fab {\n      position: fixed;\n      bottom: 32px;\n      right: 32px;\n    }\n\n    h1 > svg {\n      position: relative;\n      widht: 30px;\n      height: 30px;\n      padding: 6px;\n    }\n  `;\n}\n"]}