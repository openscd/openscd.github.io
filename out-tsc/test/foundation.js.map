{"version":3,"file":"foundation.js","sourceRoot":"","sources":["../../test/foundation.ts"],"names":[],"mappings":"AAAA,qCAAqC;AAErC,OAAO,EAAE,EAAE,EAAa,KAAK,EAAE,UAAU,EAAE,OAAO,EAAE,KAAK,EAAE,MAAM,YAAY,CAAC;AAC9E,OAAO,EAAE,QAAQ,EAAE,MAAM,sBAAsB,CAAC;AAEhD,MAAM,UAAU,WAAW,CACzB,EAAU,EACV,SAAS,GAAG,CAAC,EACb,SAAkB;IAElB,OAAO,EAAE;SACN,MAAM,CAAC,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,IAAI,CAAC,GAAG,SAAS,GAAG,EAAE,EAAE,CAAC;SACjE,MAAM,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;AACnC,CAAC;AAED,MAAM,UAAU,IAAI;IAClB,MAAM,MAAM,GAAG,UAAU,CAAC,EAAE,SAAS,EAAE,CAAC,EAAE,SAAS,EAAE,CAAC,EAAE,CAAC,CAAC;IAC1D,MAAM,OAAO,GAAG,KAAK,CAAC,MAAM,EAAE,MAAM,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IACnE,OAAO,KAAK,CAAC,KAAK,CAAC,MAAM,EAAE,EAAE,SAAS,EAAE,CAAC,EAAE,SAAS,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC,CAAC,GAAG,CACtE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,GAAG,EAAE,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CACpC,CAAC;AACJ,CAAC;AAED,MAAM,UAAU,UAAU;IACxB,OAAO,OAAO,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,EAAE,CAAC,IAAI,GAAG,EAAE,CAAC,CAAC;AAC7D,CAAC;AAED,MAAM,CAAC,MAAM,MAAM,GAAG;IACpB,QAAQ,EAAE,yBAAyB;IACnC,OAAO,EAAE,yBAAyB;IAClC,OAAO,EAAE,yBAAyB;IAClC,QAAQ,EAAE,cAAc;IACxB,OAAO,EAAE,eAAe;IACxB,OAAO,EAAE,IAAI,MAAM,CAAC,IAAI,QAAQ,CAAC,OAAO,GAAG,CAAC;IAC5C,QAAQ,EAAE,IAAI,MAAM,CAAC,IAAI,QAAQ,CAAC,QAAQ,GAAG,CAAC;IAC9C,KAAK,EAAE,IAAI,MAAM,CAAC,IAAI,QAAQ,CAAC,gBAAgB,GAAG,CAAC;IACnD,IAAI,EAAE,IAAI,MAAM,CAAC,IAAI,QAAQ,CAAC,gBAAgB,GAAG,CAAC;IAClD,IAAI,EAAE,2GAA2G;IACjH,GAAG,EAAE,aAAa;IAClB,MAAM,EAAE,gBAAgB;IACxB,KAAK,EAAE,UAAU;IACjB,KAAK,EAAE,IAAI,MAAM,CAAC,GAAG,GAAG,QAAQ,CAAC,OAAO,GAAG,GAAG,CAAC;IAC/C,SAAS,EAAE,wBAAwB;IACnC,cAAc,EAAE,qBAAqB;IACrC,yBAAyB,EACvB,gFAAgF;CACnF,CAAC;AAEF,MAAM,CAAC,MAAM,aAAa,GAAG;IAC3B,QAAQ,EAAE,mBAAmB;IAC7B,OAAO,EAAE,oBAAoB;IAC7B,OAAO,EAAE,UAAU;CACpB,CAAC","sourcesContent":["/* eslint-disable no-control-regex */\n\nimport fc, { Arbitrary, array, hexaString, integer, tuple } from 'fast-check';\nimport { patterns } from '../src/foundation.js';\n\nexport function regexString(\n  re: RegExp,\n  minLength = 0,\n  maxLength?: number\n): Arbitrary<string> {\n  return fc\n    .string({ minLength, maxLength: maxLength ?? 2 * minLength + 10 })\n    .filter(char => re.test(char));\n}\n\nexport function ipV6(): Arbitrary<string> {\n  const h16Arb = hexaString({ minLength: 1, maxLength: 4 });\n  const ls32Arb = tuple(h16Arb, h16Arb).map(([a, b]) => `${a}:${b}`);\n  return tuple(array(h16Arb, { minLength: 6, maxLength: 6 }), ls32Arb).map(\n    ([eh, l]) => `${eh.join(':')}:${l}`\n  );\n}\n\nexport function ipV6SubNet(): Arbitrary<string> {\n  return integer({ min: 1, max: 127 }).map(num => `/${num}`);\n}\n\nexport const regExp = {\n  tIEDName: /^[A-Za-z][0-9A-Za-z_]*$/,\n  tLDInst: /^[A-Za-z][0-9A-Za-z_]*$/,\n  tPrefix: /^[A-Za-z][0-9A-Za-z_]*$/,\n  tLNClass: /^[A-Z]{1,4}$/,\n  tLNInst: /^[0-9]{0,12}$/,\n  decimal: new RegExp(`^${patterns.decimal}$`),\n  unsigned: new RegExp(`^${patterns.unsigned}$`),\n  tName: new RegExp(`^${patterns.normalizedString}$`),\n  desc: new RegExp(`^${patterns.normalizedString}$`),\n  IPv4: /^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])$/,\n  OSI: /^[0-9A-F]+$/,\n  OSIAPi: /^[0-9\\u002C]+$/,\n  OSIid: /^[0-9]+$/,\n  token: new RegExp('^' + patterns.nmToken + '$'),\n  tAsciName: /^[A-Za-z][0-9A-Za-z_]$/,\n  tRestrName1stL: /^[a-z][0-9A-Za-z]*$/,\n  abstractDataAttributeName:\n    /^((T)|(Test)|(Check)|(SIUnit)|(Open)|(SBO)|(SBOw)|(Cancel)|[a-z][0-9A-Za-z]*)$/,\n};\n\nexport const inverseRegExp = {\n  unsigned: /[^0-9.+]|.[^0-9.]/,\n  decimal: /[^0-9.+-]|.[^0-9.]/,\n  integer: /[^0-9+-]/,\n};\n"]}